{"version":3,"sources":["map-to-registry.js"],"names":[],"mappings":";;AAAA,IAAI,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,CAAA;;AAExB,IAAI,GAAG,GAAG,OAAO,CAAC,QAAQ,CAAC;IACvB,GAAG,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAA;;AAEpC,MAAM,CAAC,OAAO,GAAG,aAAa,CAAA;;AAE9B,SAAS,aAAa,CAAC,IAAI,EAAE,MAAM,EAAE,EAAE,EAAE;AACvC,KAAG,CAAC,KAAK,CAAC,eAAe,EAAE,MAAM,EAAE,IAAI,CAAC,CAAA;AACxC,MAAI,QAAQ,CAAA;;;AAGZ,MAAI,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,CAAA;AACpB,MAAI,IAAI,CAAC,KAAK,EAAE;;AAEd,QAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,CAAA;;AAE/B,OAAG,CAAC,KAAK,CAAC,eAAe,EAAE,2BAA2B,EAAE,IAAI,CAAC,KAAK,CAAC,CAAA;;AAEnE,YAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,CAAA;AAC/C,QAAI,CAAC,QAAQ,EAAE;AACb,SAAG,CAAC,OAAO,CAAC,eAAe,EAAE,yCAAyC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAA;KACpF;GACF;;;AAGD,MAAI,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;AAC/B,MAAI,CAAC,QAAQ,IAAI,KAAK,EAAE;;AAEtB,QAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,KAAK,GAAG,GAAG,GAAG,KAAK,CAAA;;AAEhD,OAAG,CAAC,KAAK,CAAC,eAAe,EAAE,qBAAqB,EAAE,KAAK,CAAC,CAAA;;AAExD,YAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,KAAK,GAAG,WAAW,CAAC,CAAA;AAC1C,QAAI,CAAC,QAAQ,EAAE;AACb,SAAG,CAAC,OAAO,CAAC,eAAe,EAAE,2CAA2C,EAAE,KAAK,CAAC,CAAA;KACjF;GACF;;;AAGD,MAAI,CAAC,QAAQ,EAAE;AACb,OAAG,CAAC,KAAK,CAAC,eAAe,EAAE,wBAAwB,CAAC,CAAA;AACpD,YAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAA;GAClC;;AAED,KAAG,CAAC,KAAK,CAAC,eAAe,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAA;;AAEhD,MAAI,IAAI,GAAG,MAAM,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAA;;;AAG/C,MAAI,UAAU,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,QAAQ,GAAC,GAAG,GAAG,QAAQ,CAAA;AACrE,MAAI,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,CAAA;AACvC,KAAG,CAAC,KAAK,CAAC,eAAe,EAAE,KAAK,EAAE,GAAG,CAAC,CAAA;;AAEtC,IAAE,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,CAAC,CAAA;CAChC","file":"map-to-registry-compiled.js","sourcesContent":["var url = require(\"url\")\n\nvar log = require(\"npmlog\")\n  , npa = require(\"npm-package-arg\")\n\nmodule.exports = mapToRegistry\n\nfunction mapToRegistry(name, config, cb) {\n  log.silly(\"mapToRegistry\", \"name\", name)\n  var registry\n\n  // the name itself takes precedence\n  var data = npa(name)\n  if (data.scope) {\n    // the name is definitely scoped, so escape now\n    name = name.replace(\"/\", \"%2f\")\n\n    log.silly(\"mapToRegistry\", \"scope (from package name)\", data.scope)\n\n    registry = config.get(data.scope + \":registry\")\n    if (!registry) {\n      log.verbose(\"mapToRegistry\", \"no registry URL found in name for scope\", data.scope)\n    }\n  }\n\n  // ...then --scope=@scope or --scope=scope\n  var scope = config.get(\"scope\")\n  if (!registry && scope) {\n    // I'm an enabler, sorry\n    if (scope.charAt(0) !== \"@\") scope = \"@\" + scope\n\n    log.silly(\"mapToRegistry\", \"scope (from config)\", scope)\n\n    registry = config.get(scope + \":registry\")\n    if (!registry) {\n      log.verbose(\"mapToRegistry\", \"no registry URL found in config for scope\", scope)\n    }\n  }\n\n  // ...and finally use the default registry\n  if (!registry) {\n    log.silly(\"mapToRegistry\", \"using default registry\")\n    registry = config.get(\"registry\")\n  }\n\n  log.silly(\"mapToRegistry\", \"registry\", registry)\n\n  var auth = config.getCredentialsByURI(registry)\n\n  // normalize registry URL so resolution doesn't drop a piece of registry URL\n  var normalized = registry.slice(-1) !== \"/\" ? registry+\"/\" : registry\n  var uri = url.resolve(normalized, name)\n  log.silly(\"mapToRegistry\", \"uri\", uri)\n\n  cb(null, uri, auth, normalized)\n}\n"]}