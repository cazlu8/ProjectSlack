{"version":3,"sources":["locker.js"],"names":[],"mappings":"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","file":"locker-compiled.js","sourcesContent":["var crypto = require(\"crypto\")\nvar resolve = require(\"path\").resolve\n\nvar lockfile = require(\"lockfile\")\nvar log = require(\"npmlog\")\nvar mkdirp = require(\"mkdirp\")\n\nvar npm = require(\"../npm.js\")\nvar getStat = require(\"../cache/get-stat.js\")\n\nvar installLocks = {}\n\nfunction lockFileName (base, name) {\n  var c = name.replace(/[^a-zA-Z0-9]+/g, \"-\").replace(/^-+|-+$/g, \"\")\n    , p = resolve(base, name)\n    , h = crypto.createHash(\"sha1\").update(p).digest(\"hex\")\n    , l = resolve(npm.cache, \"_locks\")\n\n  return resolve(l, c.substr(0, 24)+\"-\"+h.substr(0, 16)+\".lock\")\n}\n\nfunction lock (base, name, cb) {\n  getStat(function (er) {\n    var lockDir = resolve(npm.cache, \"_locks\")\n    mkdirp(lockDir, function () {\n      if (er) return cb(er)\n\n      var opts = { stale:   npm.config.get(\"cache-lock-stale\")\n                 , retries: npm.config.get(\"cache-lock-retries\")\n                 , wait:    npm.config.get(\"cache-lock-wait\") }\n      var lf = lockFileName(base, name)\n      lockfile.lock(lf, opts, function (er) {\n        if (er) log.warn(\"locking\", lf, \"failed\", er)\n\n        if (!er) {\n          log.verbose(\"lock\", \"using\", lf, \"for\", resolve(base, name))\n          installLocks[lf] = true\n        }\n\n        cb(er)\n      })\n    })\n  })\n}\n\nfunction unlock (base, name, cb) {\n  var lf = lockFileName(base, name)\n    , locked = installLocks[lf]\n  if (locked === false) {\n    return process.nextTick(cb)\n  }\n  else if (locked === true) {\n    lockfile.unlock(lf, function (er) {\n      if (er) {\n        log.warn(\"unlocking\", lf, \"failed\", er)\n      }\n      else {\n        installLocks[lf] = false\n        log.verbose(\"unlock\", \"done using\", lf, \"for\", resolve(base, name))\n      }\n\n      cb(er)\n    })\n  }\n  else {\n    throw new Error(\n      \"Attempt to unlock \" + resolve(base, name) + \", which hasn't been locked\"\n    )\n  }\n}\n\nmodule.exports = {\n  lock   : lock,\n  unlock : unlock\n}\n"]}