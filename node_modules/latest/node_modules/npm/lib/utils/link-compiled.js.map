{"version":3,"sources":["link.js"],"names":[],"mappings":";;AACA,MAAM,CAAC,OAAO,GAAG,IAAI,CAAA;AACrB,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAA;;AAE5B,IAAI,EAAE,GAAG,OAAO,CAAC,aAAa,CAAC;IAC3B,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,KAAK;IAC9B,KAAK,GAAG,OAAO,CAAC,QAAQ,CAAC;IACzB,EAAE,GAAG,OAAO,CAAC,gBAAgB,CAAC;IAC9B,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC;IACtB,GAAG,GAAG,OAAO,CAAC,WAAW,CAAC,CAAA;;AAE9B,SAAS,YAAY,CAAE,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE;AAC3C,IAAE,CAAC,IAAI,CAAC,IAAI,EAAE,UAAU,EAAE,EAAE;AAC1B,QAAI,EAAE,EAAE,OAAO,EAAE,EAAE,CAAA;AACnB,QAAI,CAAC,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,CAAC,CAAA;GAC3B,CAAC,CAAA;CACH;;AAED,SAAS,IAAI,CAAE,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE;AACxC,MAAI,OAAO,EAAE,KAAK,UAAU,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,KAAK,CAAA;AACnD,MAAI,OAAO,EAAE,KAAK,UAAU,EAAE,EAAE,GAAG,MAAM,EAAE,MAAM,GAAG,IAAI,CAAA;AACxD,MAAI,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,MAAM,GAAG,KAAK,CAAA;;AAE3C,IAAE,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAA;AACrB,MAAI,MAAM,GAAG,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;AACtC,MAAI,CAAC,GAAG,IAAI,OAAO,CAAC,QAAQ,KAAK,OAAO,EAAE;;AAExC,UAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAA;;;AAG9C,QAAI,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,EAAE,MAAM,GAAG,IAAI,CAAA;GAChD;;AAED,OAAK,CACD,CAAE,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,EAClB,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAChB,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,EACzB,CAAC,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE,EAAE,EAAE,UAAU,CAAC,CAAE,EAC3C,EAAE,CAAC,CAAA;CACR","file":"link-compiled.js","sourcesContent":["\nmodule.exports = link\nlink.ifExists = linkIfExists\n\nvar fs = require(\"graceful-fs\")\n  , chain = require(\"slide\").chain\n  , mkdir = require(\"mkdirp\")\n  , rm = require(\"./gently-rm.js\")\n  , path = require(\"path\")\n  , npm = require(\"../npm.js\")\n\nfunction linkIfExists (from, to, gently, cb) {\n  fs.stat(from, function (er) {\n    if (er) return cb()\n    link(from, to, gently, cb)\n  })\n}\n\nfunction link (from, to, gently, abs, cb) {\n  if (typeof cb !== \"function\") cb = abs, abs = false\n  if (typeof cb !== \"function\") cb = gently, gently = null\n  if (npm.config.get(\"force\")) gently = false\n\n  to = path.resolve(to)\n  var target = from = path.resolve(from)\n  if (!abs && process.platform !== \"win32\") {\n    // junctions on windows must be absolute\n    target = path.relative(path.dirname(to), from)\n    // if there is no folder in common, then it will be much\n    // longer, and using a relative link is dumb.\n    if (target.length >= from.length) target = from\n  }\n\n  chain\n    ( [ [fs, \"stat\", from]\n      , [rm, to, gently]\n      , [mkdir, path.dirname(to)]\n      , [fs, \"symlink\", target, to, \"junction\"] ]\n    , cb)\n}\n"]}