{"version":3,"sources":["spawn.js"],"names":[],"mappings":";;AAAA,MAAM,CAAC,OAAO,GAAG,KAAK,CAAA;;AAEtB,IAAI,MAAM,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC,KAAK,CAAA;AAC3C,IAAI,YAAY,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAA;;AAEjD,SAAS,KAAK,CAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE;AAClC,MAAI,GAAG,GAAG,MAAM,CAAC,GAAG,EAAE,IAAI,EAAE,OAAO,CAAC,CAAA;AACpC,MAAI,MAAM,GAAG,IAAI,YAAY,EAAE,CAAA;;AAE/B,KAAG,CAAC,EAAE,CAAC,OAAO,EAAE,UAAU,EAAE,EAAE;AAC5B,MAAE,CAAC,IAAI,GAAG,GAAG,CAAA;AACb,UAAM,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC,CAAA;GACzB,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE,MAAM,EAAE;;;AAGrC,QAAI,IAAI,KAAK,GAAG,EAAE;AAChB,UAAI,EAAE,GAAG,IAAI,KAAK,CAAC,cAAc,CAAC,CAAA;AAClC,QAAE,CAAC,IAAI,GAAG,QAAQ,CAAA;AAClB,QAAE,CAAC,KAAK,GAAG,QAAQ,CAAA;AACnB,QAAE,CAAC,OAAO,GAAG,OAAO,CAAA;AACpB,QAAE,CAAC,IAAI,GAAG,GAAG,CAAA;AACb,YAAM,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC,CAAA;KACzB,MAAM;AACL,YAAM,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,MAAM,CAAC,CAAA;KACnC;GACF,CAAC,CAAA;;AAEF,QAAM,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAA;AACxB,QAAM,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAA;AAC1B,QAAM,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAA;AAC1B,QAAM,CAAC,IAAI,GAAG,UAAU,GAAG,EAAE;AAAE,WAAO,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;GAAE,CAAA;;AAErD,SAAO,MAAM,CAAA;CACd","file":"spawn-compiled.js","sourcesContent":["module.exports = spawn\n\nvar _spawn = require(\"child_process\").spawn\nvar EventEmitter = require(\"events\").EventEmitter\n\nfunction spawn (cmd, args, options) {\n  var raw = _spawn(cmd, args, options)\n  var cooked = new EventEmitter()\n\n  raw.on(\"error\", function (er) {\n    er.file = cmd\n    cooked.emit(\"error\", er)\n  }).on(\"close\", function (code, signal) {\n    // Create ENOENT error because Node.js v0.8 will not emit\n    // an `error` event if the command could not be found.\n    if (code === 127) {\n      var er = new Error('spawn ENOENT')\n      er.code = 'ENOENT'\n      er.errno = 'ENOENT'\n      er.syscall = 'spawn'\n      er.file = cmd\n      cooked.emit('error', er)\n    } else {\n      cooked.emit(\"close\", code, signal)\n    }\n  })\n\n  cooked.stdin = raw.stdin\n  cooked.stdout = raw.stdout\n  cooked.stderr = raw.stderr\n  cooked.kill = function (sig) { return raw.kill(sig) }\n\n  return cooked\n}\n"]}