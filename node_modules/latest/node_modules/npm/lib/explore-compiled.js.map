{"version":3,"sources":["explore.js"],"names":[],"mappings":";;;;;AAGA,MAAM,CAAC,OAAO,GAAG,OAAO,CAAA;AACxB,OAAO,CAAC,KAAK,GAAG,+BAA+B,CAAA;AAC/C,OAAO,CAAC,UAAU,GAAG,OAAO,CAAC,yCAAyC,CAAC,CAAA;;AAEvE,IAAI,GAAG,GAAG,OAAO,CAAC,UAAU,CAAC;IACzB,KAAK,GAAG,OAAO,CAAC,eAAe,CAAC;IAChC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC;IACtB,EAAE,GAAG,OAAO,CAAC,aAAa,CAAC,CAAA;;AAE/B,SAAS,OAAO,CAAE,IAAI,EAAE,EAAE,EAAE;AAC1B,MAAI,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;AACzD,MAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAA;AACpB,MAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAA;AAC5B,MAAI,IAAI,EAAE,IAAI,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA,KACxB,IAAI,GAAG,EAAE,CAAA;;AAEd,MAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAA;AAClC,MAAI,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;AAChC,IAAE,CAAC,IAAI,CAAC,GAAG,EAAE,UAAU,EAAE,EAAE,CAAC,EAAE;AAC5B,QAAI,EAAE,IAAI,CAAC,CAAC,CAAC,WAAW,EAAE,EAAE,OAAO,EAAE,CAAC,IAAI,KAAK,CAC7C,uBAAuB,GAAC,CAAC,GAAC,gBAAgB,CAAC,CAAC,CAAA;AAC9C,QAAI,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,GAAG,CAC3B,cAAc,GAAC,GAAG,GAAC,IAAI,GACvB,mCAAmC,CAAC,CAAA;;AAEtC,OAAG,CAAC,OAAO,CAAC,IAAI,EAAE,CAAA;AAClB,QAAI,KAAK,GAAG,KAAK,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,CAAA;AAC3D,SAAK,CAAC,EAAE,CAAC,OAAO,EAAE,UAAU,EAAE,EAAE;;AAE9B,UAAI,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,EAAE,EAAE,CAAA;AAC7B,QAAE,CAAC,EAAE,CAAC,CAAA;KACP,CAAC,CAAA;GACH,CAAC,CAAA;CACH","file":"explore-compiled.js","sourcesContent":["// npm explore <pkg>[@<version>]\n// open a subshell to the package folder.\n\nmodule.exports = explore\nexplore.usage = \"npm explore <pkg> [ -- <cmd>]\"\nexplore.completion = require(\"./utils/completion/installed-shallow.js\")\n\nvar npm = require(\"./npm.js\")\n  , spawn = require(\"./utils/spawn\")\n  , path = require(\"path\")\n  , fs = require(\"graceful-fs\")\n\nfunction explore (args, cb) {\n  if (args.length < 1 || !args[0]) return cb(explore.usage)\n  var p = args.shift()\n  args = args.join(\" \").trim()\n  if (args) args = [\"-c\", args]\n  else args = []\n\n  var cwd = path.resolve(npm.dir, p)\n  var sh = npm.config.get(\"shell\")\n  fs.stat(cwd, function (er, s) {\n    if (er || !s.isDirectory()) return cb(new Error(\n      \"It doesn't look like \"+p+\" is installed.\"))\n    if (!args.length) console.log(\n      \"\\nExploring \"+cwd+\"\\n\"+\n      \"Type 'exit' or ^D when finished\\n\")\n\n    npm.spinner.stop()\n    var shell = spawn(sh, args, { cwd: cwd, stdio: \"inherit\" })\n    shell.on(\"close\", function (er) {\n      // only fail if non-interactive.\n      if (!args.length) return cb()\n      cb(er)\n    })\n  })\n}\n"]}