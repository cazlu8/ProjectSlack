{"version":3,"sources":["logout.js"],"names":[],"mappings":";;AAAA,MAAM,CAAC,OAAO,GAAG,MAAM,CAAA;;AAEvB,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAA;AAChC,IAAI,GAAG,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAA;;AAE3B,IAAI,GAAG,GAAG,OAAO,CAAC,UAAU,CAAC,CAAA;AAC7B,IAAI,aAAa,GAAG,OAAO,CAAC,4BAA4B,CAAC,CAAA;;AAEzD,MAAM,CAAC,KAAK,GAAG,mCAAmC,CAAA;;AAElD,SAAS,MAAM,CAAE,IAAI,EAAE,EAAE,EAAE;AACzB,KAAG,CAAC,OAAO,CAAC,KAAK,EAAE,CAAA;AACnB,IAAE,GAAG,OAAO,CAAC,EAAE,CAAC,CAAA;;AAEhB,eAAa,CAAC,GAAG,EAAE,GAAG,CAAC,MAAM,EAAE,UAAU,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE;AACnE,QAAI,GAAG,EAAE,OAAO,EAAE,CAAC,GAAG,CAAC,CAAA;;AAEvB,QAAI,IAAI,CAAC,KAAK,EAAE;AACd,SAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,4BAA4B,EAAE,UAAU,CAAC,CAAA;AAC/D,SAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,UAAU,GAAG,EAAE;AAC7D,YAAI,GAAG,EAAE,OAAO,EAAE,CAAC,GAAG,CAAC,CAAA;;AAEvB,WAAG,CAAC,MAAM,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAA;AAC5C,WAAG,CAAC,OAAO,CAAC,IAAI,EAAE,CAAA;AAClB,WAAG,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,CAAA;OAC5B,CAAC,CAAA;KACH,MACI,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE;AACvC,SAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,+BAA+B,EAAE,UAAU,CAAC,CAAA;AAClE,SAAG,CAAC,MAAM,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAA;AAC5C,SAAG,CAAC,OAAO,CAAC,IAAI,EAAE,CAAA;AAClB,SAAG,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,CAAA;KAC5B,MACI;AACH,QAAE,CAAC,IAAI,KAAK,CACV,kBAAkB,EAAE,UAAU,GAAG,GAAG,EAAE,mBAAmB,CAC1D,CAAC,CAAA;KACH;GACF,CAAC,CAAA;CACH","file":"logout-compiled.js","sourcesContent":["module.exports = logout\n\nvar dezalgo = require(\"dezalgo\")\nvar log = require(\"npmlog\")\n\nvar npm = require(\"./npm.js\")\nvar mapToRegistry = require(\"./utils/map-to-registry.js\")\n\nlogout.usage = \"npm logout [--registry] [--scope]\"\n\nfunction logout (args, cb) {\n  npm.spinner.start()\n  cb = dezalgo(cb)\n\n  mapToRegistry(\"/\", npm.config, function (err, uri, auth, normalized) {\n    if (err) return cb(err)\n\n    if (auth.token) {\n      log.verbose(\"logout\", \"clearing session token for\", normalized)\n      npm.registry.logout(normalized, { auth: auth }, function (err) {\n        if (err) return cb(err)\n\n        npm.config.clearCredentialsByURI(normalized)\n        npm.spinner.stop()\n        npm.config.save(\"user\", cb)\n      })\n    }\n    else if (auth.username || auth.password) {\n      log.verbose(\"logout\", \"clearing user credentials for\", normalized)\n      npm.config.clearCredentialsByURI(normalized)\n      npm.spinner.stop()\n      npm.config.save(\"user\", cb)\n    }\n    else {\n      cb(new Error(\n        \"Not logged in to\", normalized + \",\", \"so can't log out.\"\n      ))\n    }\n  })\n}\n"]}