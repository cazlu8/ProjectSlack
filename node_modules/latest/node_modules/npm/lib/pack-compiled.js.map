{"version":3,"sources":["pack.js"],"names":[],"mappings":"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","file":"pack-compiled.js","sourcesContent":["// npm pack <pkg>\n// Packs the specified package into a .tgz file, which can then\n// be installed.\n\nmodule.exports = pack\n\nvar npm = require(\"./npm.js\")\n  , install = require(\"./install.js\")\n  , cache = require(\"./cache.js\")\n  , fs = require(\"graceful-fs\")\n  , chain = require(\"slide\").chain\n  , path = require(\"path\")\n  , cwd = process.cwd()\n  , writeStream = require('fs-write-stream-atomic')\n  , cachedPackageRoot = require(\"./cache/cached-package-root.js\")\n\npack.usage = \"npm pack <pkg>\"\n\n// if it can be installed, it can be packed.\npack.completion = install.completion\n\nfunction pack (args, silent, cb) {\n  if (typeof cb !== \"function\") cb = silent, silent = false\n\n  if (args.length === 0) args = [\".\"]\n\n  chain(args.map(function (arg) { return function (cb) {\n    pack_(arg, cb)\n  }}), function (er, files) {\n    if (er || silent) return cb(er, files)\n    printFiles(files, cb)\n  })\n}\n\nfunction printFiles (files, cb) {\n  files = files.map(function (file) {\n    return path.relative(cwd, file)\n  })\n  console.log(files.join(\"\\n\"))\n  cb()\n}\n\n// add to cache, then cp to the cwd\nfunction pack_ (pkg, cb) {\n  cache.add(pkg, null, null, false, function (er, data) {\n    if (er) return cb(er)\n\n    // scoped packages get special treatment\n    var name = data.name\n    if (name[0] === \"@\") name = name.substr(1).replace(/\\//g, \"-\")\n    var fname = name + \"-\" + data.version + \".tgz\"\n\n    var cached = path.join(cachedPackageRoot(data), \"package.tgz\")\n      , from = fs.createReadStream(cached)\n      , to = writeStream(fname)\n      , errState = null\n\n    from.on(\"error\", cb_)\n    to.on(\"error\", cb_)\n    to.on(\"close\", cb_)\n    from.pipe(to)\n\n    function cb_ (er) {\n      if (errState) return\n      if (er) return cb(errState = er)\n      cb(null, fname)\n    }\n  })\n}\n"]}