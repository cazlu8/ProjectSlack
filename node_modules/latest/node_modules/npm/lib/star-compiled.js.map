{"version":3,"sources":["star.js"],"names":[],"mappings":";;AACA,MAAM,CAAC,OAAO,GAAG,IAAI,CAAA;;AAErB,IAAI,GAAG,GAAG,OAAO,CAAC,UAAU,CAAC;IACzB,GAAG,GAAG,OAAO,CAAC,QAAQ,CAAC;IACvB,QAAQ,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,QAAQ;IACpC,aAAa,GAAG,OAAO,CAAC,4BAA4B,CAAC,CAAA;;AAEzD,IAAI,CAAC,KAAK,GAAG,sCAAsC,GACtC,sCAAsC,CAAA;;AAEnD,IAAI,CAAC,UAAU,GAAG,UAAU,IAAI,EAAE,EAAE,EAAE;;;AAGpC,IAAE,EAAE,CAAA;CACL,CAAA;;AAED,SAAS,IAAI,CAAE,IAAI,EAAE,EAAE,EAAE;AACvB,MAAI,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;AACvC,MAAI,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,IAAS,GAAG,KAAK;MACjD,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,IAAS,GAAG,KAAK;MACjD,KAAK,GAAG,CAAE,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,AAAC,CAAA;AACvC,MAAI,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,CAAA;AACjB,UAAQ,CAAC,IAAI,EAAE,UAAU,GAAG,EAAE,EAAE,EAAE;AAChC,iBAAa,CAAC,GAAG,EAAE,GAAG,CAAC,MAAM,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE;AACtD,UAAI,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAA;;AAErB,UAAI,MAAM,GAAG;AACX,eAAO,EAAG,KAAK;AACf,YAAI,EAAM,IAAI;OACf,CAAA;AACD,SAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,UAAU,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE;AAC3D,YAAI,CAAC,EAAE,EAAE;AACP,iBAAO,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAC,GAAG,CAAC,CAAA;AACxB,aAAG,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;SAC1B;AACD,UAAE,CAAC,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,CAAA;OACvB,CAAC,CAAA;KACH,CAAC,CAAA;GACH,EAAE,EAAE,CAAC,CAAA;CACP","file":"star-compiled.js","sourcesContent":["\nmodule.exports = star\n\nvar npm = require(\"./npm.js\")\n  , log = require(\"npmlog\")\n  , asyncMap = require(\"slide\").asyncMap\n  , mapToRegistry = require(\"./utils/map-to-registry.js\")\n\nstar.usage = \"npm star <package> [pkg, pkg, ...]\\n\"\n           + \"npm unstar <package> [pkg, pkg, ...]\"\n\nstar.completion = function (opts, cb) {\n  // FIXME: there used to be registry completion here, but it stopped making\n  // sense somewhere around 50,000 packages on the registry\n  cb()\n}\n\nfunction star (args, cb) {\n  if (!args.length) return cb(star.usage)\n  var s = npm.config.get(\"unicode\") ? \"\\u2605 \" : \"(*)\"\n    , u = npm.config.get(\"unicode\") ? \"\\u2606 \" : \"( )\"\n    , using = !(npm.command.match(/^un/))\n  if (!using) s = u\n  asyncMap(args, function (pkg, cb) {\n    mapToRegistry(pkg, npm.config, function (er, uri, auth) {\n      if (er) return cb(er)\n\n      var params = {\n        starred : using,\n        auth    : auth\n      }\n      npm.registry.star(uri, params, function (er, data, raw, req) {\n        if (!er) {\n          console.log(s + \" \"+pkg)\n          log.verbose(\"star\", data)\n        }\n        cb(er, data, raw, req)\n      })\n    })\n  }, cb)\n}\n"]}