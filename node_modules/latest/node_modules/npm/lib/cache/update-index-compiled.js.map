{"version":3,"sources":["update-index.js"],"names":[],"mappings":"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","file":"update-index-compiled.js","sourcesContent":["module.exports = updateIndex\n\nvar fs = require('graceful-fs')\nvar assert = require('assert')\nvar path = require('path')\nvar mkdir = require('mkdirp')\nvar chownr = require('chownr')\nvar npm = require('../npm.js')\nvar log = require('npmlog')\nvar cacheFile = require('npm-cache-filename')\nvar getCacheStat = require('./get-stat.js')\nvar mapToRegistry = require('../utils/map-to-registry.js')\n\n/* /-/all is special.\n * It uses timestamp-based caching and partial updates,\n * because it is a monster.\n */\nfunction updateIndex (staleness, cb) {\n  assert(typeof cb === 'function', 'must pass callback to updateIndex')\n\n  mapToRegistry('-/all', npm.config, function (er, uri, auth) {\n    if (er) return cb(er)\n\n    var params = {\n      timeout: staleness,\n      follow: true,\n      staleOk: true,\n      auth: auth\n    }\n    var cacheBase = cacheFile(npm.config.get('cache'))(uri)\n    var cachePath = path.join(cacheBase, '.cache.json')\n    log.info('updateIndex', cachePath)\n\n    getCacheStat(function (er, st) {\n      if (er) return cb(er)\n\n      mkdir(cacheBase, function (er, made) {\n        if (er) return cb(er)\n\n        fs.readFile(cachePath, function (er, data) {\n          if (er) {\n            log.warn('', 'Building the local index for the first time, please be patient')\n            return updateIndex_(uri, params, {}, cachePath, cb)\n          }\n\n          chownr(made || cachePath, st.uid, st.gid, function (er) {\n            if (er) return cb(er)\n\n            try {\n              data = JSON.parse(data)\n            } catch (ex) {\n              fs.writeFile(cachePath, '{}', function (er) {\n                if (er) return cb(new Error('Broken cache.'))\n\n                log.warn('', 'Building the local index for the first time, please be patient')\n                return updateIndex_(uri, params, {}, cachePath, cb)\n              })\n            }\n\n            var t = +data._updated || 0\n            // use the cache and update in the background if it's not too old\n            if (Date.now() - t < 60000) {\n              cb(null, data)\n              cb = function () {}\n            }\n\n            if (t === 0) {\n              log.warn('', 'Building the local index for the first time, please be patient')\n            } else {\n              log.verbose('updateIndex', 'Cached search data present with timestamp', t)\n              uri += '/since?stale=update_after&startkey=' + t\n            }\n            updateIndex_(uri, params, data, cachePath, cb)\n          })\n        })\n      })\n    })\n  })\n}\n\nfunction updateIndex_ (all, params, data, cachePath, cb) {\n  log.silly('update-index', 'fetching', all)\n  npm.registry.request(all, params, function (er, updates, _, res) {\n    if (er) return cb(er, data)\n\n    var headers = res.headers\n    var updated = updates._updated || Date.parse(headers.date)\n\n    Object.keys(updates).forEach(function (p) { data[p] = updates[p] })\n\n    data._updated = updated\n    getCacheStat(function (er, st) {\n      if (er) return cb(er)\n\n      fs.writeFile(cachePath, JSON.stringify(data), function (er) {\n        delete data._updated\n        if (er) return cb(er)\n        chownr(cachePath, st.uid, st.gid, function (er) {\n          cb(er, data)\n        })\n      })\n    })\n  })\n}\n"]}