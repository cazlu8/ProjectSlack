{"version":3,"sources":["add-remote-tarball.js"],"names":[],"mappings":"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","file":"add-remote-tarball-compiled.js","sourcesContent":["var mkdir = require(\"mkdirp\")\n  , assert = require(\"assert\")\n  , log = require(\"npmlog\")\n  , path = require(\"path\")\n  , sha = require(\"sha\")\n  , retry = require(\"retry\")\n  , createWriteStream = require(\"fs-write-stream-atomic\")\n  , npm = require(\"../npm.js\")\n  , inflight = require(\"inflight\")\n  , addLocalTarball = require(\"./add-local-tarball.js\")\n  , cacheFile = require(\"npm-cache-filename\")\n\nmodule.exports = addRemoteTarball\n\nfunction addRemoteTarball (u, pkgData, shasum, auth, cb_) {\n  assert(typeof u === \"string\", \"must have module URL\")\n  assert(typeof cb_ === \"function\", \"must have callback\")\n\n  function cb (er, data) {\n    if (data) {\n      data._from = u\n      data._resolved = u\n      data._shasum = data._shasum || shasum\n    }\n    cb_(er, data)\n  }\n\n  cb_ = inflight(u, cb_)\n  if (!cb_) return log.verbose(\"addRemoteTarball\", u, \"already in flight; waiting\")\n  log.verbose(\"addRemoteTarball\", u, \"not in flight; adding\")\n\n  // XXX Fetch direct to cache location, store tarballs under\n  // ${cache}/registry.npmjs.org/pkg/-/pkg-1.2.3.tgz\n  var tmp = cacheFile(npm.tmp, u)\n\n  function next (er, resp, shasum) {\n    if (er) return cb(er)\n    addLocalTarball(tmp, pkgData, shasum, cb)\n  }\n\n  log.verbose(\"addRemoteTarball\", [u, shasum])\n  mkdir(path.dirname(tmp), function (er) {\n    if (er) return cb(er)\n    addRemoteTarball_(u, tmp, shasum, auth, next)\n  })\n}\n\nfunction addRemoteTarball_ (u, tmp, shasum, auth, cb) {\n  // Tuned to spread 3 attempts over about a minute.\n  // See formula at <https://github.com/tim-kos/node-retry>.\n  var operation = retry.operation({\n    retries: npm.config.get(\"fetch-retries\")\n  , factor: npm.config.get(\"fetch-retry-factor\")\n  , minTimeout: npm.config.get(\"fetch-retry-mintimeout\")\n  , maxTimeout: npm.config.get(\"fetch-retry-maxtimeout\")\n  })\n\n  operation.attempt(function (currentAttempt) {\n    log.info(\"retry\", \"fetch attempt \" + currentAttempt\n      + \" at \" + (new Date()).toLocaleTimeString())\n    fetchAndShaCheck(u, tmp, shasum, auth, function (er, response, shasum) {\n      // Only retry on 408, 5xx or no `response`.\n      var sc = response && response.statusCode\n      var statusRetry = !sc || (sc === 408 || sc >= 500)\n      if (er && statusRetry && operation.retry(er)) {\n        log.warn(\"retry\", \"will retry, error on last attempt: \" + er)\n        return\n      }\n      cb(er, response, shasum)\n    })\n  })\n}\n\nfunction fetchAndShaCheck (u, tmp, shasum, auth, cb) {\n  npm.registry.fetch(u, { auth : auth }, function (er, response) {\n    if (er) {\n      log.error(\"fetch failed\", u)\n      return cb(er, response)\n    }\n\n    var tarball = createWriteStream(tmp, { mode : npm.modes.file })\n    tarball.on(\"error\", function (er) {\n      cb(er)\n      tarball.destroy()\n    })\n\n    tarball.on(\"finish\", function () {\n      if (!shasum) {\n        // Well, we weren't given a shasum, so at least sha what we have\n        // in case we want to compare it to something else later\n        return sha.get(tmp, function (er, shasum) {\n          log.silly(\"fetchAndShaCheck\", \"shasum\", shasum)\n          cb(er, response, shasum)\n        })\n      }\n\n      // validate that the url we just downloaded matches the expected shasum.\n      log.silly(\"fetchAndShaCheck\", \"shasum\", shasum)\n      sha.check(tmp, shasum, function (er) {\n        if (er && er.message) {\n          // add original filename for better debuggability\n          er.message = er.message + \"\\n\" + \"From:     \" + u\n        }\n        return cb(er, response, shasum)\n      })\n    })\n\n    response.pipe(tarball)\n  })\n}\n"]}