{"version":3,"sources":["tag.js"],"names":[],"mappings":";;;;AAEA,MAAM,CAAC,OAAO,GAAG,GAAG,CAAA;AACpB,GAAG,CAAC,KAAK,GAAG,qCAAqC,CAAA;;AAEjD,GAAG,CAAC,UAAU,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC,UAAU,CAAA;;AAErD,IAAI,GAAG,GAAG,OAAO,CAAC,UAAU,CAAC;IACzB,aAAa,GAAG,OAAO,CAAC,4BAA4B,CAAC;IACrD,GAAG,GAAG,OAAO,CAAC,iBAAiB,CAAC;IAChC,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC;IAC1B,GAAG,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAA;;AAE3B,SAAS,GAAG,CAAE,IAAI,EAAE,EAAE,EAAE;AACtB,MAAI,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC;MAC/B,OAAO,GAAG,KAAK,CAAC,IAAI;MACpB,OAAO,GAAG,KAAK,CAAC,OAAO;MACvB,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,IAAI,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;;AAE7C,GAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAA;;AAEZ,MAAI,CAAC,OAAO,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,UAAU,GAAC,GAAG,CAAC,KAAK,CAAC,CAAA;;AAE/D,MAAI,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;AACxB,QAAI,EAAE,GAAG,IAAI,KAAK,CAAC,6CAA6C,GAAG,CAAC,CAAC,CAAA;AACrE,WAAO,EAAE,CAAC,EAAE,CAAC,CAAA;GACd;;AAED,KAAG,CAAC,IAAI,CAAC,KAAK,EAAE,yDAAyD,CAAC,CAAA;;AAE1E,eAAa,CAAC,OAAO,EAAE,GAAG,CAAC,MAAM,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE;AAC1D,QAAI,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAA;;AAErB,QAAI,MAAM,GAAG;AACX,aAAO,EAAG,OAAO;AACjB,SAAG,EAAO,CAAC;AACX,UAAI,EAAM,IAAI;KACf,CAAA;AACD,OAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE,CAAC,CAAA;GAClC,CAAC,CAAA;CACH","file":"tag-compiled.js","sourcesContent":["// turns out tagging isn't very complicated\n// all the smarts are in the couch.\nmodule.exports = tag\ntag.usage = \"npm tag <project>@<version> [<tag>]\"\n\ntag.completion = require(\"./unpublish.js\").completion\n\nvar npm = require(\"./npm.js\")\n  , mapToRegistry = require(\"./utils/map-to-registry.js\")\n  , npa = require(\"npm-package-arg\")\n  , semver = require(\"semver\")\n  , log = require(\"npmlog\")\n\nfunction tag (args, cb) {\n  var thing = npa(args.shift() || \"\")\n    , project = thing.name\n    , version = thing.rawSpec\n    , t = args.shift() || npm.config.get(\"tag\")\n\n  t = t.trim()\n\n  if (!project || !version || !t) return cb(\"Usage:\\n\"+tag.usage)\n\n  if (semver.validRange(t)) {\n    var er = new Error(\"Tag name must not be a valid SemVer range: \" + t)\n    return cb(er)\n  }\n\n  log.warn(\"tag\", \"This command is deprecated. Use `npm dist-tag` instead.\")\n\n  mapToRegistry(project, npm.config, function (er, uri, auth) {\n    if (er) return cb(er)\n\n    var params = {\n      version : version,\n      tag     : t,\n      auth    : auth\n    }\n    npm.registry.tag(uri, params, cb)\n  })\n}\n"]}