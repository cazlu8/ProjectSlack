{"version":3,"sources":["load-prefix.js"],"names":[],"mappings":";;AAAA,MAAM,CAAC,OAAO,GAAG,UAAU,CAAA;;AAE3B,IAAI,UAAU,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAA;AAC5C,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAA;;AAE1B,SAAS,UAAU,CAAE,EAAE,EAAE;AACvB,MAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;;AAEtB,QAAM,CAAC,cAAc,CAAC,IAAI,EAAE,QAAQ,EAClC,EAAE,GAAG,EAAG,CAAA,UAAU,MAAM,EAAE;AACtB,UAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;AAC1B,UAAI,CAAC,CAAC,GAAG,cAAc,GAAG,aAAa,CAAC,GAAG,MAAM,CAAA;KAClD,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC;AACZ,OAAG,EAAG,CAAA,YAAY;AAChB,UAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;AAC1B,aAAO,CAAC,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAA;KAChD,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC;AACZ,cAAU,EAAG,IAAI;GAClB,CAAC,CAAA;;AAEJ,QAAM,CAAC,cAAc,CAAC,IAAI,EAAE,cAAc,EACxC,EAAE,GAAG,EAAG,CAAA,UAAU,MAAM,EAAE;AACtB,UAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAA;KAC3B,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC;AACZ,OAAG,EAAG,CAAA,YAAY;AAChB,aAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAA;KACxC,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC;AACZ,cAAU,EAAG,IAAI;GAClB,CAAC,CAAA;;AAEJ,MAAI,CAAC,CAAA;AACL,QAAM,CAAC,cAAc,CAAC,IAAI,EAAE,aAAa,EACvC,EAAE,GAAG,EAAG,aAAU,MAAM,EAAE;AAAE,OAAC,GAAG,MAAM,CAAA;KAAE;AACtC,OAAG,EAAG,eAAY;AAAE,aAAO,CAAC,CAAA;KAAE;AAC9B,cAAU,EAAE,IAAI,EAAE,CAAC,CAAA;;;;;AAKvB,MAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,EAAE;AACvD,KAAC,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;AAC5B,WAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAA;GACrB,MAAM;AACL,cAAU,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,UAAU,EAAE,EAAE,KAAK,EAAE;AAC7C,OAAC,GAAG,KAAK,CAAA;AACT,QAAE,CAAC,EAAE,CAAC,CAAA;KACP,CAAC,CAAA;GACH;CACF","file":"load-prefix-compiled.js","sourcesContent":["module.exports = loadPrefix\n\nvar findPrefix = require(\"./find-prefix.js\")\nvar path = require(\"path\")\n\nfunction loadPrefix (cb) {\n  var cli = this.list[0]\n\n  Object.defineProperty(this, \"prefix\",\n    { set : function (prefix) {\n        var g = this.get(\"global\")\n        this[g ? \"globalPrefix\" : \"localPrefix\"] = prefix\n      }.bind(this)\n    , get : function () {\n        var g = this.get(\"global\")\n        return g ? this.globalPrefix : this.localPrefix\n      }.bind(this)\n    , enumerable : true\n    })\n\n  Object.defineProperty(this, \"globalPrefix\",\n    { set : function (prefix) {\n        this.set(\"prefix\", prefix)\n      }.bind(this)\n    , get : function () {\n        return path.resolve(this.get(\"prefix\"))\n      }.bind(this)\n    , enumerable : true\n    })\n\n  var p\n  Object.defineProperty(this, \"localPrefix\",\n    { set : function (prefix) { p = prefix },\n      get : function () { return p }\n    , enumerable: true })\n\n  // try to guess at a good node_modules location.\n  // If we are *explicitly* given a prefix on the cli, then\n  // always use that.  otherwise, infer local prefix from cwd.\n  if (Object.prototype.hasOwnProperty.call(cli, \"prefix\")) {\n    p = path.resolve(cli.prefix)\n    process.nextTick(cb)\n  } else {\n    findPrefix(process.cwd(), function (er, found) {\n      p = found\n      cb(er)\n    })\n  }\n}\n"]}