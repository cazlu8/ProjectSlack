{"version":3,"sources":["unbuild.js"],"names":[],"mappings":"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","file":"unbuild-compiled.js","sourcesContent":["module.exports = unbuild\nunbuild.usage = \"npm unbuild <folder>\\n(this is plumbing)\"\n\nvar readJson = require(\"read-package-json\")\n  , gentlyRm = require(\"./utils/gently-rm.js\")\n  , npm = require(\"./npm.js\")\n  , path = require(\"path\")\n  , isInside = require(\"path-is-inside\")\n  , lifecycle = require(\"./utils/lifecycle.js\")\n  , asyncMap = require(\"slide\").asyncMap\n  , chain = require(\"slide\").chain\n  , log = require(\"npmlog\")\n  , build = require(\"./build.js\")\n\n// args is a list of folders.\n// remove any bins/etc, and then delete the folder.\nfunction unbuild (args, silent, cb) {\n  if (typeof silent === \"function\") cb = silent, silent = false\n  asyncMap(args, unbuild_(silent), cb)\n}\n\nfunction unbuild_ (silent) { return function (folder, cb_) {\n  function cb (er) {\n    cb_(er, path.relative(npm.root, folder))\n  }\n  folder = path.resolve(folder)\n  var base = isInside(folder, npm.prefix) ? npm.prefix : folder\n  delete build._didBuild[folder]\n  log.verbose(\"unbuild\", folder.substr(npm.prefix.length + 1))\n  readJson(path.resolve(folder, \"package.json\"), function (er, pkg) {\n    // if no json, then just trash it, but no scripts or whatever.\n    if (er) return gentlyRm(folder, false, base, cb)\n    chain\n      ( [ [lifecycle, pkg, \"preuninstall\", folder, false, true]\n        , [lifecycle, pkg, \"uninstall\", folder, false, true]\n        , !silent && function(cb) {\n            console.log(\"unbuild \" + pkg._id)\n            cb()\n          }\n        , [rmStuff, pkg, folder]\n        , [lifecycle, pkg, \"postuninstall\", folder, false, true]\n        , [gentlyRm, folder, false, base] ]\n      , cb )\n  })\n}}\n\nfunction rmStuff (pkg, folder, cb) {\n  // if it's global, and folder is in {prefix}/node_modules,\n  // then bins are in {prefix}/bin\n  // otherwise, then bins are in folder/../.bin\n  var parent = path.dirname(folder)\n    , gnm = npm.dir\n    , top = gnm === parent\n\n  log.verbose(\"unbuild rmStuff\", pkg._id, \"from\", gnm)\n  if (!top) log.verbose(\"unbuild rmStuff\", \"in\", parent)\n  asyncMap([rmBins, rmMans], function (fn, cb) {\n    fn(pkg, folder, parent, top, cb)\n  }, cb)\n}\n\nfunction rmBins (pkg, folder, parent, top, cb) {\n  if (!pkg.bin) return cb()\n  var binRoot = top ? npm.bin : path.resolve(parent, \".bin\")\n  asyncMap(Object.keys(pkg.bin), function (b, cb) {\n    if (process.platform === \"win32\") {\n      chain([ [gentlyRm, path.resolve(binRoot, b) + \".cmd\", true]\n            , [gentlyRm, path.resolve(binRoot, b), true] ], cb)\n    } else {\n      gentlyRm(path.resolve(binRoot, b), true, cb)\n    }\n  }, cb)\n}\n\nfunction rmMans (pkg, folder, parent, top, cb) {\n  if (!pkg.man\n      || !top\n      || process.platform === \"win32\"\n      || !npm.config.get(\"global\")) {\n    return cb()\n  }\n  var manRoot = path.resolve(npm.config.get(\"prefix\"), \"share\", \"man\")\n  log.verbose(\"rmMans\", \"man files are\", pkg.man, \"in\", manRoot)\n  asyncMap(pkg.man, function (man, cb) {\n    if (Array.isArray(man)) {\n      man.forEach(rmMan)\n    } else {\n      rmMan(man)\n    }\n\n    function rmMan (man) {\n      log.silly(\"rmMan\", \"preparing to remove\", man)\n      var parseMan = man.match(/(.*\\.([0-9]+)(\\.gz)?)$/)\n      if (!parseMan) {\n        log.error(\n          \"rmMan\", man, \"is not a valid name for a man file.\",\n          \"Man files must end with a number, \" +\n          \"and optionally a .gz suffix if they are compressed.\"\n        )\n        return cb()\n      }\n\n      var stem = parseMan[1]\n      var sxn = parseMan[2]\n      var gz = parseMan[3] || \"\"\n      var bn = path.basename(stem)\n      var manDest = path.join(\n        manRoot,\n        \"man\"+sxn,\n        (bn.indexOf(pkg.name) === 0 ? bn : pkg.name+\"-\"+bn)+\".\"+sxn+gz\n      )\n      gentlyRm(manDest, true, cb)\n    }\n  }, cb)\n}\n"]}