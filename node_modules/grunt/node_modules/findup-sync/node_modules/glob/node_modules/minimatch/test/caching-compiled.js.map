{"version":3,"sources":["caching.js"],"names":[],"mappings":";;AAAA,IAAI,SAAS,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAAA;AACpD,IAAI,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,CAAA;AACxB,GAAG,CAAC,IAAI,CAAC,YAAY,EAAE,UAAU,CAAC,EAAE;AAClC,MAAI,GAAG,GAAG,IAAI,SAAS,CAAC,KAAK,CAAC,CAAA;AAC9B,MAAI,GAAG,GAAG,IAAI,SAAS,CAAC,KAAK,CAAC,CAAA;AAC9B,GAAC,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,4BAA4B,CAAC,CAAA;;AAE/C,OAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAG,EAAE;AAC7B,QAAI,SAAS,CAAC,GAAG,GAAC,CAAC,CAAC,CAAA;GACrB;AACD,KAAG,GAAG,IAAI,SAAS,CAAC,KAAK,CAAC,CAAA;AAC1B,GAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,2BAA2B,CAAC,CAAA;AACjD,GAAC,CAAC,GAAG,EAAE,CAAA;CACR,CAAC,CAAA","file":"caching-compiled.js","sourcesContent":["var Minimatch = require(\"../minimatch.js\").Minimatch\nvar tap = require(\"tap\")\ntap.test(\"cache test\", function (t) {\n  var mm1 = new Minimatch(\"a?b\")\n  var mm2 = new Minimatch(\"a?b\")\n  t.equal(mm1, mm2, \"should get the same object\")\n  // the lru should drop it after 100 entries\n  for (var i = 0; i < 100; i ++) {\n    new Minimatch(\"a\"+i)\n  }\n  mm2 = new Minimatch(\"a?b\")\n  t.notEqual(mm1, mm2, \"cache should have dropped\")\n  t.end()\n})\n"]}