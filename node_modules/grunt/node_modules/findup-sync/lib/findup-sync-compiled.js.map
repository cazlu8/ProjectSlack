{"version":3,"sources":["findup-sync.js"],"names":[],"mappings":";;;;;;;;AAQA,YAAY,CAAC;;;AAGb,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;;;AAG3B,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;;AAG1B,MAAM,CAAC,OAAO,GAAG,UAAS,QAAQ,EAAE,OAAO,EAAE;;AAE3C,MAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;AAAE,YAAQ,GAAG,CAAC,QAAQ,CAAC,CAAC;GAAE;;;AAGxD,MAAI,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC;AAC/C,aAAW,CAAC,QAAQ,GAAG,CAAC,CAAC;AACzB,aAAW,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;;AAEvD,MAAI,KAAK,EAAE,QAAQ,CAAC;AACpB,KAAG;;AAED,SAAK,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,UAAS,OAAO,EAAE;AACxC,aAAO,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;KACxC,CAAC,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,CAAC;;AAE5B,QAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;AACpB,aAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;KAC3D;;AAED,YAAQ,GAAG,WAAW,CAAC,GAAG,CAAC;AAC3B,eAAW,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;;GAEvD,QAAQ,WAAW,CAAC,GAAG,KAAK,QAAQ,EAAE;;;AAGvC,SAAO,IAAI,CAAC;CACb,CAAC","file":"findup-sync-compiled.js","sourcesContent":["/*\n * findup-sync\n * https://github.com/cowboy/node-findup-sync\n *\n * Copyright (c) 2013 \"Cowboy\" Ben Alman\n * Licensed under the MIT license.\n */\n\n'use strict';\n\n// Nodejs libs.\nvar path = require('path');\n\n// External libs.\nvar glob = require('glob');\nvar _ = require('lodash');\n\n// Search for a filename in the given directory or all parent directories.\nmodule.exports = function(patterns, options) {\n  // Normalize patterns to an array.\n  if (!Array.isArray(patterns)) { patterns = [patterns]; }\n  // Create globOptions so that it can be modified without mutating the\n  // original object.\n  var globOptions = Object.create(options || {});\n  globOptions.maxDepth = 1;\n  globOptions.cwd = path.resolve(globOptions.cwd || '.');\n\n  var files, lastpath;\n  do {\n    // Search for files matching patterns.\n    files = _(patterns).map(function(pattern) {\n      return glob.sync(pattern, globOptions);\n    }).flatten().uniq().value();\n    // Return file if found.\n    if (files.length > 0) {\n      return path.resolve(path.join(globOptions.cwd, files[0]));\n    }\n    // Go up a directory.\n    lastpath = globOptions.cwd;\n    globOptions.cwd = path.resolve(globOptions.cwd, '..');\n  // If parentpath is the same as basedir, we can't go any higher.\n  } while (globOptions.cwd !== lastpath);\n\n  // No files were found!\n  return null;\n};\n"]}