{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["var RE_SPACEDASH = /[- ]/g;\n// Module exports\nvar iconv = module.exports = {\n    toEncoding: function(str, encoding) {\n        return iconv.getCodec(encoding).toEncoding(str);\n    },\n    fromEncoding: function(buf, encoding) {\n        return iconv.getCodec(encoding).fromEncoding(buf);\n    },\n    encodingExists: function(enc) {\n        loadEncodings();\n        enc = enc.replace(RE_SPACEDASH, \"\").toLowerCase();\n        return (iconv.encodings[enc] !== undefined);\n    },\n    \n    defaultCharUnicode: 'ï¿½',\n    defaultCharSingleByte: '?',\n\n    encodingsLoaded: false,\n    \n    // Get correct codec for given encoding.\n    getCodec: function(encoding) {\n        loadEncodings();\n        var enc = encoding || \"utf8\";\n        var codecOptions = undefined;\n        while (1) {\n            if (getType(enc) === \"String\")\n                enc = enc.replace(RE_SPACEDASH, \"\").toLowerCase();\n            var codec = iconv.encodings[enc];\n            var type = getType(codec);\n            if (type === \"String\") {\n                // Link to other encoding.\n                codecOptions = {originalEncoding: enc};\n                enc = codec;\n            }\n            else if (type === \"Object\" && codec.type != undefined) {\n                // Options for other encoding.\n                codecOptions = codec;\n                enc = codec.type;\n            } \n            else if (type === \"Function\")\n                // Codec itself.\n                return codec(codecOptions);\n            else\n                throw new Error(\"Encoding not recognized: '\" + encoding + \"' (searched as: '\"+enc+\"')\");\n        }\n    },\n    \n    // Define basic encodings\n    encodings: {\n        internal: function(options) {\n            return {\n                toEncoding: toInternalEncoding,\n                fromEncoding: fromInternalEncoding,\n                options: options\n            };\n        },\n        utf8: \"internal\",\n        ucs2: \"internal\",\n        binary: \"internal\",\n        ascii: \"internal\",\n        base64: \"internal\",\n        \n        // Codepage single-byte encodings.\n        singlebyte: function(options) {\n            // Prepare chars if needed\n            if (!options.charsBuf) {\n                if (!options.chars || (options.chars.length !== 128 && options.chars.length !== 256))\n                    throw new Error(\"Encoding '\"+options.type+\"' has incorrect 'chars' (must be of len 128 or 256)\");\n                \n                if (options.chars.length === 128)\n                    options.chars = asciiString + options.chars;\n\n                options.charsBuf = new Buffer(options.chars, 'ucs2');\n            }\n            \n            if (!options.revCharsBuf) {\n                options.revCharsBuf = new Buffer(65536);\n                var defChar = iconv.defaultCharSingleByte.charCodeAt(0);\n                for (var i = 0; i < options.revCharsBuf.length; i++)\n                    options.revCharsBuf[i] = defChar;\n                for (var i = 0; i < options.chars.length; i++)\n                    options.revCharsBuf[options.chars.charCodeAt(i)] = i;\n            }\n\n            return {\n                toEncoding: toSingleByteEncoding,\n                fromEncoding: fromSingleByteEncoding,\n                options: options,\n            };\n        },\n\n        // Codepage double-byte encodings.\n        table: function(options) {\n            if (!options.table) {\n                throw new Error(\"Encoding '\" + options.type + \"' has incorect 'table' option\");\n            }\n            if (!options.revCharsTable) {\n                var revCharsTable = options.revCharsTable = {};\n                for (var i = 0; i <= 0xFFFF; i++) {\n                    revCharsTable[i] = 0;\n                }\n\n                var table = options.table;\n                for (var key in table) {\n                    revCharsTable[table[key]] = +key;\n                }\n            }\n            \n            return {\n                toEncoding: toTableEncoding,\n                fromEncoding: fromTableEncoding,\n                options: options,\n            };\n        }\n    }\n};\n\nfunction toInternalEncoding(str) {\n    return new Buffer(ensureString(str), this.options.originalEncoding);\n}\n\nfunction fromInternalEncoding(buf) {\n    return ensureBuffer(buf).toString(this.options.originalEncoding);\n}\n\nfunction toTableEncoding(str) {\n    str = ensureString(str);\n    var strLen = str.length;\n    var revCharsTable = this.options.revCharsTable;\n    var newBuf = new Buffer(strLen*2), gbkcode, unicode,\n        defaultChar = revCharsTable[iconv.defaultCharUnicode.charCodeAt(0)];\n\n    for (var i = 0, j = 0; i < strLen; i++) {\n        unicode = str.charCodeAt(i);\n        if (unicode >> 7) {\n            gbkcode = revCharsTable[unicode] || defaultChar;\n            newBuf[j++] = gbkcode >> 8; //high byte;\n            newBuf[j++] = gbkcode & 0xFF; //low byte\n        } else {//ascii\n            newBuf[j++] = unicode;\n        }\n    }\n    return newBuf.slice(0, j);\n}\n\nfunction fromTableEncoding(buf) {\n    buf = ensureBuffer(buf);\n    var bufLen = buf.length;\n    var table = this.options.table;\n    var newBuf = new Buffer(bufLen*2), unicode, gbkcode,\n        defaultChar = iconv.defaultCharUnicode.charCodeAt(0);\n\n    for (var i = 0, j = 0; i < bufLen; i++, j+=2) {\n        gbkcode = buf[i];\n        if (gbkcode & 0x80) {\n            gbkcode = (gbkcode << 8) + buf[++i];\n            unicode = table[gbkcode] || defaultChar;\n        } else {\n            unicode = gbkcode;\n        }\n        newBuf[j] = unicode & 0xFF; //low byte\n        newBuf[j+1] = unicode >> 8; //high byte\n    }\n    return newBuf.slice(0, j).toString('ucs2');\n}\n\nfunction toSingleByteEncoding(str) {\n    str = ensureString(str);\n    \n    var buf = new Buffer(str.length);\n    var revCharsBuf = this.options.revCharsBuf;\n    for (var i = 0; i < str.length; i++)\n        buf[i] = revCharsBuf[str.charCodeAt(i)];\n    \n    return buf;\n}\n\nfunction fromSingleByteEncoding(buf) {\n    buf = ensureBuffer(buf);\n    \n    // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.\n    var charsBuf = this.options.charsBuf;\n    var newBuf = new Buffer(buf.length*2);\n    var idx1 = 0, idx2 = 0;\n    for (var i = 0, _len = buf.length; i < _len; i++) {\n        idx1 = buf[i]*2; idx2 = i*2;\n        newBuf[idx2] = charsBuf[idx1];\n        newBuf[idx2+1] = charsBuf[idx1+1];\n    }\n    return newBuf.toString('ucs2');\n}\n\n// Add aliases to convert functions\niconv.encode = iconv.toEncoding;\niconv.decode = iconv.fromEncoding;\n\n// Load other encodings manually from files in /encodings dir.\nfunction loadEncodings() {\n    if (!iconv.encodingsLoaded) {\n        [ require('./encodings/singlebyte'),\n          require('./encodings/gbk'),\n          require('./encodings/big5')\n        ].forEach(function(encodings) {\n            for (var key in encodings)\n                iconv.encodings[key] = encodings[key]\n        });\n        iconv.encodingsLoaded = true;\n    }\n}\n\n\n\n// Utilities\nvar asciiString = '\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t\\n\\x0b\\x0c\\r\\x0e\\x0f\\x10\\x11\\x12\\x13\\x14\\x15\\x16\\x17\\x18\\x19\\x1a\\x1b\\x1c\\x1d\\x1e\\x1f'+\n              ' !\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\\x7f';\n\nvar ensureBuffer = function(buf) {\n    buf = buf || new Buffer(0);\n    return (buf instanceof Buffer) ? buf : new Buffer(\"\"+buf, \"binary\");\n}\n\nvar ensureString = function(str) {\n    str = str || \"\";\n    return (str instanceof Buffer) ? str.toString('utf8') : (\"\"+str);\n}\n\nvar getType = function(obj) {\n    return Object.prototype.toString.call(obj).slice(8, -1);\n}\n\n"]}