{"version":3,"sources":["my-program.js"],"names":[],"mappings":";;;;;;;AAKA,IAAI,IAAI,GAAG,OAAO,CAAC,aAAa,CAAC;IAC7B,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM;IACjC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC;IACtB,SAAS,GAAG,EAAE,KAAK,EAAG,CAAC,MAAM,EAAE,IAAI,CAAC;AACtB,mBAAK,EAAG,CAAC,MAAM,EAAE,MAAM,CAAC;AACxB,mBAAK,EAAG,IAAI;AACZ,oBAAM,EAAG,CAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,CAAE;AACrC,oBAAM,EAAG,OAAO;AAChB,oBAAM,EAAG,OAAO;CACjB;IACb,UAAU,GAAG,EAAE,QAAQ,EAAG,CAAC,OAAO,EAAE,SAAS,CAAC;AAC/B,kBAAI,EAAG,CAAC,OAAO,EAAE,GAAG,CAAC;AACrB,iBAAG,EAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC;AAC1B,iBAAG,EAAG,CAAC,QAAQ,CAAC;AAChB,iBAAG,EAAG,CAAC,QAAQ,EAAE,MAAM,CAAC;AACxB,iBAAG,EAAG,CAAC,QAAQ,CAAC;AAChB,iBAAG,EAAG,QAAQ;CACf;;;;;AAAA;IAKd,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;;AAEzD,OAAO,CAAC,GAAG,CAAC,YAAY,GAAE,OAAO,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAA","file":"my-program-compiled.js","sourcesContent":["#!/usr/bin/env node\n\n//process.env.DEBUG_NOPT = 1\n\n// my-program.js\nvar nopt = require(\"../lib/nopt\")\n  , Stream = require(\"stream\").Stream\n  , path = require(\"path\")\n  , knownOpts = { \"foo\" : [String, null]\n                , \"bar\" : [Stream, Number]\n                , \"baz\" : path\n                , \"bloo\" : [ \"big\", \"medium\", \"small\" ]\n                , \"flag\" : Boolean\n                , \"pick\" : Boolean\n                }\n  , shortHands = { \"foofoo\" : [\"--foo\", \"Mr. Foo\"]\n                 , \"b7\" : [\"--bar\", \"7\"]\n                 , \"m\" : [\"--bloo\", \"medium\"]\n                 , \"p\" : [\"--pick\"]\n                 , \"f\" : [\"--flag\", \"true\"]\n                 , \"g\" : [\"--flag\"]\n                 , \"s\" : \"--flag\"\n                 }\n             // everything is optional.\n             // knownOpts and shorthands default to {}\n             // arg list defaults to process.argv\n             // slice defaults to 2\n  , parsed = nopt(knownOpts, shortHands, process.argv, 2)\n\nconsole.log(\"parsed =\\n\"+ require(\"util\").inspect(parsed))\n"]}