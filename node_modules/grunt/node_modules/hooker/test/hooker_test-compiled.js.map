{"version":3,"sources":["hooker_test.js"],"names":[],"mappings":"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","file":"hooker_test-compiled.js","sourcesContent":["/*global require:true */\nvar hooker = require('../lib/hooker');\n\nexports['hook'] = {\n  setUp: function(done) {\n    this.order = [];\n    this.track = function() {\n      [].push.apply(this.order, arguments);\n    };\n\n    this.prop = 1;\n    this.add = function(a, b) {\n      this.track(\"add\", this.prop, a, b);\n      return this.prop + a + b;\n    };\n\n    this.obj = {\n      that: this,\n      prop: 1,\n      add1: function(a, b) {\n        this.that.track(\"add1\", this.prop, a, b);\n        return this.prop + a + b;\n      },\n      add2: function(a, b) {\n        this.that.track(\"add2\", this.prop, a, b);\n        return this.prop + a + b;\n      },\n      add3: function(a, b) {\n        this.that.track(\"add3\", this.prop, a, b);\n        return this.prop + a + b;\n      }\n    };\n\n    done();\n  },\n  'orig': function(test) {\n    test.expect(1);\n    var orig = this.add;\n    hooker.hook(this, \"add\", function() {});\n    test.strictEqual(hooker.orig(this, \"add\"), orig, \"should return a refernce to the original function.\");\n    test.done();\n  },\n  'once': function(test) {\n    test.expect(5);\n    var orig = this.add;\n    hooker.hook(this, \"add\", {\n      once: true,\n      pre: function(a, b) {\n        // Arguments are passed into pre-hook as specified.\n        this.track(\"before\", this.prop, a, b);\n      }\n    });\n    test.strictEqual(this.add(2, 3), 6, \"should return the original function's result.\");\n    test.deepEqual(this.order, [\"before\", 1, 2, 3, \"add\", 1, 2, 3], \"functions should execute in-order.\");\n    test.strictEqual(this.add, orig, \"should automatically unhook when once is specified.\");\n    this.order = [];\n    test.strictEqual(this.add(2, 3), 6, \"should return the original function's result.\");\n    test.deepEqual(this.order, [\"add\", 1, 2, 3], \"only the original function should execute.\");\n    test.done();\n  },\n  'pre-hook (simple syntax)': function(test) {\n    test.expect(3);\n    // Pre-hook.\n    var result = hooker.hook(this, \"add\", function(a, b) {\n      // Arguments are passed into pre-hook as specified.\n      this.track(\"before\", this.prop, a, b);\n    });\n    test.deepEqual(result, [\"add\"], \"add should have been hooked.\");\n    test.strictEqual(this.add(2, 3), 6, \"should return the original function's result.\");\n    test.deepEqual(this.order, [\"before\", 1, 2, 3, \"add\", 1, 2, 3], \"functions should execute in-order.\");\n    test.done();\n  },\n  'pre-hook': function(test) {\n    test.expect(3);\n    // Pre-hook.\n    var result = hooker.hook(this, \"add\", {\n      pre: function(a, b) {\n        // Arguments are passed into pre-hook as specified.\n        this.track(\"before\", this.prop, a, b);\n      }\n    });\n    test.deepEqual(result, [\"add\"], \"add should have been hooked.\");\n    test.strictEqual(this.add(2, 3), 6, \"should return the original function's result.\");\n    test.deepEqual(this.order, [\"before\", 1, 2, 3, \"add\", 1, 2, 3], \"functions should execute in-order.\");\n    test.done();\n  },\n  'post-hook': function(test) {\n    test.expect(3);\n    // Post-hook.\n    var result = hooker.hook(this, \"add\", {\n      post: function(result, a, b) {\n        // Arguments to post-hook are the original function's return value,\n        // followed by the specified function arguments.\n        this.track(\"after\", this.prop, a, b, result);\n      }\n    });\n    test.deepEqual(result, [\"add\"], \"add should have been hooked.\");\n    test.strictEqual(this.add(2, 3), 6, \"should return the original function's result.\");\n    test.deepEqual(this.order, [\"add\", 1, 2, 3, \"after\", 1, 2, 3, 6], \"functions should execute in-order.\");\n    test.done();\n  },\n  'pre- & post-hook': function(test) {\n    test.expect(2);\n    // Pre- & post-hook.\n    hooker.hook(this, \"add\", {\n      pre: function(a, b) {\n        // Arguments are passed into pre-hook as specified.\n        this.track(\"before\", this.prop, a, b);\n      },\n      post: function(result, a, b) {\n        // Arguments to post-hook are the original function's return value,\n        // followed by the specified function arguments.\n        this.track(\"after\", this.prop, a, b, result);\n      }\n    });\n    test.strictEqual(this.add(2, 3), 6, \"should return the original function's result.\");\n    test.deepEqual(this.order, [\"before\", 1, 2, 3, \"add\", 1, 2, 3, \"after\", 1, 2, 3, 6], \"functions should execute in-order.\");\n    test.done();\n  },\n\n  'pre-hook, return value override': function(test) {\n    test.expect(2);\n    // Pre-hook.\n    hooker.hook(this, \"add\", {\n      pre: function(a, b) {\n        // Arguments are passed into pre-hook as specified.\n        this.track(\"before\", this.prop, a, b);\n        // This return value will override the original function's return value.\n        return hooker.override(\"b\" + this.prop + a + b);\n      }\n    });\n    test.strictEqual(this.add(2, 3), \"b123\", \"should return the overridden result.\");\n    test.deepEqual(this.order, [\"before\", 1, 2, 3, \"add\", 1, 2, 3], \"functions should execute in-order.\");\n    test.done();\n  },\n  'post-hook, return value override': function(test) {\n    test.expect(2);\n    // Post-hook.\n    hooker.hook(this, \"add\", {\n      post: function(result, a, b) {\n        // Arguments to post-hook are the original function's return value,\n        // followed by the specified function arguments.\n        this.track(\"after\", this.prop, a, b, result);\n        // This return value will override the original function's return value.\n        return hooker.override(\"a\" + this.prop + a + b + result);\n      }\n    });\n    test.strictEqual(this.add(2, 3), \"a1236\", \"should return the post-hook overridden result.\");\n    test.deepEqual(this.order, [\"add\", 1, 2, 3, \"after\", 1, 2, 3, 6], \"functions should execute in-order.\");\n    test.done();\n  },\n  'pre- & post-hook, return value override': function(test) {\n    test.expect(2);\n    // Pre- & post-hook.\n    hooker.hook(this, \"add\", {\n      pre: function(a, b) {\n        // Arguments are passed into pre-hook as specified.\n        this.track(\"before\", this.prop, a, b);\n        // This return value will override the original function's return value.\n        return hooker.override(\"b\" + this.prop + a + b);\n      },\n      post: function(result, a, b) {\n        // Arguments to post-hook are the original function's return value,\n        // followed by the specified function arguments.\n        this.track(\"after\", this.prop, a, b, result);\n        // This return value will override the original function's return value\n        // AND the pre-hook's return value.\n        return hooker.override(\"a\" + this.prop + a + b + result);\n      }\n    });\n    test.strictEqual(this.add(2, 3), \"a1236\", \"should return the overridden result, and post-hook result should take precedence over pre-hook result.\");\n    test.deepEqual(this.order, [\"before\", 1, 2, 3, \"add\", 1, 2, 3, \"after\", 1, 2, 3, 6], \"functions should execute in-order.\");\n    test.done();\n  },\n\n  'pre-hook, filtering arguments': function(test) {\n    test.expect(2);\n    // Pre-hook.\n    hooker.hook(this, \"add\", {\n      pre: function(a, b) {\n        // Arguments are passed into pre-hook as specified.\n        this.track(\"before\", this.prop, a, b);\n        // Return hooker.filter(context, arguments) and they will be passed into\n        // the original function. The \"track\" and \"order\" propterites are just\n        // set here for the same of this unit test.\n        return hooker.filter({prop: \"x\", track: this.track, order: this.order}, [\"y\", \"z\"]);\n      }\n    });\n    test.strictEqual(this.add(2, 3), \"xyz\", \"should return the original function's result, given filtered context and arguments.\");\n    test.deepEqual(this.order, [\"before\", 1, 2, 3, \"add\", \"x\", \"y\", \"z\"], \"functions should execute in-order.\");\n    test.done();\n  },\n  'pre- & post-hook, filtering arguments': function(test) {\n    test.expect(2);\n    // Pre- & post-hook.\n    hooker.hook(this, \"add\", {\n      pre: function(a, b) {\n        // Arguments are passed into pre-hook as specified.\n        this.track(\"before\", this.prop, a, b);\n        // Return hooker.filter(context, arguments) and they will be passed into\n        // the original function. The \"track\" and \"order\" propterites are just\n        // set here for the same of this unit test.\n        return hooker.filter({prop: \"x\", track: this.track, order: this.order}, [\"y\", \"z\"]);\n      },\n      post: function(result, a, b) {\n        // Arguments to post-hook are the original function's return value,\n        // followed by the specified function arguments.\n        this.track(\"after\", this.prop, a, b, result);\n      }\n    });\n    test.strictEqual(this.add(2, 3), \"xyz\", \"should return the original function's result, given filtered context and arguments.\");\n    test.deepEqual(this.order, [\"before\", 1, 2, 3, \"add\", \"x\", \"y\", \"z\", \"after\", 1, 2, 3, \"xyz\"], \"functions should execute in-order.\");\n    test.done();\n  },\n  'pre- & post-hook, filtering arguments, return value override': function(test) {\n    test.expect(2);\n    // Pre- & post-hook.\n    hooker.hook(this, \"add\", {\n      pre: function(a, b) {\n        // Arguments are passed into pre-hook as specified.\n        this.track(\"before\", this.prop, a, b);\n        // Return hooker.filter(context, arguments) and they will be passed into\n        // the original function. The \"track\" and \"order\" propterites are just\n        // set here for the same of this unit test.\n        return hooker.filter({prop: \"x\", track: this.track, order: this.order}, [\"y\", \"z\"]);\n      },\n      post: function(result, a, b) {\n        // Arguments to post-hook are the original function's return value,\n        // followed by the specified function arguments.\n        this.track(\"after\", this.prop, a, b, result);\n        // This return value will override the original function's return value\n        // AND the pre-hook's return value.\n        return hooker.override(\"a\" + this.prop + a + b + result);\n      }\n    });\n    test.strictEqual(this.add(2, 3), \"a123xyz\", \"should return the post-hook overridden result.\");\n    test.deepEqual(this.order, [\"before\", 1, 2, 3, \"add\", \"x\", \"y\", \"z\", \"after\", 1, 2, 3, \"xyz\"], \"functions should execute in-order.\");\n    test.done();\n  },\n\n  'pre-hook, preempt original function': function(test) {\n    test.expect(2);\n    // Pre-hook.\n    hooker.hook(this, \"add\", {\n      pre: function(a, b) {\n        // Arguments are passed into pre-hook as specified.\n        this.track(\"before\", this.prop, a, b);\n        // Returning hooker.preempt will prevent the original function from being\n        // invoked and optionally set a return value.\n        return hooker.preempt();\n      }\n    });\n    test.strictEqual(this.add(2, 3), undefined, \"should return the value passed to preempt.\");\n    test.deepEqual(this.order, [\"before\", 1, 2, 3], \"functions should execute in-order.\");\n    test.done();\n  },\n  'pre-hook, preempt original function with value': function(test) {\n    test.expect(2);\n    // Pre-hook.\n    hooker.hook(this, \"add\", {\n      pre: function(a, b) {\n        // Arguments are passed into pre-hook as specified.\n        this.track(\"before\", this.prop, a, b);\n        // Returning hooker.preempt will prevent the original function from being\n        // invoked and optionally set a return value.\n        return hooker.preempt(9000);\n      }\n    });\n    test.strictEqual(this.add(2, 3), 9000, \"should return the value passed to preempt.\");\n    test.deepEqual(this.order, [\"before\", 1, 2, 3], \"functions should execute in-order.\");\n    test.done();\n  },\n  'pre- & post-hook, preempt original function with value': function(test) {\n    test.expect(2);\n    // Pre- & post-hook.\n    hooker.hook(this, \"add\", {\n      pre: function(a, b) {\n        // Arguments are passed into pre-hook as specified.\n        this.track(\"before\", this.prop, a, b);\n        // Returning hooker.preempt will prevent the original function from being\n        // invoked and optionally set a return value.\n        return hooker.preempt(9000);\n      },\n      post: function(result, a, b) {\n        // Arguments to post-hook are the original function's return value,\n        // followed by the specified function arguments.\n        this.track(\"after\", this.prop, a, b, result);\n      }\n    });\n    test.strictEqual(this.add(2, 3), 9000, \"should return the value passed to preempt.\");\n    test.deepEqual(this.order, [\"before\", 1, 2, 3, \"after\", 1, 2, 3, 9000], \"functions should execute in-order.\");\n    test.done();\n  },\n  'pre- & post-hook, preempt original function with value, return value override': function(test) {\n    test.expect(2);\n    // Pre- & post-hook.\n    hooker.hook(this, \"add\", {\n      pre: function(a, b) {\n        // Arguments are passed into pre-hook as specified.\n        this.track(\"before\", this.prop, a, b);\n        // Returning hooker.preempt will prevent the original function from being\n        // invoked and optionally set a return value.\n        return hooker.preempt(9000);\n      },\n      post: function(result, a, b) {\n        // Arguments to post-hook are the original function's return value,\n        // followed by the specified function arguments.\n        this.track(\"after\", this.prop, a, b, result);\n        // This return value will override any preempt value set in pre-hook.\n        return hooker.override(\"a\" + this.prop + a + b + result);\n      }\n    });\n    test.strictEqual(this.add(2, 3), \"a1239000\", \"should return the overridden result, and post-hook result should take precedence over preempt value.\");\n    test.deepEqual(this.order, [\"before\", 1, 2, 3, \"after\", 1, 2, 3, 9000], \"functions should execute in-order.\");\n    test.done();\n  },\n  'pre- & post-hook, some properties': function(test) {\n    test.expect(7);\n    // Pre- & post-hook.\n    var result = hooker.hook(this.obj, [\"add1\", \"add2\"], {\n      pre: function(a, b) {\n        // Arguments are passed into pre-hook as specified.\n        this.that.track(\"before\", this.prop, a, b);\n      },\n      post: function(result, a, b) {\n        // Arguments to post-hook are the original function's return value,\n        // followed by the specified function arguments.\n        this.that.track(\"after\", this.prop, a, b, result);\n      }\n    });\n    test.deepEqual(result.sort(), [\"add1\", \"add2\"], \"both functions should have been hooked.\");\n    test.strictEqual(this.obj.add1(2, 3), 6, \"should return the original function's result.\");\n    test.deepEqual(this.order, [\"before\", 1, 2, 3, \"add1\", 1, 2, 3, \"after\", 1, 2, 3, 6], \"functions should execute in-order.\");\n    this.order = [];\n    test.strictEqual(this.obj.add2(2, 3), 6, \"should return the original function's result.\");\n    test.deepEqual(this.order, [\"before\", 1, 2, 3, \"add2\", 1, 2, 3, \"after\", 1, 2, 3, 6], \"functions should execute in-order.\");\n    this.order = [];\n    test.strictEqual(this.obj.add3(2, 3), 6, \"should return the original function's result.\");\n    test.deepEqual(this.order, [\"add3\", 1, 2, 3], \"functions should execute in-order.\");\n    test.done();\n  },\n  'pre- & post-hook, all properties': function(test) {\n    test.expect(7);\n    // Pre- & post-hook.\n    var result = hooker.hook(this.obj, {\n      pre: function(a, b) {\n        // Arguments are passed into pre-hook as specified.\n        this.that.track(\"before\", this.prop, a, b);\n      },\n      post: function(result, a, b) {\n        // Arguments to post-hook are the original function's return value,\n        // followed by the specified function arguments.\n        this.that.track(\"after\", this.prop, a, b, result);\n      }\n    });\n    test.deepEqual(result.sort(), [\"add1\", \"add2\", \"add3\"], \"all functions should have been hooked.\");\n    test.strictEqual(this.obj.add1(2, 3), 6, \"should return the original function's result.\");\n    test.deepEqual(this.order, [\"before\", 1, 2, 3, \"add1\", 1, 2, 3, \"after\", 1, 2, 3, 6], \"functions should execute in-order.\");\n    this.order = [];\n    test.strictEqual(this.obj.add2(2, 3), 6, \"should return the original function's result.\");\n    test.deepEqual(this.order, [\"before\", 1, 2, 3, \"add2\", 1, 2, 3, \"after\", 1, 2, 3, 6], \"functions should execute in-order.\");\n    this.order = [];\n    test.strictEqual(this.obj.add3(2, 3), 6, \"should return the original function's result.\");\n    test.deepEqual(this.order, [\"before\", 1, 2, 3, \"add3\", 1, 2, 3, \"after\", 1, 2, 3, 6], \"functions should execute in-order.\");\n    test.done();\n  },\n  'pre- & post-hook, all properties, passName': function(test) {\n    test.expect(6);\n    // Pre- & post-hook.\n    hooker.hook(this.obj, {\n      passName: true,\n      pre: function(name, a, b) {\n        // Arguments are passed into pre-hook as specified.\n        this.that.track(\"before\", this.prop, name, a, b);\n      },\n      post: function(result, name, a, b) {\n        // Arguments to post-hook are the original function's return value,\n        // followed by the specified function arguments.\n        this.that.track(\"after\", this.prop, name, a, b, result);\n      }\n    });\n    test.strictEqual(this.obj.add1(2, 3), 6, \"should return the original function's result.\");\n    test.deepEqual(this.order, [\"before\", 1, \"add1\", 2, 3, \"add1\", 1, 2, 3, \"after\", 1, \"add1\", 2, 3, 6], \"functions should execute in-order.\");\n    this.order = [];\n    test.strictEqual(this.obj.add2(2, 3), 6, \"should return the original function's result.\");\n    test.deepEqual(this.order, [\"before\", 1, \"add2\", 2, 3, \"add2\", 1, 2, 3, \"after\", 1, \"add2\", 2, 3, 6], \"functions should execute in-order.\");\n    this.order = [];\n    test.strictEqual(this.obj.add3(2, 3), 6, \"should return the original function's result.\");\n    test.deepEqual(this.order, [\"before\", 1, \"add3\", 2, 3, \"add3\", 1, 2, 3, \"after\", 1, \"add3\", 2, 3, 6], \"functions should execute in-order.\");\n    test.done();\n  },\n  'unhook one property': function(test) {\n    test.expect(5);\n    var orig = this.add;\n    hooker.hook(this, \"add\", function() {});\n    var result = hooker.unhook(this, \"add\");\n    test.deepEqual(result, [\"add\"], \"one function should have been unhooked.\");\n    test.strictEqual(this.add, orig, \"should have unhooked, restoring the original function\");\n    result = hooker.unhook(this, \"add\");\n    test.deepEqual(result, [], \"nothing should have been unhooked.\");\n    test.strictEqual(this.add, orig, \"shouldn't explode if already unhooked\");\n    test.strictEqual(this.add.orig, undefined, \"original function shouldn't have an orig property\");\n    test.done();\n  },\n  'unhook some properties': function(test) {\n    test.expect(6);\n    var add1 = this.obj.add1;\n    var add2 = this.obj.add2;\n    hooker.hook(this.obj, [\"add1\", \"add2\"], function() {});\n    test.strictEqual(hooker.orig(this.obj, \"add1\"), add1, \"should return a refernce to the original function\");\n    test.strictEqual(hooker.orig(this.obj, \"add2\"), add2, \"should return a refernce to the original function\");\n    test.strictEqual(hooker.orig(this.obj, \"add3\"), undefined, \"should not have been hooked, so should not have an original function\");\n    var result = hooker.unhook(this.obj, [\"add1\", \"add2\"]);\n    test.deepEqual(result.sort(), [\"add1\", \"add2\"], \"both functions should have been unhooked.\");\n    test.strictEqual(this.obj.add1, add1, \"should have unhooked, restoring the original function\");\n    test.strictEqual(this.obj.add2, add2, \"should have unhooked, restoring the original function\");\n    test.done();\n  },\n  'unhook all properties': function(test) {\n    test.expect(7);\n    var add1 = this.obj.add1;\n    var add2 = this.obj.add2;\n    var add3 = this.obj.add3;\n    hooker.hook(this.obj, function() {});\n    test.strictEqual(hooker.orig(this.obj, \"add1\"), add1, \"should return a refernce to the original function\");\n    test.strictEqual(hooker.orig(this.obj, \"add2\"), add2, \"should return a refernce to the original function\");\n    test.strictEqual(hooker.orig(this.obj, \"add3\"), add3, \"should return a refernce to the original function\");\n    var result = hooker.unhook(this.obj);\n    test.deepEqual(result.sort(), [\"add1\", \"add2\", \"add3\"], \"all functions should have been unhooked.\");\n    test.strictEqual(this.obj.add1, add1, \"should have unhooked, restoring the original function\");\n    test.strictEqual(this.obj.add2, add2, \"should have unhooked, restoring the original function\");\n    test.strictEqual(this.obj.add3, add3, \"should have unhooked, restoring the original function\");\n    test.done();\n  }\n};\n"]}