{"version":3,"sources":["exit.js"],"names":[],"mappings":";;;;;;;;AAQA,YAAY,CAAC;;AAEb,MAAM,CAAC,OAAO,GAAG,SAAS,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE;AAChD,MAAI,CAAC,OAAO,EAAE;AAAE,WAAO,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;GAAE;AAC7D,MAAI,UAAU,GAAG,CAAC,CAAC;;AAEnB,WAAS,SAAS,GAAG;AACnB,QAAI,UAAU,KAAK,OAAO,CAAC,MAAM,EAAE;AACjC,aAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACxB;GACF;AACD,SAAO,CAAC,OAAO,CAAC,UAAS,MAAM,EAAE;;AAE/B,QAAI,MAAM,CAAC,UAAU,KAAK,CAAC,EAAE;AAC3B,gBAAU,EAAE,CAAC;KACd,MAAM;AACL,YAAM,CAAC,KAAK,CAAC,EAAE,EAAE,OAAO,EAAE,YAAW;AACnC,kBAAU,EAAE,CAAC;AACb,iBAAS,EAAE,CAAC;OACb,CAAC,CAAC;KACJ;;AAED,UAAM,CAAC,KAAK,GAAG,YAAW,EAAE,CAAC;GAC9B,CAAC,CAAC;;AAEH,WAAS,EAAE,CAAC;;;;AAIZ,SAAO,CAAC,EAAE,CAAC,MAAM,EAAE,YAAW;AAC5B,WAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;GACxB,CAAC,CAAC;CACJ,CAAC","file":"exit-compiled.js","sourcesContent":["/*\n * exit\n * https://github.com/cowboy/node-exit\n *\n * Copyright (c) 2013 \"Cowboy\" Ben Alman\n * Licensed under the MIT license.\n */\n\n'use strict';\n\nmodule.exports = function exit(exitCode, streams) {\n  if (!streams) { streams = [process.stdout, process.stderr]; }\n  var drainCount = 0;\n  // Actually exit if all streams are drained.\n  function tryToExit() {\n    if (drainCount === streams.length) {\n      process.exit(exitCode);\n    }\n  }\n  streams.forEach(function(stream) {\n    // Count drained streams now, but monitor non-drained streams.\n    if (stream.bufferSize === 0) {\n      drainCount++;\n    } else {\n      stream.write('', 'utf-8', function() {\n        drainCount++;\n        tryToExit();\n      });\n    }\n    // Prevent further writing.\n    stream.write = function() {};\n  });\n  // If all streams were already drained, exit now.\n  tryToExit();\n  // In Windows, when run as a Node.js child process, a script utilizing\n  // this library might just exit with a 0 exit code, regardless. This code,\n  // despite the fact that it looks a bit crazy, appears to fix that.\n  process.on('exit', function() {\n    process.exit(exitCode);\n  });\n};\n"]}