{"version":3,"sources":["chaining.js"],"names":[],"mappings":"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","file":"chaining-compiled.js","sourcesContent":["$(document).ready(function() {\n\n  module(\"Chaining\");\n\n  test(\"map/flatten/reduce\", function() {\n    var lyrics = [\n      \"I'm a lumberjack and I'm okay\",\n      \"I sleep all night and I work all day\",\n      \"He's a lumberjack and he's okay\",\n      \"He sleeps all night and he works all day\"\n    ];\n    var counts = _(lyrics).chain()\n      .map(function(line) { return line.split(''); })\n      .flatten()\n      .reduce(function(hash, l) {\n        hash[l] = hash[l] || 0;\n        hash[l]++;\n        return hash;\n    }, {}).value();\n    ok(counts['a'] == 16 && counts['e'] == 10, 'counted all the letters in the song');\n  });\n\n  test(\"select/reject/sortBy\", function() {\n    var numbers = [1,2,3,4,5,6,7,8,9,10];\n    numbers = _(numbers).chain().select(function(n) {\n      return n % 2 == 0;\n    }).reject(function(n) {\n      return n % 4 == 0;\n    }).sortBy(function(n) {\n      return -n;\n    }).value();\n    equal(numbers.join(', '), \"10, 6, 2\", \"filtered and reversed the numbers\");\n  });\n\n  test(\"select/reject/sortBy in functional style\", function() {\n    var numbers = [1,2,3,4,5,6,7,8,9,10];\n    numbers = _.chain(numbers).select(function(n) {\n      return n % 2 == 0;\n    }).reject(function(n) {\n      return n % 4 == 0;\n    }).sortBy(function(n) {\n      return -n;\n    }).value();\n    equal(numbers.join(', '), \"10, 6, 2\", \"filtered and reversed the numbers\");\n  });\n\n  test(\"reverse/concat/unshift/pop/map\", function() {\n    var numbers = [1,2,3,4,5];\n    numbers = _(numbers).chain()\n      .reverse()\n      .concat([5, 5, 5])\n      .unshift(17)\n      .pop()\n      .map(function(n){ return n * 2; })\n      .value();\n    equal(numbers.join(', '), \"34, 10, 8, 6, 4, 2, 10, 10\", 'can chain together array functions.');\n  });\n\n});\n"]}