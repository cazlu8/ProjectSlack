{"version":3,"sources":["jslitmus.js"],"names":[],"mappings":"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","file":"jslitmus-compiled.js","sourcesContent":["// JSLitmus.js\n//\n// History:\n//   2008-10-27: Initial release\n//   2008-11-09: Account for iteration loop overhead\n//   2008-11-13: Added OS detection\n//   2009-02-25: Create tinyURL automatically, shift-click runs tests in reverse\n//\n// Copyright (c) 2008-2009, Robert Kieffer\n// All Rights Reserved\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the\n// Software), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// THE SOFTWARE IS PROVIDED AS IS, WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n(function() {\n  // Private methods and state\n\n  // Get platform info but don't go crazy trying to recognize everything\n  // that's out there.  This is just for the major platforms and OSes.\n  var platform = 'unknown platform', ua = navigator.userAgent;\n\n  // Detect OS\n  var oses = ['Windows','iPhone OS','(Intel |PPC )?Mac OS X','Linux'].join('|');\n  var pOS = new RegExp('((' + oses + ') [^ \\);]*)').test(ua) ? RegExp.$1 : null;\n  if (!pOS) pOS = new RegExp('((' + oses + ')[^ \\);]*)').test(ua) ? RegExp.$1 : null;\n\n  // Detect browser\n  var pName = /(Chrome|MSIE|Safari|Opera|Firefox)/.test(ua) ? RegExp.$1 : null;\n\n  // Detect version\n  var vre = new RegExp('(Version|' + pName + ')[ \\/]([^ ;]*)');\n  var pVersion = (pName && vre.test(ua)) ? RegExp.$2 : null;\n  var platform = (pOS && pName && pVersion) ? pName + ' '  + pVersion + ' on ' + pOS : 'unknown platform';\n\n  /**\n  * A smattering of methods that are needed to implement the JSLitmus testbed.\n  */\n  var jsl = {\n    /**\n    * Enhanced version of escape()\n    */\n    escape: function(s) {\n      s = s.replace(/,/g, '\\\\,');\n      s = escape(s);\n      s = s.replace(/\\+/g, '%2b');\n      s = s.replace(/ /g, '+');\n      return s;\n    },\n\n    /**\n    * Get an element by ID.\n    */\n    $: function(id) {\n      return document.getElementById(id);\n    },\n\n    /**\n    * Null function\n    */\n    F: function() {},\n\n    /**\n    * Set the status shown in the UI\n    */\n    status: function(msg) {\n      var el = jsl.$('jsl_status');\n      if (el) el.innerHTML = msg || '';\n    },\n\n    /**\n    * Convert a number to an abbreviated string like, \"15K\" or \"10M\"\n    */\n    toLabel: function(n) {\n      if (n == Infinity) {\n        return 'Infinity';\n      } else if (n > 1e9) {\n        n = Math.round(n/1e8);\n        return n/10 + 'B';\n      } else if (n > 1e6) {\n        n = Math.round(n/1e5);\n        return n/10 + 'M';\n      } else if (n > 1e3) {\n        n = Math.round(n/1e2);\n        return n/10 + 'K';\n      }\n      return n;\n    },\n\n    /**\n    * Copy properties from src to dst\n    */\n    extend: function(dst, src) {\n      for (var k in src) dst[k] = src[k]; return dst;\n    },\n\n    /**\n    * Like Array.join(), but for the key-value pairs in an object\n    */\n    join: function(o, delimit1, delimit2) {\n      if (o.join) return o.join(delimit1);  // If it's an array\n      var pairs = [];\n      for (var k in o) pairs.push(k + delimit1 + o[k]);\n      return pairs.join(delimit2);\n    },\n\n    /**\n    * Array#indexOf isn't supported in IE, so we use this as a cross-browser solution\n    */\n    indexOf: function(arr, o) {\n      if (arr.indexOf) return arr.indexOf(o);\n      for (var i = 0; i < this.length; i++) if (arr[i] === o) return i;\n      return -1;\n    }\n  };\n\n  /**\n  * Test manages a single test (created with\n  * JSLitmus.test())\n  * \n  * @private\n  */\n  var Test = function (name, f) {\n    if (!f) throw new Error('Undefined test function');\n    if (!(/function[^\\(]*\\(([^,\\)]*)/).test(f.toString())) {\n      throw new Error('\"' + name + '\" test: Test is not a valid Function object');\n    }\n    this.loopArg = RegExp.$1;\n    this.name = name;\n    this.f = f;\n  };\n  \n  jsl.extend(Test, /** @lends Test */ {\n    /** Calibration tests for establishing iteration loop overhead */\n    CALIBRATIONS: [\n      new Test('calibrating loop', function(count) {while (count--);}),\n      new Test('calibrating function', jsl.F)\n    ],\n\n    /**\n    * Run calibration tests.  Returns true if calibrations are not yet\n    * complete (in which case calling code should run the tests yet again).\n    * onCalibrated - Callback to invoke when calibrations have finished\n    */\n    calibrate: function(onCalibrated) {\n      for (var i = 0; i < Test.CALIBRATIONS.length; i++) { \n        var cal = Test.CALIBRATIONS[i];\n        if (cal.running) return true;\n        if (!cal.count) {\n          cal.isCalibration = true;\n          cal.onStop = onCalibrated;\n          //cal.MIN_TIME = .1; // Do calibrations quickly\n          cal.run(2e4);\n          return true;\n        }\n      }\n      return false;\n    }\n  });\n\n  jsl.extend(Test.prototype, {/** @lends Test.prototype */\n    /** Initial number of iterations */\n    INIT_COUNT: 10,\n    /** Max iterations allowed (i.e. used to detect bad looping functions) */\n    MAX_COUNT: 1e9,\n    /** Minimum time a test should take to get valid results (secs) */\n    MIN_TIME: .5,\n\n    /** Callback invoked when test state changes */\n    onChange: jsl.F,\n\n    /** Callback invoked when test is finished */\n    onStop: jsl.F,\n\n    /**\n     * Reset test state\n     */\n    reset: function() {\n      delete this.count;\n      delete this.time;\n      delete this.running;\n      delete this.error;\n    },\n\n    /**\n    * Run the test (in a timeout). We use a timeout to make sure the browser\n    * has a chance to finish rendering any UI changes we've made, like\n    * updating the status message.\n    */\n    run: function(count) {\n      count = count || this.INIT_COUNT;\n      jsl.status(this.name + ' x ' + count);\n      this.running = true;\n      var me = this;\n      setTimeout(function() {me._run(count);}, 200);\n    },\n\n    /**\n     * The nuts and bolts code that actually runs a test\n     */\n    _run: function(count) {\n      var me = this;\n\n      // Make sure calibration tests have run\n      if (!me.isCalibration && Test.calibrate(function() {me.run(count);})) return;\n      this.error = null;\n\n      try {\n        var start, f = this.f, now, i = count;\n\n        // Start the timer\n        start = new Date();\n\n        // Now for the money shot.  If this is a looping function ...\n        if (this.loopArg) {\n          // ... let it do the iteration itself\n          f(count);\n        } else {\n          // ... otherwise do the iteration for it\n          while (i--) f();\n        }\n\n        // Get time test took (in secs)\n        this.time = Math.max(1,new Date() - start)/1000;\n\n        // Store iteration count and per-operation time taken\n        this.count = count;\n        this.period = this.time/count;\n\n        // Do we need to do another run?\n        this.running = this.time <= this.MIN_TIME;\n\n        // ... if so, compute how many times we should iterate\n        if (this.running) {\n          // Bump the count to the nearest power of 2\n          var x = this.MIN_TIME/this.time;\n          var pow = Math.pow(2, Math.max(1, Math.ceil(Math.log(x)/Math.log(2))));\n          count *= pow;\n          if (count > this.MAX_COUNT) {\n            throw new Error('Max count exceeded.  If this test uses a looping function, make sure the iteration loop is working properly.');\n          }\n        }\n      } catch (e) {\n        // Exceptions are caught and displayed in the test UI\n        this.reset();\n        this.error = e;\n      }\n\n      // Figure out what to do next\n      if (this.running) {\n        me.run(count);\n      } else {\n        jsl.status('');\n        me.onStop(me);\n      }\n\n      // Finish up\n      this.onChange(this);\n    },\n\n    /**\n    * Get the number of operations per second for this test.\n    * \n    * @param normalize if true, iteration loop overhead taken into account\n    */\n    getHz: function(/**Boolean*/ normalize) {\n      var p = this.period;\n\n      // Adjust period based on the calibration test time\n      if (normalize && !this.isCalibration) {\n        var cal = Test.CALIBRATIONS[this.loopArg ? 0 : 1];\n\n        // If the period is within 20% of the calibration time, then zero the\n        // it out\n        p = p < cal.period*1.2 ? 0 : p - cal.period;\n      }\n\n      return Math.round(1/p);\n    },\n\n    /**\n    * Get a friendly string describing the test\n    */\n    toString: function() {\n      return this.name + ' - '  + this.time/this.count + ' secs';\n    }\n  });\n\n  // CSS we need for the UI\n  var STYLESHEET = '<style> \\\n    #jslitmus {font-family:sans-serif; font-size: 12px;} \\\n    #jslitmus a {text-decoration: none;} \\\n    #jslitmus a:hover {text-decoration: underline;} \\\n    #jsl_status { \\\n      margin-top: 10px; \\\n      font-size: 10px; \\\n      color: #888; \\\n    } \\\n    A IMG  {border:none} \\\n    #test_results { \\\n      margin-top: 10px; \\\n      font-size: 12px; \\\n      font-family: sans-serif; \\\n      border-collapse: collapse; \\\n      border-spacing: 0px; \\\n    } \\\n    #test_results th, #test_results td { \\\n      border: solid 1px #ccc; \\\n      vertical-align: top; \\\n      padding: 3px; \\\n    } \\\n    #test_results th { \\\n      vertical-align: bottom; \\\n      background-color: #ccc; \\\n      padding: 1px; \\\n      font-size: 10px; \\\n    } \\\n    #test_results #test_platform { \\\n      color: #444; \\\n      text-align:center; \\\n    } \\\n    #test_results .test_row { \\\n      color: #006; \\\n      cursor: pointer; \\\n    } \\\n    #test_results .test_nonlooping { \\\n      border-left-style: dotted; \\\n      border-left-width: 2px; \\\n    } \\\n    #test_results .test_looping { \\\n      border-left-style: solid; \\\n      border-left-width: 2px; \\\n    } \\\n    #test_results .test_name {white-space: nowrap;} \\\n    #test_results .test_pending { \\\n    } \\\n    #test_results .test_running { \\\n      font-style: italic; \\\n    } \\\n    #test_results .test_done {} \\\n    #test_results .test_done { \\\n      text-align: right; \\\n      font-family: monospace; \\\n    } \\\n    #test_results .test_error {color: #600;} \\\n    #test_results .test_error .error_head {font-weight:bold;} \\\n    #test_results .test_error .error_body {font-size:85%;} \\\n    #test_results .test_row:hover td { \\\n      background-color: #ffc; \\\n      text-decoration: underline; \\\n    } \\\n    #chart { \\\n      margin: 10px 0px; \\\n      width: 250px; \\\n    } \\\n    #chart img { \\\n      border: solid 1px #ccc; \\\n      margin-bottom: 5px; \\\n    } \\\n    #chart #tiny_url { \\\n      height: 40px; \\\n      width: 250px; \\\n    } \\\n    #jslitmus_credit { \\\n      font-size: 10px; \\\n      color: #888; \\\n      margin-top: 8px; \\\n    } \\\n    </style>';\n\n  // HTML markup for the UI\n  var MARKUP = '<div id=\"jslitmus\"> \\\n      <button onclick=\"JSLitmus.runAll(event)\">Run Tests</button> \\\n      <button id=\"stop_button\" disabled=\"disabled\" onclick=\"JSLitmus.stop()\">Stop Tests</button> \\\n      <br \\> \\\n      <br \\> \\\n      <input type=\"checkbox\" style=\"vertical-align: middle\" id=\"test_normalize\" checked=\"checked\" onchange=\"JSLitmus.renderAll()\"\"> Normalize results \\\n      <table id=\"test_results\"> \\\n        <colgroup> \\\n          <col /> \\\n          <col width=\"100\" /> \\\n        </colgroup> \\\n        <tr><th id=\"test_platform\" colspan=\"2\">' + platform + '</th></tr> \\\n        <tr><th>Test</th><th>Ops/sec</th></tr> \\\n        <tr id=\"test_row_template\" class=\"test_row\" style=\"display:none\"> \\\n          <td class=\"test_name\"></td> \\\n          <td class=\"test_result\">Ready</td> \\\n        </tr> \\\n      </table> \\\n      <div id=\"jsl_status\"></div> \\\n      <div id=\"chart\" style=\"display:none\"> \\\n      <a id=\"chart_link\" target=\"_blank\"><img id=\"chart_image\"></a> \\\n      TinyURL (for chart): \\\n      <iframe id=\"tiny_url\" frameBorder=\"0\" scrolling=\"no\" src=\"\"></iframe> \\\n      </div> \\\n      <a id=\"jslitmus_credit\" title=\"JSLitmus home page\" href=\"http://code.google.com/p/jslitmus\" target=\"_blank\">Powered by JSLitmus</a> \\\n    </div>';\n\n  /**\n   * The public API for creating and running tests\n   */\n  window.JSLitmus = {\n    /** The list of all tests that have been registered with JSLitmus.test */\n    _tests: [],\n    /** The queue of tests that need to be run */\n    _queue: [],\n\n    /**\n    * The parsed query parameters the current page URL.  This is provided as a\n    * convenience for test functions - it's not used by JSLitmus proper\n    */\n    params: {},\n\n    /**\n     * Initialize\n     */\n    _init: function() {\n      // Parse query params into JSLitmus.params[] hash\n      var match = (location + '').match(/([^?#]*)(#.*)?$/);\n      if (match) {\n        var pairs = match[1].split('&');\n        for (var i = 0; i < pairs.length; i++) {\n          var pair = pairs[i].split('=');\n          if (pair.length > 1) {\n            var key = pair.shift();\n            var value = pair.length > 1 ? pair.join('=') : pair[0];\n            this.params[key] = value;\n          }\n        }\n      }\n\n      // Write out the stylesheet.  We have to do this here because IE\n      // doesn't honor sheets written after the document has loaded.\n      document.write(STYLESHEET);\n\n      // Setup the rest of the UI once the document is loaded\n      if (window.addEventListener) {\n        window.addEventListener('load', this._setup, false);\n      } else if (document.addEventListener) {\n        document.addEventListener('load', this._setup, false);\n      } else if (window.attachEvent) {\n        window.attachEvent('onload', this._setup);\n      }\n\n      return this;\n    },\n\n    /**\n     * Set up the UI\n     */\n    _setup: function() {\n      var el = jsl.$('jslitmus_container');\n      if (!el) document.body.appendChild(el = document.createElement('div'));\n\n      el.innerHTML = MARKUP;\n\n      // Render the UI for all our tests\n      for (var i=0; i < JSLitmus._tests.length; i++)\n        JSLitmus.renderTest(JSLitmus._tests[i]);\n    },\n\n    /**\n     * (Re)render all the test results\n     */\n    renderAll: function() {\n      for (var i = 0; i < JSLitmus._tests.length; i++)\n        JSLitmus.renderTest(JSLitmus._tests[i]);\n      JSLitmus.renderChart();\n    },\n\n    /**\n     * (Re)render the chart graphics\n     */\n    renderChart: function() {\n      var url = JSLitmus.chartUrl();\n      jsl.$('chart_link').href = url;\n      jsl.$('chart_image').src = url;\n      jsl.$('chart').style.display = '';\n\n      // Update the tiny URL\n      jsl.$('tiny_url').src = 'http://tinyurl.com/api-create.php?url='+escape(url);\n    },\n\n    /**\n     * (Re)render the results for a specific test\n     */\n    renderTest: function(test) {\n      // Make a new row if needed\n      if (!test._row) {\n        var trow = jsl.$('test_row_template');\n        if (!trow) return;\n\n        test._row = trow.cloneNode(true);\n        test._row.style.display = '';\n        test._row.id = '';\n        test._row.onclick = function() {JSLitmus._queueTest(test);};\n        test._row.title = 'Run ' + test.name + ' test';\n        trow.parentNode.appendChild(test._row);\n        test._row.cells[0].innerHTML = test.name;\n      }\n\n      var cell = test._row.cells[1];\n      var cns = [test.loopArg ? 'test_looping' : 'test_nonlooping'];\n\n      if (test.error) {\n        cns.push('test_error');\n        cell.innerHTML = \n        '<div class=\"error_head\">' + test.error + '</div>' +\n        '<ul class=\"error_body\"><li>' +\n          jsl.join(test.error, ': ', '</li><li>') +\n          '</li></ul>';\n      } else {\n        if (test.running) {\n          cns.push('test_running');\n          cell.innerHTML = 'running';\n        } else if (jsl.indexOf(JSLitmus._queue, test) >= 0) {\n          cns.push('test_pending');\n          cell.innerHTML = 'pending';\n        } else if (test.count) {\n          cns.push('test_done');\n          var hz = test.getHz(jsl.$('test_normalize').checked);\n          cell.innerHTML = hz != Infinity ? hz : '&infin;';\n        } else {\n          cell.innerHTML = 'ready';\n        }\n      }\n      cell.className = cns.join(' ');\n    },\n\n    /**\n     * Create a new test\n     */\n    test: function(name, f) {\n      // Create the Test object\n      var test = new Test(name, f);\n      JSLitmus._tests.push(test);\n\n      // Re-render if the test state changes\n      test.onChange = JSLitmus.renderTest;\n\n      // Run the next test if this one finished\n      test.onStop = function(test) {\n        if (JSLitmus.onTestFinish) JSLitmus.onTestFinish(test);\n        JSLitmus.currentTest = null;\n        JSLitmus._nextTest();\n      };\n\n      // Render the new test\n      this.renderTest(test);\n    },\n\n    /**\n     * Add all tests to the run queue\n     */\n    runAll: function(e) {\n      e = e || window.event;\n      var reverse = e && e.shiftKey, len = JSLitmus._tests.length;\n      for (var i = 0; i < len; i++) {\n        JSLitmus._queueTest(JSLitmus._tests[!reverse ? i : (len - i - 1)]);\n      }\n    },\n\n    /**\n     * Remove all tests from the run queue.  The current test has to finish on\n     * it's own though\n     */\n    stop: function() {\n      while (JSLitmus._queue.length) {\n        var test = JSLitmus._queue.shift();\n        JSLitmus.renderTest(test);\n      }\n    },\n\n    /**\n     * Run the next test in the run queue\n     */\n    _nextTest: function() {\n      if (!JSLitmus.currentTest) {\n        var test = JSLitmus._queue.shift();\n        if (test) {\n          jsl.$('stop_button').disabled = false;\n          JSLitmus.currentTest = test;\n          test.run();\n          JSLitmus.renderTest(test);\n          if (JSLitmus.onTestStart) JSLitmus.onTestStart(test);\n        } else {\n          jsl.$('stop_button').disabled = true;\n          JSLitmus.renderChart();\n        }\n      }\n    },\n\n    /**\n     * Add a test to the run queue\n     */\n    _queueTest: function(test) {\n      if (jsl.indexOf(JSLitmus._queue, test) >= 0) return;\n      JSLitmus._queue.push(test);\n      JSLitmus.renderTest(test);\n      JSLitmus._nextTest();\n    },\n\n    /**\n     * Generate a Google Chart URL that shows the data for all tests\n     */\n    chartUrl: function() {\n      var n = JSLitmus._tests.length, markers = [], data = [];\n      var d, min = 0, max = -1e10;\n      var normalize = jsl.$('test_normalize').checked;\n\n      // Gather test data\n      for (var i=0; i < JSLitmus._tests.length; i++) {\n        var test = JSLitmus._tests[i];\n        if (test.count) {\n          var hz = test.getHz(normalize);\n          var v = hz != Infinity ? hz : 0;\n          data.push(v);\n          markers.push('t' + jsl.escape(test.name + '(' + jsl.toLabel(hz)+ ')') + ',000000,0,' +\n            markers.length + ',10');\n          max = Math.max(v, max);\n        }\n      }\n      if (markers.length <= 0) return null;\n\n      // Build chart title\n      var title = document.getElementsByTagName('title');\n      title = (title && title.length) ? title[0].innerHTML : null;\n      var chart_title = [];\n      if (title) chart_title.push(title);\n      chart_title.push('Ops/sec (' + platform + ')');\n\n      // Build labels\n      var labels = [jsl.toLabel(min), jsl.toLabel(max)];\n\n      var w = 250, bw = 15;\n      var bs = 5;\n      var h = markers.length*(bw + bs) + 30 + chart_title.length*20;\n\n      var params = {\n        chtt: escape(chart_title.join('|')),\n        chts: '000000,10',\n        cht: 'bhg',                     // chart type\n        chd: 't:' + data.join(','),     // data set\n        chds: min + ',' + max,          // max/min of data\n        chxt: 'x',                      // label axes\n        chxl: '0:|' + labels.join('|'), // labels\n        chsp: '0,1',\n        chm: markers.join('|'),         // test names\n        chbh: [bw, 0, bs].join(','),    // bar widths\n        // chf: 'bg,lg,0,eeeeee,0,eeeeee,.5,ffffff,1', // gradient\n        chs: w + 'x' + h\n      };\n      return 'http://chart.apis.google.com/chart?' + jsl.join(params, '=', '&');\n    } \n  };\n\n  JSLitmus._init();\n})();"]}