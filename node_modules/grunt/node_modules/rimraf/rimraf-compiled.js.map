{"version":3,"sources":["rimraf.js"],"names":[],"mappings":"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","file":"rimraf-compiled.js","sourcesContent":["module.exports = rimraf\nrimraf.sync = rimrafSync\n\nvar assert = require(\"assert\")\nvar path = require(\"path\")\nvar fs = require(\"fs\")\n\n// for EMFILE handling\nvar timeout = 0\nexports.EMFILE_MAX = 1000\nexports.BUSYTRIES_MAX = 3\n\nvar isWindows = (process.platform === \"win32\")\n\nfunction defaults (options) {\n  var methods = [\n    'unlink',\n    'chmod',\n    'stat',\n    'rmdir',\n    'readdir'\n  ]\n  methods.forEach(function(m) {\n    options[m] = options[m] || fs[m]\n    m = m + 'Sync'\n    options[m] = options[m] || fs[m]\n  })\n}\n\nfunction rimraf (p, options, cb) {\n  if (typeof options === 'function') {\n    cb = options\n    options = {}\n  }\n  assert(p)\n  assert(options)\n  assert(typeof cb === 'function')\n\n  defaults(options)\n\n  if (!cb) throw new Error(\"No callback passed to rimraf()\")\n\n  var busyTries = 0\n  rimraf_(p, options, function CB (er) {\n    if (er) {\n      if (isWindows && (er.code === \"EBUSY\" || er.code === \"ENOTEMPTY\") &&\n          busyTries < exports.BUSYTRIES_MAX) {\n        busyTries ++\n        var time = busyTries * 100\n        // try again, with the same exact callback as this one.\n        return setTimeout(function () {\n          rimraf_(p, options, CB)\n        }, time)\n      }\n\n      // this one won't happen if graceful-fs is used.\n      if (er.code === \"EMFILE\" && timeout < exports.EMFILE_MAX) {\n        return setTimeout(function () {\n          rimraf_(p, options, CB)\n        }, timeout ++)\n      }\n\n      // already gone\n      if (er.code === \"ENOENT\") er = null\n    }\n\n    timeout = 0\n    cb(er)\n  })\n}\n\n// Two possible strategies.\n// 1. Assume it's a file.  unlink it, then do the dir stuff on EPERM or EISDIR\n// 2. Assume it's a directory.  readdir, then do the file stuff on ENOTDIR\n//\n// Both result in an extra syscall when you guess wrong.  However, there\n// are likely far more normal files in the world than directories.  This\n// is based on the assumption that a the average number of files per\n// directory is >= 1.\n//\n// If anyone ever complains about this, then I guess the strategy could\n// be made configurable somehow.  But until then, YAGNI.\nfunction rimraf_ (p, options, cb) {\n  assert(p)\n  assert(options)\n  assert(typeof cb === 'function')\n\n  options.unlink(p, function (er) {\n    if (er) {\n      if (er.code === \"ENOENT\")\n        return cb(null)\n      if (er.code === \"EPERM\")\n        return (isWindows)\n          ? fixWinEPERM(p, options, er, cb)\n          : rmdir(p, options, er, cb)\n      if (er.code === \"EISDIR\")\n        return rmdir(p, options, er, cb)\n    }\n    return cb(er)\n  })\n}\n\nfunction fixWinEPERM (p, options, er, cb) {\n  assert(p)\n  assert(options)\n  assert(typeof cb === 'function')\n  if (er)\n    assert(er instanceof Error)\n\n  options.chmod(p, 666, function (er2) {\n    if (er2)\n      cb(er2.code === \"ENOENT\" ? null : er)\n    else\n      options.stat(p, function(er3, stats) {\n        if (er3)\n          cb(er3.code === \"ENOENT\" ? null : er)\n        else if (stats.isDirectory())\n          rmdir(p, options, er, cb)\n        else\n          options.unlink(p, cb)\n      })\n  })\n}\n\nfunction fixWinEPERMSync (p, options, er) {\n  assert(p)\n  assert(options)\n  if (er)\n    assert(er instanceof Error)\n\n  try {\n    options.chmodSync(p, 666)\n  } catch (er2) {\n    if (er2.code === \"ENOENT\")\n      return\n    else\n      throw er\n  }\n\n  try {\n    var stats = options.statSync(p)\n  } catch (er3) {\n    if (er3.code === \"ENOENT\")\n      return\n    else\n      throw er\n  }\n\n  if (stats.isDirectory())\n    rmdirSync(p, options, er)\n  else\n    options.unlinkSync(p)\n}\n\nfunction rmdir (p, options, originalEr, cb) {\n  assert(p)\n  assert(options)\n  if (originalEr)\n    assert(originalEr instanceof Error)\n  assert(typeof cb === 'function')\n\n  // try to rmdir first, and only readdir on ENOTEMPTY or EEXIST (SunOS)\n  // if we guessed wrong, and it's not a directory, then\n  // raise the original error.\n  options.rmdir(p, function (er) {\n    if (er && (er.code === \"ENOTEMPTY\" || er.code === \"EEXIST\" || er.code === \"EPERM\"))\n      rmkids(p, options, cb)\n    else if (er && er.code === \"ENOTDIR\")\n      cb(originalEr)\n    else\n      cb(er)\n  })\n}\n\nfunction rmkids(p, options, cb) {\n  assert(p)\n  assert(options)\n  assert(typeof cb === 'function')\n\n  options.readdir(p, function (er, files) {\n    if (er)\n      return cb(er)\n    var n = files.length\n    if (n === 0)\n      return options.rmdir(p, cb)\n    var errState\n    files.forEach(function (f) {\n      rimraf(path.join(p, f), options, function (er) {\n        if (errState)\n          return\n        if (er)\n          return cb(errState = er)\n        if (--n === 0)\n          options.rmdir(p, cb)\n      })\n    })\n  })\n}\n\n// this looks simpler, and is strictly *faster*, but will\n// tie up the JavaScript thread and fail on excessively\n// deep directory trees.\nfunction rimrafSync (p, options) {\n  options = options || {}\n  defaults(options)\n\n  assert(p)\n  assert(options)\n\n  try {\n    options.unlinkSync(p)\n  } catch (er) {\n    if (er.code === \"ENOENT\")\n      return\n    if (er.code === \"EPERM\")\n      return isWindows ? fixWinEPERMSync(p, options, er) : rmdirSync(p, options, er)\n    if (er.code !== \"EISDIR\")\n      throw er\n    rmdirSync(p, options, er)\n  }\n}\n\nfunction rmdirSync (p, options, originalEr) {\n  assert(p)\n  assert(options)\n  if (originalEr)\n    assert(originalEr instanceof Error)\n\n  try {\n    options.rmdirSync(p)\n  } catch (er) {\n    if (er.code === \"ENOENT\")\n      return\n    if (er.code === \"ENOTDIR\")\n      throw originalEr\n    if (er.code === \"ENOTEMPTY\" || er.code === \"EEXIST\" || er.code === \"EPERM\")\n      rmkidsSync(p, options)\n  }\n}\n\nfunction rmkidsSync (p, options) {\n  assert(p)\n  assert(options)\n  options.readdirSync(p).forEach(function (f) {\n    rimrafSync(path.join(p, f), options)\n  })\n  options.rmdirSync(p, options)\n}\n"]}