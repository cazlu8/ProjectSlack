{"version":3,"sources":["reflect.js"],"names":[],"mappings":"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","file":"reflect-compiled.js","sourcesContent":["// This is modified from Mozilla Reflect.parse test suite (the file is located\n// at js/src/tests/js1_8_5/extensions/reflect-parse.js in the source tree).\n//\n// Some notable changes:\n//   * Removed unsupported features (destructuring, let, comprehensions...).\n//   * Removed tests for E4X (ECMAScript for XML).\n//   * Removed everything related to builder.\n//   * Enclosed every 'Pattern' construct with a scope.\n//   * Tweaked some expected tree to remove generator field.\n//   * Removed the test for bug 632030 and bug 632024.\n\n/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 4 -*- */\n/*\n * Any copyright is dedicated to the Public Domain.\n * http://creativecommons.org/licenses/publicdomain/\n */\n\n(function (exports) {\n\nfunction testReflect(Reflect, Pattern) {\n\nfunction program(elts) { return Pattern({ type: \"Program\", body: elts }) }\nfunction exprStmt(expr) { return Pattern({ type: \"ExpressionStatement\", expression: expr }) }\nfunction throwStmt(expr) { return Pattern({ type: \"ThrowStatement\", argument: expr }) }\nfunction returnStmt(expr) { return Pattern({ type: \"ReturnStatement\", argument: expr }) }\nfunction yieldExpr(expr) { return Pattern({ type: \"YieldExpression\", argument: expr }) }\nfunction lit(val) { return Pattern({ type: \"Literal\", value: val }) }\nvar thisExpr = Pattern({ type: \"ThisExpression\" });\nfunction funDecl(id, params, body) { return Pattern({ type: \"FunctionDeclaration\",\n                                             id: id,\n                                             params: params,\n                                             defaults: [],\n                                             body: body,\n                                             rest: null,\n                                             generator: false,\n                                             expression: false\n                                             }) }\nfunction genFunDecl(id, params, body) { return Pattern({ type: \"FunctionDeclaration\",\n                                                id: id,\n                                                params: params,\n                                                defaults: [],\n                                                body: body,\n                                                rest: null,\n                                                generator: false,\n                                                expression: false\n                                                }) }\nfunction declarator(id, init) { return Pattern({ type: \"VariableDeclarator\", id: id, init: init }) }\nfunction varDecl(decls) { return Pattern({ type: \"VariableDeclaration\", declarations: decls, kind: \"var\" }) }\nfunction letDecl(decls) { return Pattern({ type: \"VariableDeclaration\", declarations: decls, kind: \"let\" }) }\nfunction constDecl(decls) { return Pattern({ type: \"VariableDeclaration\", declarations: decls, kind: \"const\" }) }\nfunction ident(name) { return Pattern({ type: \"Identifier\", name: name }) }\nfunction dotExpr(obj, id) { return Pattern({ type: \"MemberExpression\", computed: false, object: obj, property: id }) }\nfunction memExpr(obj, id) { return Pattern({ type: \"MemberExpression\", computed: true, object: obj, property: id }) }\nfunction forStmt(init, test, update, body) { return Pattern({ type: \"ForStatement\", init: init, test: test, update: update, body: body }) }\nfunction forInStmt(lhs, rhs, body) { return Pattern({ type: \"ForInStatement\", left: lhs, right: rhs, body: body, each: false }) }\nfunction forEachInStmt(lhs, rhs, body) { return Pattern({ type: \"ForInStatement\", left: lhs, right: rhs, body: body, each: true }) }\nfunction breakStmt(lab) { return Pattern({ type: \"BreakStatement\", label: lab }) }\nfunction continueStmt(lab) { return Pattern({ type: \"ContinueStatement\", label: lab }) }\nfunction blockStmt(body) { return Pattern({ type: \"BlockStatement\", body: body }) }\nvar emptyStmt = Pattern({ type: \"EmptyStatement\" });\nfunction ifStmt(test, cons, alt) { return Pattern({ type: \"IfStatement\", test: test, alternate: alt, consequent: cons }) }\nfunction labStmt(lab, stmt) { return Pattern({ type: \"LabeledStatement\", label: lab, body: stmt }) }\nfunction withStmt(obj, stmt) { return Pattern({ type: \"WithStatement\", object: obj, body: stmt }) }\nfunction whileStmt(test, stmt) { return Pattern({ type: \"WhileStatement\", test: test, body: stmt }) }\nfunction doStmt(stmt, test) { return Pattern({ type: \"DoWhileStatement\", test: test, body: stmt }) }\nfunction switchStmt(disc, cases) { return Pattern({ type: \"SwitchStatement\", discriminant: disc, cases: cases }) }\nfunction caseClause(test, stmts) { return Pattern({ type: \"SwitchCase\", test: test, consequent: stmts }) }\nfunction defaultClause(stmts) { return Pattern({ type: \"SwitchCase\", test: null, consequent: stmts }) }\nfunction catchClause(id, guard, body) { if (guard) { return Pattern({ type: \"GuardedCatchClause\", param: id, guard: guard, body: body }) } else { return Pattern({ type: \"CatchClause\", param: id, body: body }) } }\nfunction tryStmt(body, guarded, catches, fin) { return Pattern({ type: \"TryStatement\", block: body, guardedHandlers: guarded, handlers: catches, finalizer: fin }) }\nfunction letStmt(head, body) { return Pattern({ type: \"LetStatement\", head: head, body: body }) }\nfunction funExpr(id, args, body, gen) { return Pattern({ type: \"FunctionExpression\",\n                                                id: id,\n                                                params: args,\n                                                defaults: [],\n                                                body: body,\n                                                rest: null,\n                                                generator: false,\n                                                expression: false\n                                                }) }\nfunction genFunExpr(id, args, body) { return Pattern({ type: \"FunctionExpression\",\n                                              id: id,\n                                              params: args,\n                                              defaults: [],\n                                              body: body,\n                                              rest: null,\n                                              generator: false,\n                                              expression: false\n                                              }) }\n\nfunction unExpr(op, arg) { return Pattern({ type: \"UnaryExpression\", operator: op, argument: arg, prefix: true }) }\nfunction binExpr(op, left, right) { return Pattern({ type: \"BinaryExpression\", operator: op, left: left, right: right }) }\nfunction aExpr(op, left, right) { return Pattern({ type: \"AssignmentExpression\", operator: op, left: left, right: right }) }\nfunction updExpr(op, arg, prefix) { return Pattern({ type: \"UpdateExpression\", operator: op, argument: arg, prefix: prefix }) }\nfunction logExpr(op, left, right) { return Pattern({ type: \"LogicalExpression\", operator: op, left: left, right: right }) }\n\nfunction condExpr(test, cons, alt) { return Pattern({ type: \"ConditionalExpression\", test: test, consequent: cons, alternate: alt }) }\nfunction seqExpr(exprs) { return Pattern({ type: \"SequenceExpression\", expressions: exprs }) }\nfunction newExpr(callee, args) { return Pattern({ type: \"NewExpression\", callee: callee, arguments: args }) }\nfunction callExpr(callee, args) { return Pattern({ type: \"CallExpression\", callee: callee, arguments: args }) }\nfunction arrExpr(elts) { return Pattern({ type: \"ArrayExpression\", elements: elts }) }\nfunction objExpr(elts) { return Pattern({ type: \"ObjectExpression\", properties: elts }) }\nfunction objProp(key, value, kind) { return Pattern({ type: \"Property\", key: key, value: value, kind: kind }) }\n\nfunction arrPatt(elts) { return Pattern({ type: \"ArrayPattern\", elements: elts }) }\nfunction objPatt(elts) { return Pattern({ type: \"ObjectPattern\", properties: elts }) }\n\nfunction localSrc(src) { return \"(function(){ \" + src + \" })\" }\nfunction localPatt(patt) { return program([exprStmt(funExpr(null, [], blockStmt([patt])))]) }\nfunction blockSrc(src) { return \"(function(){ { \" + src + \" } })\" }\nfunction blockPatt(patt) { return program([exprStmt(funExpr(null, [], blockStmt([blockStmt([patt])])))]) }\n\nfunction assertBlockStmt(src, patt) {\n    blockPatt(patt).assert(Reflect.parse(blockSrc(src)));\n}\n\nfunction assertBlockExpr(src, patt) {\n    assertBlockStmt(src, exprStmt(patt));\n}\n\nfunction assertBlockDecl(src, patt, builder) {\n    blockPatt(patt).assert(Reflect.parse(blockSrc(src), {builder: builder}));\n}\n\nfunction assertLocalStmt(src, patt) {\n    localPatt(patt).assert(Reflect.parse(localSrc(src)));\n}\n\nfunction assertLocalExpr(src, patt) {\n    assertLocalStmt(src, exprStmt(patt));\n}\n\nfunction assertLocalDecl(src, patt) {\n    localPatt(patt).assert(Reflect.parse(localSrc(src)));\n}\n\nfunction assertGlobalStmt(src, patt, builder) {\n    program([patt]).assert(Reflect.parse(src, {builder: builder}));\n}\n\nfunction assertGlobalExpr(src, patt, builder) {\n    program([exprStmt(patt)]).assert(Reflect.parse(src, {builder: builder}));\n    //assertStmt(src, exprStmt(patt));\n}\n\nfunction assertGlobalDecl(src, patt) {\n    program([patt]).assert(Reflect.parse(src));\n}\n\nfunction assertProg(src, patt) {\n    program(patt).assert(Reflect.parse(src));\n}\n\nfunction assertStmt(src, patt) {\n    assertLocalStmt(src, patt);\n    assertGlobalStmt(src, patt);\n    assertBlockStmt(src, patt);\n}\n\nfunction assertExpr(src, patt) {\n    assertLocalExpr(src, patt);\n    assertGlobalExpr(src, patt);\n    assertBlockExpr(src, patt);\n}\n\nfunction assertDecl(src, patt) {\n    assertLocalDecl(src, patt);\n    assertGlobalDecl(src, patt);\n    assertBlockDecl(src, patt);\n}\n\nfunction assertError(src, errorType) {\n    try {\n        Reflect.parse(src);\n    } catch (e) {\n        return;\n    }\n    throw new Error(\"expected \" + errorType.name + \" for \" + uneval(src));\n}\n\n\n// general tests\n\n// NB: These are useful but for now jit-test doesn't do I/O reliably.\n\n//program(_).assert(Reflect.parse(snarf('data/flapjax.txt')));\n//program(_).assert(Reflect.parse(snarf('data/jquery-1.4.2.txt')));\n//program(_).assert(Reflect.parse(snarf('data/prototype.js')));\n//program(_).assert(Reflect.parse(snarf('data/dojo.js.uncompressed.js')));\n//program(_).assert(Reflect.parse(snarf('data/mootools-1.2.4-core-nc.js')));\n\n\n// declarations\n\nassertDecl(\"var x = 1, y = 2, z = 3\",\n           varDecl([declarator(ident(\"x\"), lit(1)),\n                    declarator(ident(\"y\"), lit(2)),\n                    declarator(ident(\"z\"), lit(3))]));\nassertDecl(\"var x, y, z\",\n           varDecl([declarator(ident(\"x\"), null),\n                    declarator(ident(\"y\"), null),\n                    declarator(ident(\"z\"), null)]));\nassertDecl(\"function foo() { }\",\n           funDecl(ident(\"foo\"), [], blockStmt([])));\nassertDecl(\"function foo() { return 42 }\",\n           funDecl(ident(\"foo\"), [], blockStmt([returnStmt(lit(42))])));\n\n\n// Bug 591437: rebound args have their defs turned into uses\nassertDecl(\"function f(a) { function a() { } }\",\n           funDecl(ident(\"f\"), [ident(\"a\")], blockStmt([funDecl(ident(\"a\"), [], blockStmt([]))])));\nassertDecl(\"function f(a,b,c) { function b() { } }\",\n           funDecl(ident(\"f\"), [ident(\"a\"),ident(\"b\"),ident(\"c\")], blockStmt([funDecl(ident(\"b\"), [], blockStmt([]))])));\n\n// expressions\n\nassertExpr(\"true\", lit(true));\nassertExpr(\"false\", lit(false));\nassertExpr(\"42\", lit(42));\nassertExpr(\"(/asdf/)\", lit(/asdf/));\nassertExpr(\"this\", thisExpr);\nassertExpr(\"foo\", ident(\"foo\"));\nassertExpr(\"foo.bar\", dotExpr(ident(\"foo\"), ident(\"bar\")));\nassertExpr(\"foo[bar]\", memExpr(ident(\"foo\"), ident(\"bar\")));\nassertExpr(\"(function(){})\", funExpr(null, [], blockStmt([])));\nassertExpr(\"(function f() {})\", funExpr(ident(\"f\"), [], blockStmt([])));\nassertExpr(\"(function f(x,y,z) {})\", funExpr(ident(\"f\"), [ident(\"x\"),ident(\"y\"),ident(\"z\")], blockStmt([])));\nassertExpr(\"(++x)\", updExpr(\"++\", ident(\"x\"), true));\nassertExpr(\"(x++)\", updExpr(\"++\", ident(\"x\"), false));\nassertExpr(\"(+x)\", unExpr(\"+\", ident(\"x\")));\nassertExpr(\"(-x)\", unExpr(\"-\", ident(\"x\")));\nassertExpr(\"(!x)\", unExpr(\"!\", ident(\"x\")));\nassertExpr(\"(~x)\", unExpr(\"~\", ident(\"x\")));\nassertExpr(\"(delete x)\", unExpr(\"delete\", ident(\"x\")));\nassertExpr(\"(typeof x)\", unExpr(\"typeof\", ident(\"x\")));\nassertExpr(\"(void x)\", unExpr(\"void\", ident(\"x\")));\nassertExpr(\"(x == y)\", binExpr(\"==\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x != y)\", binExpr(\"!=\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x === y)\", binExpr(\"===\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x !== y)\", binExpr(\"!==\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x < y)\", binExpr(\"<\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x <= y)\", binExpr(\"<=\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x > y)\", binExpr(\">\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x >= y)\", binExpr(\">=\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x << y)\", binExpr(\"<<\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x >> y)\", binExpr(\">>\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x >>> y)\", binExpr(\">>>\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x + y)\", binExpr(\"+\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(w + x + y + z)\", binExpr(\"+\", binExpr(\"+\", binExpr(\"+\", ident(\"w\"), ident(\"x\")), ident(\"y\")), ident(\"z\")));\nassertExpr(\"(x - y)\", binExpr(\"-\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(w - x - y - z)\", binExpr(\"-\", binExpr(\"-\", binExpr(\"-\", ident(\"w\"), ident(\"x\")), ident(\"y\")), ident(\"z\")));\nassertExpr(\"(x * y)\", binExpr(\"*\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x / y)\", binExpr(\"/\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x % y)\", binExpr(\"%\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x | y)\", binExpr(\"|\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x ^ y)\", binExpr(\"^\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x & y)\", binExpr(\"&\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x in y)\", binExpr(\"in\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x instanceof y)\", binExpr(\"instanceof\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x = y)\", aExpr(\"=\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x += y)\", aExpr(\"+=\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x -= y)\", aExpr(\"-=\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x *= y)\", aExpr(\"*=\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x /= y)\", aExpr(\"/=\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x %= y)\", aExpr(\"%=\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x <<= y)\", aExpr(\"<<=\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x >>= y)\", aExpr(\">>=\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x >>>= y)\", aExpr(\">>>=\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x |= y)\", aExpr(\"|=\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x ^= y)\", aExpr(\"^=\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x &= y)\", aExpr(\"&=\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x || y)\", logExpr(\"||\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x && y)\", logExpr(\"&&\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(w || x || y || z)\", logExpr(\"||\", logExpr(\"||\", logExpr(\"||\", ident(\"w\"), ident(\"x\")), ident(\"y\")), ident(\"z\")))\nassertExpr(\"(x ? y : z)\", condExpr(ident(\"x\"), ident(\"y\"), ident(\"z\")));\nassertExpr(\"(x,y)\", seqExpr([ident(\"x\"),ident(\"y\")]))\nassertExpr(\"(x,y,z)\", seqExpr([ident(\"x\"),ident(\"y\"),ident(\"z\")]))\nassertExpr(\"(a,b,c,d,e,f,g)\", seqExpr([ident(\"a\"),ident(\"b\"),ident(\"c\"),ident(\"d\"),ident(\"e\"),ident(\"f\"),ident(\"g\")]));\nassertExpr(\"(new Object)\", newExpr(ident(\"Object\"), []));\nassertExpr(\"(new Object())\", newExpr(ident(\"Object\"), []));\nassertExpr(\"(new Object(42))\", newExpr(ident(\"Object\"), [lit(42)]));\nassertExpr(\"(new Object(1,2,3))\", newExpr(ident(\"Object\"), [lit(1),lit(2),lit(3)]));\nassertExpr(\"(String())\", callExpr(ident(\"String\"), []));\nassertExpr(\"(String(42))\", callExpr(ident(\"String\"), [lit(42)]));\nassertExpr(\"(String(1,2,3))\", callExpr(ident(\"String\"), [lit(1),lit(2),lit(3)]));\nassertExpr(\"[]\", arrExpr([]));\nassertExpr(\"[1]\", arrExpr([lit(1)]));\nassertExpr(\"[1,2]\", arrExpr([lit(1),lit(2)]));\nassertExpr(\"[1,2,3]\", arrExpr([lit(1),lit(2),lit(3)]));\nassertExpr(\"[1,,2,3]\", arrExpr([lit(1),,lit(2),lit(3)]));\nassertExpr(\"[1,,,2,3]\", arrExpr([lit(1),,,lit(2),lit(3)]));\nassertExpr(\"[1,,,2,,3]\", arrExpr([lit(1),,,lit(2),,lit(3)]));\nassertExpr(\"[1,,,2,,,3]\", arrExpr([lit(1),,,lit(2),,,lit(3)]));\nassertExpr(\"[,1,2,3]\", arrExpr([,lit(1),lit(2),lit(3)]));\nassertExpr(\"[,,1,2,3]\", arrExpr([,,lit(1),lit(2),lit(3)]));\nassertExpr(\"[,,,1,2,3]\", arrExpr([,,,lit(1),lit(2),lit(3)]));\nassertExpr(\"[,,,1,2,3,]\", arrExpr([,,,lit(1),lit(2),lit(3)]));\nassertExpr(\"[,,,1,2,3,,]\", arrExpr([,,,lit(1),lit(2),lit(3),undefined]));\nassertExpr(\"[,,,1,2,3,,,]\", arrExpr([,,,lit(1),lit(2),lit(3),undefined,undefined]));\nassertExpr(\"[,,,,,]\", arrExpr([undefined,undefined,undefined,undefined,undefined]));\nassertExpr(\"({})\", objExpr([]));\nassertExpr(\"({x:1})\", objExpr([objProp(ident(\"x\"), lit(1), \"init\")]));\nassertExpr(\"({x:1, y:2})\", objExpr([objProp(ident(\"x\"), lit(1), \"init\"),\n                                    objProp(ident(\"y\"), lit(2), \"init\")]));\nassertExpr(\"({x:1, y:2, z:3})\", objExpr([objProp(ident(\"x\"), lit(1), \"init\"),\n                                         objProp(ident(\"y\"), lit(2), \"init\"),\n                                         objProp(ident(\"z\"), lit(3), \"init\") ]));\nassertExpr(\"({x:1, 'y':2, z:3})\", objExpr([objProp(ident(\"x\"), lit(1), \"init\"),\n                                           objProp(lit(\"y\"), lit(2), \"init\"),\n                                           objProp(ident(\"z\"), lit(3), \"init\") ]));\nassertExpr(\"({'x':1, 'y':2, z:3})\", objExpr([objProp(lit(\"x\"), lit(1), \"init\"),\n                                             objProp(lit(\"y\"), lit(2), \"init\"),\n                                             objProp(ident(\"z\"), lit(3), \"init\") ]));\nassertExpr(\"({'x':1, 'y':2, 3:3})\", objExpr([objProp(lit(\"x\"), lit(1), \"init\"),\n                                             objProp(lit(\"y\"), lit(2), \"init\"),\n                                             objProp(lit(3), lit(3), \"init\") ]));\n\n// Bug 571617: eliminate constant-folding\nassertExpr(\"2 + 3\", binExpr(\"+\", lit(2), lit(3)));\n\n// Bug 632026: constant-folding\nassertExpr(\"typeof(0?0:a)\", unExpr(\"typeof\", condExpr(lit(0), lit(0), ident(\"a\"))));\n\n// Bug 632056: constant-folding\nprogram([exprStmt(ident(\"f\")),\n         ifStmt(lit(1),\n                funDecl(ident(\"f\"), [], blockStmt([])),\n                null)]).assert(Reflect.parse(\"f; if (1) function f(){}\"));\n\n// statements\n\nassertStmt(\"throw 42\", throwStmt(lit(42)));\nassertStmt(\"for (;;) break\", forStmt(null, null, null, breakStmt(null)));\nassertStmt(\"for (x; y; z) break\", forStmt(ident(\"x\"), ident(\"y\"), ident(\"z\"), breakStmt(null)));\nassertStmt(\"for (var x; y; z) break\", forStmt(varDecl([declarator(ident(\"x\"), null)]), ident(\"y\"), ident(\"z\"), breakStmt(null)));\nassertStmt(\"for (var x = 42; y; z) break\", forStmt(varDecl([declarator(ident(\"x\"), lit(42))]), ident(\"y\"), ident(\"z\"), breakStmt(null)));\nassertStmt(\"for (x; ; z) break\", forStmt(ident(\"x\"), null, ident(\"z\"), breakStmt(null)));\nassertStmt(\"for (var x; ; z) break\", forStmt(varDecl([declarator(ident(\"x\"), null)]), null, ident(\"z\"), breakStmt(null)));\nassertStmt(\"for (var x = 42; ; z) break\", forStmt(varDecl([declarator(ident(\"x\"), lit(42))]), null, ident(\"z\"), breakStmt(null)));\nassertStmt(\"for (x; y; ) break\", forStmt(ident(\"x\"), ident(\"y\"), null, breakStmt(null)));\nassertStmt(\"for (var x; y; ) break\", forStmt(varDecl([declarator(ident(\"x\"), null)]), ident(\"y\"), null, breakStmt(null)));\nassertStmt(\"for (var x = 42; y; ) break\", forStmt(varDecl([declarator(ident(\"x\"),lit(42))]), ident(\"y\"), null, breakStmt(null)));\nassertStmt(\"for (var x in y) break\", forInStmt(varDecl([declarator(ident(\"x\"),null)]), ident(\"y\"), breakStmt(null)));\nassertStmt(\"for (x in y) break\", forInStmt(ident(\"x\"), ident(\"y\"), breakStmt(null)));\nassertStmt(\"{ }\", blockStmt([]));\nassertStmt(\"{ throw 1; throw 2; throw 3; }\", blockStmt([ throwStmt(lit(1)), throwStmt(lit(2)), throwStmt(lit(3))]));\nassertStmt(\";\", emptyStmt);\nassertStmt(\"if (foo) throw 42;\", ifStmt(ident(\"foo\"), throwStmt(lit(42)), null));\nassertStmt(\"if (foo) throw 42; else true;\", ifStmt(ident(\"foo\"), throwStmt(lit(42)), exprStmt(lit(true))));\nassertStmt(\"if (foo) { throw 1; throw 2; throw 3; }\",\n           ifStmt(ident(\"foo\"),\n                  blockStmt([throwStmt(lit(1)), throwStmt(lit(2)), throwStmt(lit(3))]),\n                  null));\nassertStmt(\"if (foo) { throw 1; throw 2; throw 3; } else true;\",\n           ifStmt(ident(\"foo\"),\n                  blockStmt([throwStmt(lit(1)), throwStmt(lit(2)), throwStmt(lit(3))]),\n                  exprStmt(lit(true))));\nassertStmt(\"foo: for(;;) break foo;\", labStmt(ident(\"foo\"), forStmt(null, null, null, breakStmt(ident(\"foo\")))));\nassertStmt(\"foo: for(;;) continue foo;\", labStmt(ident(\"foo\"), forStmt(null, null, null, continueStmt(ident(\"foo\")))));\nassertStmt(\"with (obj) { }\", withStmt(ident(\"obj\"), blockStmt([])));\nassertStmt(\"with (obj) { obj; }\", withStmt(ident(\"obj\"), blockStmt([exprStmt(ident(\"obj\"))])));\nassertStmt(\"while (foo) { }\", whileStmt(ident(\"foo\"), blockStmt([])));\nassertStmt(\"while (foo) { foo; }\", whileStmt(ident(\"foo\"), blockStmt([exprStmt(ident(\"foo\"))])));\nassertStmt(\"do { } while (foo);\", doStmt(blockStmt([]), ident(\"foo\")));\nassertStmt(\"do { foo; } while (foo)\", doStmt(blockStmt([exprStmt(ident(\"foo\"))]), ident(\"foo\")));\nassertStmt(\"switch (foo) { case 1: 1; break; case 2: 2; break; default: 3; }\",\n           switchStmt(ident(\"foo\"),\n                      [ caseClause(lit(1), [ exprStmt(lit(1)), breakStmt(null) ]),\n                        caseClause(lit(2), [ exprStmt(lit(2)), breakStmt(null) ]),\n                        defaultClause([ exprStmt(lit(3)) ]) ]));\nassertStmt(\"switch (foo) { case 1: 1; break; case 2: 2; break; default: 3; case 42: 42; }\",\n           switchStmt(ident(\"foo\"),\n                      [ caseClause(lit(1), [ exprStmt(lit(1)), breakStmt(null) ]),\n                        caseClause(lit(2), [ exprStmt(lit(2)), breakStmt(null) ]),\n                        defaultClause([ exprStmt(lit(3)) ]),\n                        caseClause(lit(42), [ exprStmt(lit(42)) ]) ]));\nassertStmt(\"try { } catch (e) { }\",\n           tryStmt(blockStmt([]),\n                   [],\n                   [ catchClause(ident(\"e\"), null, blockStmt([])) ],\n                   null));\nassertStmt(\"try { } catch (e) { } finally { }\",\n           tryStmt(blockStmt([]),\n                   [],\n                   [ catchClause(ident(\"e\"), null, blockStmt([])) ],\n                   blockStmt([])));\nassertStmt(\"try { } finally { }\",\n           tryStmt(blockStmt([]),\n                   [],\n                   [],\n                   blockStmt([])));\n\n// redeclarations (TOK_NAME nodes with lexdef)\n\nassertStmt(\"function f() { function g() { } function g() { } }\",\n           funDecl(ident(\"f\"), [], blockStmt([funDecl(ident(\"g\"), [], blockStmt([])),\n                                              funDecl(ident(\"g\"), [], blockStmt([]))])));\n\nassertStmt(\"function f() { function g() { } function g() { return 42 } }\",\n           funDecl(ident(\"f\"), [], blockStmt([funDecl(ident(\"g\"), [], blockStmt([])),\n                                              funDecl(ident(\"g\"), [], blockStmt([returnStmt(lit(42))]))])));\n\nassertStmt(\"function f() { var x = 42; var x = 43; }\",\n           funDecl(ident(\"f\"), [], blockStmt([varDecl([declarator(ident(\"x\"),lit(42))]),\n                                              varDecl([declarator(ident(\"x\"),lit(43))])])));\n\n// getters and setters\n\n assertExpr(\"({ get x() { return 42 } })\",\n            objExpr([ objProp(ident(\"x\"),\n                              funExpr(null, [], blockStmt([returnStmt(lit(42))])),\n                              \"get\" ) ]));\n assertExpr(\"({ set x(v) { return 42 } })\",\n            objExpr([ objProp(ident(\"x\"),\n                              funExpr(null, [ident(\"v\")], blockStmt([returnStmt(lit(42))])),\n                              \"set\" ) ]));\n\n}\n\nexports.testReflect = testReflect;\n\n}(typeof exports === 'undefined' ? this : exports));\n"]}