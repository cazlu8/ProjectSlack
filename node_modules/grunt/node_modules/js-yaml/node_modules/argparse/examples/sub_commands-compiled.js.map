{"version":3,"sources":["sub_commands.js"],"names":[],"mappings":";AACA,YAAY,CAAC;;AAEb,IAAI,cAAc,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC,cAAc,CAAC;AAC/D,IAAI,MAAM,GAAG,IAAI,cAAc,CAAC;AAC9B,SAAO,EAAE,OAAO;AAChB,SAAO,EAAE,IAAI;AACb,aAAW,EAAE,iCAAiC;CAC/C,CAAC,CAAC;;AAEH,IAAI,UAAU,GAAG,MAAM,CAAC,aAAa,CAAC;AACpC,OAAK,EAAE,aAAa;AACpB,MAAI,EAAE,iBAAiB;CACxB,CAAC,CAAC;;AAEH,IAAI,GAAG,GAAG,UAAU,CAAC,SAAS,CAAC,IAAI,EAAE,EAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAC,CAAC,CAAC;AACvE,GAAG,CAAC,WAAW,CACb,CAAE,IAAI,EAAE,OAAO,CAAE,EACjB;AACE,QAAM,EAAE,OAAO;AACf,MAAI,EAAE,WAAW;CAClB,CACF,CAAC;AACF,IAAI,GAAG,GAAG,UAAU,CAAC,SAAS,CAC5B,IAAI,EACJ,EAAC,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAC,CAClD,CAAC;AACF,GAAG,CAAC,WAAW,CACb,CAAE,IAAI,EAAE,OAAO,CAAE,EACjB;AACE,QAAM,EAAE,OAAO;AACf,MAAI,EAAE,KAAK;AACX,MAAI,EAAE,WAAW;CAClB,CACF,CAAC;AACF,MAAM,CAAC,SAAS,EAAE,CAAC;AACnB,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;;AAE3B,IAAI,IAAI,CAAC;AACT,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;AAC9C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAClB,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;AAC3B,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;AAC9C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAClB,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;AAC3B,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;AAC9C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAClB,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;AAC3B,MAAM,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC","file":"sub_commands-compiled.js","sourcesContent":["#!/usr/bin/env node\n'use strict';\n\nvar ArgumentParser = require('../lib/argparse').ArgumentParser;\nvar parser = new ArgumentParser({\n  version: '0.0.1',\n  addHelp: true,\n  description: 'Argparse examples: sub-commands'\n});\n\nvar subparsers = parser.addSubparsers({\n  title: 'subcommands',\n  dest: \"subcommand_name\"\n});\n\nvar bar = subparsers.addParser('c1', {addHelp: true, help: 'c1 help'});\nbar.addArgument(\n  [ '-f', '--foo' ],\n  {\n    action: 'store',\n    help: 'foo3 bar3'\n  }\n);\nvar bar = subparsers.addParser(\n  'c2',\n  {aliases: ['co'], addHelp: true, help: 'c2 help'}\n);\nbar.addArgument(\n  [ '-b', '--bar' ],\n  {\n    action: 'store',\n    type: 'int',\n    help: 'foo3 bar3'\n  }\n);\nparser.printHelp();\nconsole.log('-----------');\n\nvar args;\nargs = parser.parseArgs('c1 -f 2'.split(' '));\nconsole.dir(args);\nconsole.log('-----------');\nargs = parser.parseArgs('c2 -b 1'.split(' '));\nconsole.dir(args);\nconsole.log('-----------');\nargs = parser.parseArgs('co -b 1'.split(' '));\nconsole.dir(args);\nconsole.log('-----------');\nparser.parseArgs(['c1', '-h']);\n"]}