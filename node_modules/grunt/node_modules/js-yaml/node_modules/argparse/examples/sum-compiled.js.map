{"version":3,"sources":["sum.js"],"names":[],"mappings":";;AAEA,YAAY,CAAC;;AAGb,IAAI,cAAc,GAAI,OAAO,CAAC,iBAAiB,CAAC,CAAC,cAAc,CAAC;AAChE,IAAI,MAAM,GAAG,IAAI,cAAc,CAAC,EAAE,WAAW,EAAE,wBAAwB,EAAE,CAAC,CAAC;;AAG3E,SAAS,GAAG,CAAC,GAAG,EAAE;AAChB,SAAO,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;AAChC,WAAO,CAAC,GAAG,CAAC,CAAC;GACd,EAAE,CAAC,CAAC,CAAC;CACP;AACD,SAAS,GAAG,CAAC,GAAG,EAAE;AAChB,SAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;CAClC;;AAGD,MAAM,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC,EAAE;AAC/B,SAAO,EAAO,GAAG;AACjB,MAAI,EAAU,KAAK;AACnB,OAAK,EAAS,GAAG;AACjB,MAAI,EAAU,gCAAgC;CAC/C,CAAC,CAAC;AACH,MAAM,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,EAAE;AAC5B,MAAI,EAAU,YAAY;AAC1B,QAAM,EAAQ,YAAY;AAC1B,UAAQ,EAAM,GAAG;AACjB,cAAY,EAAE,GAAG;AACjB,MAAI,EAAU,0CAA0C;CACzD,CAAC,CAAC;;AAEH,IAAI,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;AACvD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC","file":"sum-compiled.js","sourcesContent":["#!/usr/bin/env node\n\n'use strict';\n\n\nvar ArgumentParser  = require('../lib/argparse').ArgumentParser;\nvar parser = new ArgumentParser({ description: 'Process some integers.' });\n\n\nfunction sum(arr) {\n  return arr.reduce(function (a, b) {\n    return a + b;\n  }, 0);\n}\nfunction max(arr) {\n  return Math.max.apply(Math, arr);\n}\n\n\nparser.addArgument(['integers'], {\n  metavar:      'N',\n  type:         'int',\n  nargs:        '+',\n  help:         'an integer for the accumulator'\n});\nparser.addArgument(['--sum'], {\n  dest:         'accumulate',\n  action:       'storeConst',\n  constant:     sum,\n  defaultValue: max,\n  help:         'sum the integers (default: find the max)'\n});\n\nvar args = parser.parseArgs('--sum 1 2 -1'.split(' '));\nconsole.log(args.accumulate(args.integers));\n"]}