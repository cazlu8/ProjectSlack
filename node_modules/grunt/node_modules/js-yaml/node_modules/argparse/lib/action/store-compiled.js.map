{"version":3,"sources":["store.js"],"names":[],"mappings":";;;;;;;;AAQA,YAAY,CAAC;;AAEb,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;;AAE3B,IAAI,MAAM,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;;;AAGlC,IAAI,EAAE,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;;;;;;;AAQ7B,IAAI,WAAW,GAAG,MAAM,CAAC,OAAO,GAAG,SAAS,WAAW,CAAC,OAAO,EAAE;AAC/D,SAAO,GAAG,OAAO,IAAI,EAAE,CAAC;AACxB,MAAI,IAAI,CAAC,KAAK,IAAI,CAAC,EAAE;AACnB,UAAM,IAAI,KAAK,CAAC,8CAA8C,GAC1D,+CAA+C,GAC/C,6CAA6C,CAAC,CAAC;GAEpD;AACD,MAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,CAAC,QAAQ,EAAE;AAC7D,UAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC,CAAC;GAC3D;AACD,QAAM,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;CAC5B,CAAC;AACF,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;;;;;;;;;;;AAWnC,WAAW,CAAC,SAAS,CAAC,IAAI,GAAG,UAAU,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE;AAChE,WAAS,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;CAClC,CAAC","file":"store-compiled.js","sourcesContent":["/*:nodoc:*\n * class ActionStore\n *\n * This action just stores the argumentâ€™s value. This is the default action.\n *\n * This class inherited from [[Action]]\n *\n **/\n'use strict';\n\nvar util = require('util');\n\nvar Action = require('../action');\n\n// Constants\nvar $$ = require('../const');\n\n\n/*:nodoc:*\n * new ActionStore(options)\n * - options (object): options hash see [[Action.new]]\n *\n **/\nvar ActionStore = module.exports = function ActionStore(options) {\n  options = options || {};\n  if (this.nargs <= 0) {\n    throw new Error('nargs for store actions must be > 0; if you ' +\n        'have nothing to store, actions such as store ' +\n        'true or store const may be more appropriate');\n\n  }\n  if (this.constant !== undefined && this.nargs !== $$.OPTIONAL) {\n    throw new Error('nargs must be OPTIONAL to supply const');\n  }\n  Action.call(this, options);\n};\nutil.inherits(ActionStore, Action);\n\n/*:nodoc:*\n * ActionStore#call(parser, namespace, values, optionString) -> Void\n * - parser (ArgumentParser): current parser\n * - namespace (Namespace): namespace for output data\n * - values (Array): parsed values\n * - optionString (Array): input option string(not parsed)\n *\n * Call the action. Save result in namespace object\n **/\nActionStore.prototype.call = function (parser, namespace, values) {\n  namespace.set(this.dest, values);\n};\n"]}