{"version":3,"sources":["version.js"],"names":[],"mappings":";;;;;;AAMA,YAAY,CAAC;;AAEb,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;;AAE3B,IAAI,MAAM,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;;;;;AAKlC,IAAI,EAAE,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;;;;;;;AAO7B,IAAI,aAAa,GAAG,MAAM,CAAC,OAAO,GAAG,SAAS,aAAa,CAAC,OAAO,EAAE;AACnE,SAAO,GAAG,OAAO,IAAI,EAAE,CAAC;AACxB,SAAO,CAAC,YAAY,GAAI,CAAC,CAAC,OAAO,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,GAAE,EAAE,CAAC,QAAQ,AAAC,CAAC;AACpF,SAAO,CAAC,IAAI,GAAI,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC,QAAQ,AAAC,CAAC;AAC7C,SAAO,CAAC,KAAK,GAAG,CAAC,CAAC;AAClB,MAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;AAC/B,QAAM,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;CAC5B,CAAC;AACF,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;;;;;;;;;;;AAWrC,aAAa,CAAC,SAAS,CAAC,IAAI,GAAG,UAAU,MAAM,EAAE;AAC/C,MAAI,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC;AAC7C,MAAI,SAAS,GAAG,MAAM,CAAC,aAAa,EAAE,CAAC;AACvC,WAAS,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AAC3B,QAAM,CAAC,IAAI,CAAC,CAAC,EAAE,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;CACxC,CAAC","file":"version-compiled.js","sourcesContent":["/*:nodoc:*\n * class ActionVersion\n *\n * Support action for printing program version\n * This class inherited from [[Action]]\n **/\n'use strict';\n\nvar util = require('util');\n\nvar Action = require('../action');\n\n//\n// Constants\n//\nvar $$ = require('../const');\n\n/*:nodoc:*\n * new ActionVersion(options)\n * - options (object): options hash see [[Action.new]]\n *\n **/\nvar ActionVersion = module.exports = function ActionVersion(options) {\n  options = options || {};\n  options.defaultValue = (!!options.defaultValue ? options.defaultValue: $$.SUPPRESS);\n  options.dest = (options.dest || $$.SUPPRESS);\n  options.nargs = 0;\n  this.version = options.version;\n  Action.call(this, options);\n};\nutil.inherits(ActionVersion, Action);\n\n/*:nodoc:*\n * ActionVersion#call(parser, namespace, values, optionString) -> Void\n * - parser (ArgumentParser): current parser\n * - namespace (Namespace): namespace for output data\n * - values (Array): parsed values\n * - optionString (Array): input option string(not parsed)\n *\n * Print version and exit\n **/\nActionVersion.prototype.call = function (parser) {\n  var version = this.version || parser.version;\n  var formatter = parser._getFormatter();\n  formatter.addText(version);\n  parser.exit(0, formatter.formatHelp());\n};\n\n\n\n"]}