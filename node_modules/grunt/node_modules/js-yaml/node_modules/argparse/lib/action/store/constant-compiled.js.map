{"version":3,"sources":["constant.js"],"names":[],"mappings":";;;;;;;;;;AAUA,YAAY,CAAC;;AAEb,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;;AAE3B,IAAI,MAAM,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;;;;;;;AAOrC,IAAI,mBAAmB,GAAG,MAAM,CAAC,OAAO,GAAG,SAAS,mBAAmB,CAAC,OAAO,EAAE;AAC/E,SAAO,GAAG,OAAO,IAAI,EAAE,CAAC;AACxB,SAAO,CAAC,KAAK,GAAG,CAAC,CAAC;AAClB,MAAI,OAAO,CAAC,QAAQ,KAAK,SAAS,EAAE;AAClC,UAAM,IAAI,KAAK,CAAC,6CAA6C,CAAC,CAAC;GAChE;AACD,QAAM,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;CAC5B,CAAC;AACF,IAAI,CAAC,QAAQ,CAAC,mBAAmB,EAAE,MAAM,CAAC,CAAC;;;;;;;;;;;AAW3C,mBAAmB,CAAC,SAAS,CAAC,IAAI,GAAG,UAAU,MAAM,EAAE,SAAS,EAAE;AAChE,WAAS,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;CACzC,CAAC","file":"constant-compiled.js","sourcesContent":["/*:nodoc:*\n * class ActionStoreConstant\n *\n * This action stores the value specified by the const keyword argument.\n * (Note that the const keyword argument defaults to the rather unhelpful null.)\n * The 'store_const' action is most commonly used with optional\n * arguments that specify some sort of flag.\n *\n * This class inherited from [[Action]]\n **/\n'use strict';\n\nvar util = require('util');\n\nvar Action = require('../../action');\n\n/*:nodoc:*\n * new ActionStoreConstant(options)\n * - options (object): options hash see [[Action.new]]\n *\n **/\nvar ActionStoreConstant = module.exports = function ActionStoreConstant(options) {\n  options = options || {};\n  options.nargs = 0;\n  if (options.constant === undefined) {\n    throw new Error('constant option is required for storeAction');\n  }\n  Action.call(this, options);\n};\nutil.inherits(ActionStoreConstant, Action);\n\n/*:nodoc:*\n * ActionStoreConstant#call(parser, namespace, values, optionString) -> Void\n * - parser (ArgumentParser): current parser\n * - namespace (Namespace): namespace for output data\n * - values (Array): parsed values\n * - optionString (Array): input option string(not parsed)\n *\n * Call the action. Save result in namespace object\n **/\nActionStoreConstant.prototype.call = function (parser, namespace) {\n  namespace.set(this.dest, this.constant);\n};\n"]}