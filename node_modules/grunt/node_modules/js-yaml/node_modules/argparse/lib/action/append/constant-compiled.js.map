{"version":3,"sources":["constant.js"],"names":[],"mappings":";;;;;;;;;;;;AAYA,YAAY,CAAC;;AAEb,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;;AAE3B,IAAI,MAAM,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;;;;;;;AAOrC,IAAI,oBAAoB,GAAG,MAAM,CAAC,OAAO,GAAG,SAAS,oBAAoB,CAAC,OAAO,EAAE;AACjF,SAAO,GAAG,OAAO,IAAI,EAAE,CAAC;AACxB,SAAO,CAAC,KAAK,GAAG,CAAC,CAAC;AAClB,MAAI,OAAO,CAAC,QAAQ,KAAK,SAAS,EAAE;AAClC,UAAM,IAAI,KAAK,CAAC,8CAA8C,CAAC,CAAC;GACjE;AACD,QAAM,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;CAC5B,CAAC;AACF,IAAI,CAAC,QAAQ,CAAC,oBAAoB,EAAE,MAAM,CAAC,CAAC;;;;;;;;;;;AAW5C,oBAAoB,CAAC,SAAS,CAAC,IAAI,GAAG,UAAU,MAAM,EAAE,SAAS,EAAE;AACjE,MAAI,KAAK,GAAG,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;AAClD,OAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC1B,WAAS,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;CACjC,CAAC","file":"constant-compiled.js","sourcesContent":["/*:nodoc:*\n * class ActionAppendConstant\n *\n * This stores a list, and appends the value specified by\n * the const keyword argument to the list.\n * (Note that the const keyword argument defaults to null.)\n * The 'appendConst' action is typically useful when multiple\n * arguments need to store constants to the same list.\n *\n * This class inherited from [[Action]]\n **/\n\n'use strict';\n\nvar util = require('util');\n\nvar Action = require('../../action');\n\n/*:nodoc:*\n * new ActionAppendConstant(options)\n * - options (object): options hash see [[Action.new]]\n *\n **/\nvar ActionAppendConstant = module.exports = function ActionAppendConstant(options) {\n  options = options || {};\n  options.nargs = 0;\n  if (options.constant === undefined) {\n    throw new Error('constant option is required for appendAction');\n  }\n  Action.call(this, options);\n};\nutil.inherits(ActionAppendConstant, Action);\n\n/*:nodoc:*\n * ActionAppendConstant#call(parser, namespace, values, optionString) -> Void\n * - parser (ArgumentParser): current parser\n * - namespace (Namespace): namespace for output data\n * - values (Array): parsed values\n * - optionString (Array): input option string(not parsed)\n *\n * Call the action. Save result in namespace object\n **/\nActionAppendConstant.prototype.call = function (parser, namespace) {\n  var items = [].concat(namespace[this.dest] || []);\n  items.push(this.constant);\n  namespace.set(this.dest, items);\n};\n"]}