{"version":3,"sources":["group.js"],"names":[],"mappings":";;;;;;;;;;;;AAYA,YAAY,CAAC;;AAEb,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;;AAE3B,IAAI,eAAe,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC;;;;;;;;;;;;;;AAerD,IAAI,aAAa,GAAG,MAAM,CAAC,OAAO,GAAG,SAAS,aAAa,CAAC,SAAS,EAAE,OAAO,EAAE;;AAE9E,SAAO,GAAG,OAAO,IAAI,EAAE,CAAC;;;AAGxB,SAAO,CAAC,eAAe,GAAI,OAAO,CAAC,eAAe,IAAI,SAAS,CAAC,eAAe,AAAC,CAAC;AACjF,SAAO,CAAC,WAAW,GAAI,OAAO,CAAC,WAAW,IAAI,SAAS,CAAC,WAAW,AAAC,CAAC;AACrE,SAAO,CAAC,eAAe,GAAI,OAAO,CAAC,eAAe,IAAI,SAAS,CAAC,eAAe,AAAC,CAAC;;AAEjF,iBAAe,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;;;AAGpC,MAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;AAC3B,MAAI,CAAC,aAAa,GAAG,EAAE,CAAC;;;AAGxB,MAAI,CAAC,UAAU,GAAG,SAAS,CAAC;AAC5B,MAAI,CAAC,WAAW,GAAG,SAAS,CAAC,WAAW,CAAC;AACzC,MAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC;AACnC,MAAI,CAAC,oBAAoB,GAAG,SAAS,CAAC,oBAAoB,CAAC;AAC3D,MAAI,CAAC,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC;AACrC,MAAI,CAAC,2BAA2B,GAAG,SAAS,CAAC,2BAA2B,CAAC;AACzE,MAAI,CAAC,wBAAwB,GAAG,SAAS,CAAC,wBAAwB,CAAC;CACpE,CAAC;AACF,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,eAAe,CAAC,CAAC;;AAG9C,aAAa,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,MAAM,EAAE;;AAErD,QAAM,GAAG,eAAe,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AACjE,MAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAChC,SAAO,MAAM,CAAC;CACf,CAAC;;AAGF,aAAa,CAAC,SAAS,CAAC,aAAa,GAAG,UAAU,MAAM,EAAE;;AAExD,iBAAe,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AAC3D,MAAI,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AACrD,MAAI,WAAW,IAAI,CAAC,EAAE;AACpB,QAAI,CAAC,aAAa,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;GAC3C;CACF,CAAC","file":"group-compiled.js","sourcesContent":["/** internal\n * class ArgumentGroup\n *\n * Group arguments.\n * By default, ArgumentParser groups command-line arguments\n * into “positional arguments” and “optional arguments”\n * when displaying help messages. When there is a better\n * conceptual grouping of arguments than this default one,\n * appropriate groups can be created using the addArgumentGroup() method\n *\n * This class inherited from [[ArgumentContainer]]\n **/\n'use strict';\n\nvar util = require('util');\n\nvar ActionContainer = require('../action_container');\n\n\n/**\n * new ArgumentGroup(container, options)\n * - container (object): main container\n * - options (object): hash of group options\n *\n * #### options\n * - **prefixChars**  group name prefix\n * - **argumentDefault**  default argument value\n * - **title**  group title\n * - **description** group description\n *\n **/\nvar ArgumentGroup = module.exports = function ArgumentGroup(container, options) {\n\n  options = options || {};\n\n  // add any missing keyword arguments by checking the container\n  options.conflictHandler = (options.conflictHandler || container.conflictHandler);\n  options.prefixChars = (options.prefixChars || container.prefixChars);\n  options.argumentDefault = (options.argumentDefault || container.argumentDefault);\n\n  ActionContainer.call(this, options);\n\n  // group attributes\n  this.title = options.title;\n  this._groupActions = [];\n\n  // share most attributes with the container\n  this._container = container;\n  this._registries = container._registries;\n  this._actions = container._actions;\n  this._optionStringActions = container._optionStringActions;\n  this._defaults = container._defaults;\n  this._hasNegativeNumberOptionals = container._hasNegativeNumberOptionals;\n  this._mutuallyExclusiveGroups = container._mutuallyExclusiveGroups;\n};\nutil.inherits(ArgumentGroup, ActionContainer);\n\n\nArgumentGroup.prototype._addAction = function (action) {\n  // Parent add action\n  action = ActionContainer.prototype._addAction.call(this, action);\n  this._groupActions.push(action);\n  return action;\n};\n\n\nArgumentGroup.prototype._removeAction = function (action) {\n  // Parent remove action\n  ActionContainer.prototype._removeAction.call(this, action);\n  var actionIndex = this._groupActions.indexOf(action);\n  if (actionIndex >= 0) {\n    this._groupActions.splice(actionIndex, 1);\n  }\n};\n\n"]}