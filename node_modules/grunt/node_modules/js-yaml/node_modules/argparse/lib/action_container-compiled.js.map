{"version":3,"sources":["action_container.js"],"names":[],"mappings":"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","file":"action_container-compiled.js","sourcesContent":["/** internal\n * class ActionContainer\n *\n * Action container. Parent for [[ArgumentParser]] and [[ArgumentGroup]]\n **/\n\n'use strict';\n\nvar format = require('util').format;\nvar _      = require('underscore');\n\n_.str = require('underscore.string');\n\n// Constants\nvar $$ = require('./const');\n\n//Actions\nvar ActionHelp = require('./action/help');\nvar ActionAppend = require('./action/append');\nvar ActionAppendConstant = require('./action/append/constant');\nvar ActionCount = require('./action/count');\nvar ActionStore = require('./action/store');\nvar ActionStoreConstant = require('./action/store/constant');\nvar ActionStoreTrue = require('./action/store/true');\nvar ActionStoreFalse = require('./action/store/false');\nvar ActionVersion = require('./action/version');\nvar ActionSubparsers = require('./action/subparsers');\n\n// Errors\nvar argumentErrorHelper = require('./argument/error');\n\n\n\n/**\n * new ActionContainer(options)\n *\n * Action container. Parent for [[ArgumentParser]] and [[ArgumentGroup]]\n *\n * ##### Options:\n *\n * - `description` -- A description of what the program does\n * - `prefixChars`  -- Characters that prefix optional arguments\n * - `argumentDefault`  -- The default value for all arguments\n * - `conflictHandler` -- The conflict handler to use for duplicate arguments\n **/\nvar ActionContainer = module.exports = function ActionContainer(options) {\n  options = options || {};\n\n  this.description = options.description;\n  this.argumentDefault = options.argumentDefault;\n  this.prefixChars = options.prefixChars || '';\n  this.conflictHandler = options.conflictHandler;\n\n  // set up registries\n  this._registries = {};\n\n  // register actions\n  this.register('action', null, ActionStore);\n  this.register('action', 'store', ActionStore);\n  this.register('action', 'storeConst', ActionStoreConstant);\n  this.register('action', 'storeTrue', ActionStoreTrue);\n  this.register('action', 'storeFalse', ActionStoreFalse);\n  this.register('action', 'append', ActionAppend);\n  this.register('action', 'appendConst', ActionAppendConstant);\n  this.register('action', 'count', ActionCount);\n  this.register('action', 'help', ActionHelp);\n  this.register('action', 'version', ActionVersion);\n  this.register('action', 'parsers', ActionSubparsers);\n\n  // raise an exception if the conflict handler is invalid\n  this._getHandler();\n\n  // action storage\n  this._actions = [];\n  this._optionStringActions = {};\n\n  // groups\n  this._actionGroups = [];\n  this._mutuallyExclusiveGroups = [];\n\n  // defaults storage\n  this._defaults = {};\n\n  // determines whether an \"option\" looks like a negative number\n  // -1, -1.5 -5e+4\n  this._regexpNegativeNumber = new RegExp('^[-]?[0-9]*\\\\.?[0-9]+([eE][-+]?[0-9]+)?$');\n\n  // whether or not there are any optionals that look like negative\n  // numbers -- uses a list so it can be shared and edited\n  this._hasNegativeNumberOptionals = [];\n};\n\n// Groups must be required, then ActionContainer already defined\nvar ArgumentGroup = require('./argument/group');\nvar MutuallyExclusiveGroup = require('./argument/exclusive');\n\n//\n// Registration methods\n//\n\n/**\n * ActionContainer#register(registryName, value, object) -> Void\n * - registryName (String) : object type action|type\n * - value (string) : keyword\n * - object (Object|Function) : handler\n *\n *  Register handlers\n **/\nActionContainer.prototype.register = function (registryName, value, object) {\n  this._registries[registryName] = this._registries[registryName] || {};\n  this._registries[registryName][value] = object;\n};\n\nActionContainer.prototype._registryGet = function (registryName, value, defaultValue) {\n  if (3 > arguments.length) {\n    defaultValue = null;\n  }\n  return this._registries[registryName][value] || defaultValue;\n};\n\n//\n// Namespace default accessor methods\n//\n\n/**\n * ActionContainer#setDefaults(options) -> Void\n * - options (object):hash of options see [[Action.new]]\n *\n * Set defaults\n **/\nActionContainer.prototype.setDefaults = function (options) {\n  options = options || {};\n  for (var property in options) {\n    this._defaults[property] = options[property];\n  }\n\n  // if these defaults match any existing arguments, replace the previous\n  // default on the object with the new one\n  this._actions.forEach(function (action) {\n    if (action.dest in options) {\n      action.defaultValue = options[action.dest];\n    }\n  });\n};\n\n/**\n * ActionContainer#getDefault(dest) -> Mixed\n * - dest (string): action destination\n *\n * Return action default value\n **/\nActionContainer.prototype.getDefault = function (dest) {\n  var result = (_.has(this._defaults, dest)) ? this._defaults[dest] : null;\n\n  this._actions.forEach(function (action) {\n    if (action.dest === dest && _.has(action, 'defaultValue')) {\n      result = action.defaultValue;\n    }\n  });\n\n  return result;\n};\n//\n// Adding argument actions\n//\n\n/**\n * ActionContainer#addArgument(args, options) -> Object\n * - args (Array): array of argument keys\n * - options (Object): action objects see [[Action.new]]\n *\n * #### Examples\n * - addArgument([-f, --foo], {action:'store', defaultValue=1, ...})\n * - addArgument(['bar'], action: 'store', nargs:1, ...})\n **/\nActionContainer.prototype.addArgument = function (args, options) {\n  args = args;\n  options = options || {};\n\n  if (!_.isArray(args)) {\n    throw new TypeError('addArgument first argument should be an array');\n  }\n  if (!_.isObject(options) || _.isArray(options)) {\n    throw new TypeError('addArgument second argument should be a hash');\n  }\n\n  // if no positional args are supplied or only one is supplied and\n  // it doesn't look like an option string, parse a positional argument\n  if (!args || args.length === 1 && this.prefixChars.indexOf(args[0][0]) < 0) {\n    if (args && !!options.dest) {\n      throw new Error('dest supplied twice for positional argument');\n    }\n    options = this._getPositional(args, options);\n\n    // otherwise, we're adding an optional argument\n  } else {\n    options = this._getOptional(args, options);\n  }\n\n  // if no default was supplied, use the parser-level default\n  if (_.isUndefined(options.defaultValue)) {\n    var dest = options.dest;\n    if (_.has(this._defaults, dest)) {\n      options.defaultValue = this._defaults[dest];\n    } else if (!_.isUndefined(this.argumentDefault)) {\n      options.defaultValue = this.argumentDefault;\n    }\n  }\n\n  // create the action object, and add it to the parser\n  var ActionClass = this._popActionClass(options);\n  if (! _.isFunction(ActionClass)) {\n    throw new Error(format('Unknown action \"%s\".', ActionClass));\n  }\n  var action = new ActionClass(options);\n\n  // throw an error if the action type is not callable\n  var typeFunction = this._registryGet('type', action.type, action.type);\n  if (!_.isFunction(typeFunction)) {\n    throw new Error(format('\"%s\" is not callable', typeFunction));\n  }\n\n  return this._addAction(action);\n};\n\n/**\n * ActionContainer#addArgumentGroup(options) -> ArgumentGroup\n * - options (Object): hash of options see [[ArgumentGroup.new]]\n *\n * Create new arguments groups\n **/\nActionContainer.prototype.addArgumentGroup = function (options) {\n  var group = new ArgumentGroup(this, options);\n  this._actionGroups.push(group);\n  return group;\n};\n\n/**\n * ActionContainer#addMutuallyExclusiveGroup(options) -> ArgumentGroup\n * - options (Object): {required: false}\n *\n * Create new mutual exclusive groups\n **/\nActionContainer.prototype.addMutuallyExclusiveGroup = function (options) {\n  var group = new MutuallyExclusiveGroup(this, options);\n  this._mutuallyExclusiveGroups.push(group);\n  return group;\n};\n\nActionContainer.prototype._addAction = function (action) {\n  var self = this;\n\n  // resolve any conflicts\n  this._checkConflict(action);\n\n  // add to actions list\n  this._actions.push(action);\n  action.container = this;\n\n  // index the action by any option strings it has\n  action.optionStrings.forEach(function (optionString) {\n    self._optionStringActions[optionString] = action;\n  });\n\n  // set the flag if any option strings look like negative numbers\n  action.optionStrings.forEach(function (optionString) {\n    if (optionString.match(self._regexpNegativeNumber)) {\n      if (!_.any(self._hasNegativeNumberOptionals)) {\n        self._hasNegativeNumberOptionals.push(true);\n      }\n    }\n  });\n\n  // return the created action\n  return action;\n};\n\nActionContainer.prototype._removeAction = function (action) {\n  var actionIndex = this._actions.indexOf(action);\n  if (actionIndex >= 0) {\n    this._actions.splice(actionIndex, 1);\n  }\n};\n\nActionContainer.prototype._addContainerActions = function (container) {\n  // collect groups by titles\n  var titleGroupMap = {};\n  this._actionGroups.forEach(function (group) {\n    if (titleGroupMap[group.title]) {\n      throw new Error(format('Cannot merge actions - two groups are named \"%s\".', group.title));\n    }\n    titleGroupMap[group.title] = group;\n  });\n\n  // map each action to its group\n  var groupMap = {};\n  function actionHash(action) {\n    // unique (hopefully?) string suitable as dictionary key\n    return action.getName();\n  }\n  container._actionGroups.forEach(function (group) {\n    // if a group with the title exists, use that, otherwise\n    // create a new group matching the container's group\n    if (!titleGroupMap[group.title]) {\n      titleGroupMap[group.title] = this.addArgumentGroup({\n        title: group.title,\n        description: group.description\n      });\n    }\n\n    // map the actions to their new group\n    group._groupActions.forEach(function (action) {\n      groupMap[actionHash(action)] = titleGroupMap[group.title];\n    });\n  }, this);\n\n  // add container's mutually exclusive groups\n  // NOTE: if add_mutually_exclusive_group ever gains title= and\n  // description= then this code will need to be expanded as above\n  var mutexGroup;\n  container._mutuallyExclusiveGroups.forEach(function (group) {\n    mutexGroup = this.addMutuallyExclusiveGroup({\n        required: group.required\n      });\n    // map the actions to their new mutex group\n    group._groupActions.forEach(function (action) {\n      groupMap[actionHash(action)] = mutexGroup;\n    });\n  }, this);  // forEach takes a 'this' argument\n\n  // add all actions to this container or their group\n  container._actions.forEach(function (action) {\n    var key = actionHash(action);\n    if (!!groupMap[key]) {\n      groupMap[key]._addAction(action);\n    }\n    else\n    {\n      this._addAction(action);\n    }\n  });\n};\n\nActionContainer.prototype._getPositional = function (dest, options) {\n  if (_.isArray(dest)) {\n    dest = _.first(dest);\n  }\n  // make sure required is not specified\n  if (options.required) {\n    throw new Error('\"required\" is an invalid argument for positionals.');\n  }\n\n  // mark positional arguments as required if at least one is\n  // always required\n  if (options.nargs !== $$.OPTIONAL && options.nargs !== $$.ZERO_OR_MORE) {\n    options.required = true;\n  }\n  if (options.nargs === $$.ZERO_OR_MORE && options.defaultValue === undefined) {\n    options.required = true;\n  }\n\n  // return the keyword arguments with no option strings\n  options.dest = dest;\n  options.optionStrings = [];\n  return options;\n};\n\nActionContainer.prototype._getOptional = function (args, options) {\n  var prefixChars = this.prefixChars;\n  var optionStrings = [];\n  var optionStringsLong = [];\n\n  // determine short and long option strings\n  args.forEach(function (optionString) {\n    // error on strings that don't start with an appropriate prefix\n    if (prefixChars.indexOf(optionString[0]) < 0) {\n      throw new Error(format('Invalid option string \"%s\": must start with a \"%s\".',\n        optionString,\n        prefixChars\n      ));\n    }\n\n    // strings starting with two prefix characters are long options\n    optionStrings.push(optionString);\n    if (optionString.length > 1 && prefixChars.indexOf(optionString[1]) >= 0) {\n      optionStringsLong.push(optionString);\n    }\n  });\n\n  // infer dest, '--foo-bar' -> 'foo_bar' and '-x' -> 'x'\n  var dest = options.dest || null;\n  delete options.dest;\n\n  if (!dest) {\n    var optionStringDest = optionStringsLong.length ? optionStringsLong[0] :optionStrings[0];\n    dest = _.str.strip(optionStringDest, this.prefixChars);\n\n    if (dest.length === 0) {\n      throw new Error(\n        format('dest= is required for options like \"%s\"', optionStrings.join(', '))\n      );\n    }\n    dest = dest.replace(/-/g, '_');\n  }\n\n  // return the updated keyword arguments\n  options.dest = dest;\n  options.optionStrings = optionStrings;\n\n  return options;\n};\n\nActionContainer.prototype._popActionClass = function (options, defaultValue) {\n  defaultValue = defaultValue || null;\n\n  var action = (options.action || defaultValue);\n  delete options.action;\n\n  var actionClass = this._registryGet('action', action, action);\n  return actionClass;\n};\n\nActionContainer.prototype._getHandler = function () {\n  var handlerString = this.conflictHandler;\n  var handlerFuncName = \"_handleConflict\" + _.str.capitalize(handlerString);\n  var func = this[handlerFuncName];\n  if (typeof func === 'undefined') {\n    var msg = \"invalid conflict resolution value: \" + handlerString;\n    throw new Error(msg);\n  } else {\n    return func;\n  }\n};\n\nActionContainer.prototype._checkConflict = function (action) {\n  var optionStringActions = this._optionStringActions;\n  var conflictOptionals = [];\n\n  // find all options that conflict with this option\n  // collect pairs, the string, and an existing action that it conflicts with\n  action.optionStrings.forEach(function (optionString) {\n    var conflOptional = optionStringActions[optionString];\n    if (typeof conflOptional !== 'undefined') {\n      conflictOptionals.push([optionString, conflOptional]);\n    }\n  });\n\n  if (conflictOptionals.length > 0) {\n    var conflictHandler = this._getHandler();\n    conflictHandler.call(this, action, conflictOptionals);\n  }\n};\n\nActionContainer.prototype._handleConflictError = function (action, conflOptionals) {\n  var conflicts = _.map(conflOptionals, function (pair) {return pair[0]; });\n  conflicts = conflicts.join(', ');\n  throw argumentErrorHelper(\n    action,\n    format('Conflicting option string(s): %s', conflicts)\n  );\n};\n\nActionContainer.prototype._handleConflictResolve = function (action, conflOptionals) {\n  // remove all conflicting options\n  var self = this;\n  conflOptionals.forEach(function (pair) {\n    var optionString = pair[0];\n    var conflictingAction = pair[1];\n    // remove the conflicting option string\n    var i = conflictingAction.optionStrings.indexOf(optionString);\n    if (i >= 0) {\n      conflictingAction.optionStrings.splice(i, 1);\n    }\n    delete self._optionStringActions[optionString];\n    // if the option now has no option string, remove it from the\n    // container holding it\n    if (conflictingAction.optionStrings.length === 0) {\n      conflictingAction.container._removeAction(conflictingAction);\n    }\n  });\n};\n"]}