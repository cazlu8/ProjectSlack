{"version":3,"sources":["int.js"],"names":[],"mappings":"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","file":"int-compiled.js","sourcesContent":["'use strict';\n\n\nvar NIL  = require('../common').NIL;\nvar Type = require('../type');\n\n\nvar YAML_INTEGER_PATTERN = new RegExp(\n  '^(?:[-+]?0b[0-1_]+' +\n  '|[-+]?0[0-7_]+' +\n  '|[-+]?(?:0|[1-9][0-9_]*)' +\n  '|[-+]?0x[0-9a-fA-F_]+' +\n  '|[-+]?[1-9][0-9_]*(?::[0-5]?[0-9])+)$');\n\n\nfunction resolveYamlInteger(object /*, explicit*/) {\n  var value, sign, base, digits;\n\n  if (!YAML_INTEGER_PATTERN.test(object)) {\n    return NIL;\n  }\n\n  value  = object.replace(/_/g, '');\n  sign   = '-' === value[0] ? -1 : 1;\n  digits = [];\n\n  if (0 <= '+-'.indexOf(value[0])) {\n    value = value.slice(1);\n  }\n\n  if ('0' === value) {\n    return 0;\n\n  } else if (/^0b/.test(value)) {\n    return sign * parseInt(value.slice(2), 2);\n\n  } else if (/^0x/.test(value)) {\n    return sign * parseInt(value, 16);\n\n  } else if ('0' === value[0]) {\n    return sign * parseInt(value, 8);\n\n  } else if (0 <= value.indexOf(':')) {\n    value.split(':').forEach(function (v) {\n      digits.unshift(parseInt(v, 10));\n    });\n\n    value = 0;\n    base = 1;\n\n    digits.forEach(function (d) {\n      value += (d * base);\n      base *= 60;\n    });\n\n    return sign * value;\n\n  } else {\n    return sign * parseInt(value, 10);\n  }\n}\n\n\nmodule.exports = new Type('tag:yaml.org,2002:int', {\n  loader: {\n    kind: 'string',\n    resolver: resolveYamlInteger\n  },\n  dumper: {\n    kind: 'integer',\n    defaultStyle: 'decimal',\n    representer: {\n      binary:      function (object) { return '0b' + object.toString(2); },\n      octal:       function (object) { return '0'  + object.toString(8); },\n      decimal:     function (object) { return        object.toString(10); },\n      hexadecimal: function (object) { return '0x' + object.toString(16).toUpperCase(); }\n    },\n    styleAliases: {\n      binary:      [ 2,  'bin' ],\n      octal:       [ 8,  'oct' ],\n      decimal:     [ 10, 'dec' ],\n      hexadecimal: [ 16, 'hex' ]\n    }\n  }\n});\n"]}