{"version":3,"sources":["float.js"],"names":[],"mappings":"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","file":"float-compiled.js","sourcesContent":["'use strict';\n\n\nvar NIL  = require('../common').NIL;\nvar Type = require('../type');\n\n\nvar YAML_FLOAT_PATTERN = new RegExp(\n  '^(?:[-+]?(?:[0-9][0-9_]*)\\\\.[0-9_]*(?:[eE][-+][0-9]+)?' +\n  '|\\\\.[0-9_]+(?:[eE][-+][0-9]+)?' +\n  '|[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\\\.[0-9_]*' +\n  '|[-+]?\\\\.(?:inf|Inf|INF)' +\n  '|\\\\.(?:nan|NaN|NAN))$');\n\n\nfunction resolveYamlFloat(object /*, explicit*/) {\n  var value, sign, base, digits;\n\n  if (!YAML_FLOAT_PATTERN.test(object)) {\n    return NIL;\n  }\n\n  value  = object.replace(/_/g, '').toLowerCase();\n  sign   = '-' === value[0] ? -1 : 1;\n  digits = [];\n\n  if (0 <= '+-'.indexOf(value[0])) {\n    value = value.slice(1);\n  }\n\n  if ('.inf' === value) {\n    return (1 === sign) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n\n  } else if ('.nan' === value) {\n    return NaN;\n\n  } else if (0 <= value.indexOf(':')) {\n    value.split(':').forEach(function (v) {\n      digits.unshift(parseFloat(v, 10));\n    });\n\n    value = 0.0;\n    base = 1;\n\n    digits.forEach(function (d) {\n      value += d * base;\n      base *= 60;\n    });\n\n    return sign * value;\n\n  } else {\n    return sign * parseFloat(value, 10);\n  }\n}\n\n\nfunction representYamlFloat(object, style) {\n  if (isNaN(object)) {\n    switch (style) {\n    case 'lowercase':\n      return '.nan';\n    case 'uppercase':\n      return '.NAN';\n    case 'camelcase':\n      return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n    case 'lowercase':\n      return '.inf';\n    case 'uppercase':\n      return '.INF';\n    case 'camelcase':\n      return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n    case 'lowercase':\n      return '-.inf';\n    case 'uppercase':\n      return '-.INF';\n    case 'camelcase':\n      return '-.Inf';\n    }\n  } else {\n    return object.toString(10);\n  }\n}\n\n\nmodule.exports = new Type('tag:yaml.org,2002:float', {\n  loader: {\n    kind: 'string',\n    resolver: resolveYamlFloat\n  },\n  dumper: {\n    kind: 'float',\n    defaultStyle: 'lowercase',\n    representer: representYamlFloat\n  }\n});\n"]}