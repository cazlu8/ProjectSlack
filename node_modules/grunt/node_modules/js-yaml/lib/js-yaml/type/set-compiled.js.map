{"version":3,"sources":["set.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAGb,IAAI,GAAG,GAAI,OAAO,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC;AACpC,IAAI,IAAI,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;;AAG9B,IAAI,eAAe,GAAG,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC;;AAGtD,SAAS,cAAc,CAAC,MAAM,iBAAiB;AAC7C,MAAI,GAAG,CAAC;;AAER,OAAK,GAAG,IAAI,MAAM,EAAE;AAClB,QAAI,eAAe,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE;AACrC,UAAI,IAAI,KAAK,MAAM,CAAC,GAAG,CAAC,EAAE;AACxB,eAAO,GAAG,CAAC;OACZ;KACF;GACF;;AAED,SAAO,MAAM,CAAC;CACf;;AAGD,MAAM,CAAC,OAAO,GAAG,IAAI,IAAI,CAAC,uBAAuB,EAAE;AACjD,QAAM,EAAE;AACN,QAAI,EAAE,QAAQ;AACd,YAAQ,EAAE,cAAc;GACzB;CACF,CAAC,CAAC","file":"set-compiled.js","sourcesContent":["'use strict';\n\n\nvar NIL  = require('../common').NIL;\nvar Type = require('../type');\n\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\n\nfunction resolveYamlSet(object /*, explicit*/) {\n  var key;\n\n  for (key in object) {\n    if (_hasOwnProperty.call(object, key)) {\n      if (null !== object[key]) {\n        return NIL;\n      }\n    }\n  }\n\n  return object;\n}\n\n\nmodule.exports = new Type('tag:yaml.org,2002:set', {\n  loader: {\n    kind: 'object',\n    resolver: resolveYamlSet\n  }\n});\n"]}