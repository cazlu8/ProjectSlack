{"version":3,"sources":["regexp.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAGb,IAAI,GAAG,GAAI,OAAO,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC;AACvC,IAAI,IAAI,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;;AAGjC,SAAS,uBAAuB,CAAC,MAAM,iBAAiB;AACtD,MAAI,MAAM,GAAG,MAAM;MACf,IAAI,GAAK,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC;MACnC,SAAS,CAAC;;;AAGd,MAAI,GAAG,KAAK,MAAM,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE;AACpD,UAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;AACzD,aAAS,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;GACrB;;AAED,MAAI;AACF,WAAO,IAAI,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;GACtC,CAAC,OAAO,KAAK,EAAE;AACd,WAAO,GAAG,CAAC;GACZ;CACF;;AAGD,SAAS,yBAAyB,CAAC,MAAM,cAAc;AACrD,MAAI,MAAM,GAAG,GAAG,GAAG,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC;;AAEvC,MAAI,MAAM,CAAC,MAAM,EAAE;AACjB,UAAM,IAAI,GAAG,CAAC;GACf;;AAED,MAAI,MAAM,CAAC,SAAS,EAAE;AACpB,UAAM,IAAI,GAAG,CAAC;GACf;;AAED,MAAI,MAAM,CAAC,UAAU,EAAE;AACrB,UAAM,IAAI,GAAG,CAAC;GACf;;AAED,SAAO,MAAM,CAAC;CACf;;AAGD,MAAM,CAAC,OAAO,GAAG,IAAI,IAAI,CAAC,6BAA6B,EAAE;AACvD,QAAM,EAAE;AACN,QAAI,EAAE,QAAQ;AACd,YAAQ,EAAE,uBAAuB;GAClC;AACD,QAAM,EAAE;AACN,QAAI,EAAE,QAAQ;AACd,cAAU,EAAE,MAAM;AAClB,eAAW,EAAE,yBAAyB;GACvC;CACF,CAAC,CAAC","file":"regexp-compiled.js","sourcesContent":["'use strict';\n\n\nvar NIL  = require('../../common').NIL;\nvar Type = require('../../type');\n\n\nfunction resolveJavascriptRegExp(object /*, explicit*/) {\n  var regexp = object,\n      tail   = /\\/([gim]*)$/.exec(object),\n      modifiers;\n\n  // `/foo/gim` - tail can be maximum 4 chars\n  if ('/' === regexp[0] && tail && 4 >= tail[0].length) {\n    regexp = regexp.slice(1, regexp.length - tail[0].length);\n    modifiers = tail[1];\n  }\n\n  try {\n    return new RegExp(regexp, modifiers);\n  } catch (error) {\n    return NIL;\n  }\n}\n\n\nfunction representJavascriptRegExp(object /*, style*/) {\n  var result = '/' + object.source + '/';\n\n  if (object.global) {\n    result += 'g';\n  }\n\n  if (object.multiline) {\n    result += 'm';\n  }\n\n  if (object.ignoreCase) {\n    result += 'i';\n  }\n\n  return result;\n}\n\n\nmodule.exports = new Type('tag:yaml.org,2002:js/regexp', {\n  loader: {\n    kind: 'string',\n    resolver: resolveJavascriptRegExp\n  },\n  dumper: {\n    kind: 'object',\n    instanceOf: RegExp,\n    representer: representJavascriptRegExp\n  }\n});\n"]}