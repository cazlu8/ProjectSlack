{"version":3,"sources":["function.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAGb,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;;AAGjC,IAAI,GAAG,GAAI,OAAO,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC;AACvC,IAAI,IAAI,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;;AAGjC,SAAS,yBAAyB,CAAC,MAAM,iBAAiB;;;AAGxD,MAAI;AACF,QAAI,MAAM,GAAG,GAAG,GAAG,MAAM,GAAG,GAAG;QAC3B,GAAG,GAAM,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAC/C,MAAM,GAAG,EAAE;QACX,IAAI,CAAC;;AAET,QAAI,SAAS,KAAiB,GAAG,CAAC,IAAI,IAClC,CAAC,KAAyB,GAAG,CAAC,IAAI,CAAC,MAAM,IACzC,qBAAqB,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,IAC1C,oBAAoB,KAAM,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,EAAE;AACzD,aAAO,GAAG,CAAC;KACZ;;AAED,OAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,KAAK,EAAE;AACrD,YAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;KACzB,CAAC,CAAC;;AAEH,QAAI,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC;;;;AAIzC,WAAO,IAAI,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,GAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC;GACjE,CAAC,OAAO,GAAG,EAAE;AACZ,WAAO,GAAG,CAAC;GACZ;CACF;;AAGD,SAAS,2BAA2B,CAAC,MAAM,cAAc;AACvD,SAAO,MAAM,CAAC,QAAQ,EAAE,CAAC;CAC1B;;AAGD,MAAM,CAAC,OAAO,GAAG,IAAI,IAAI,CAAC,+BAA+B,EAAE;AACzD,QAAM,EAAE;AACN,QAAI,EAAE,QAAQ;AACd,YAAQ,EAAE,yBAAyB;GACpC;AACD,QAAM,EAAE;AACN,QAAI,EAAE,UAAU;AAChB,eAAW,EAAE,2BAA2B,EACzC;CACF,CAAC,CAAC","file":"function-compiled.js","sourcesContent":["'use strict';\n\n\nvar esprima = require('esprima');\n\n\nvar NIL  = require('../../common').NIL;\nvar Type = require('../../type');\n\n\nfunction resolveJavascriptFunction(object /*, explicit*/) {\n  /*jslint evil:true*/\n\n  try {\n    var source = '(' + object + ')',\n        ast    = esprima.parse(source, { range: true }),\n        params = [],\n        body;\n\n    if ('Program'             !== ast.type         ||\n        1                     !== ast.body.length  ||\n        'ExpressionStatement' !== ast.body[0].type ||\n        'FunctionExpression'  !== ast.body[0].expression.type) {\n      return NIL;\n    }\n\n    ast.body[0].expression.params.forEach(function (param) {\n      params.push(param.name);\n    });\n\n    body = ast.body[0].expression.body.range;\n\n    // Esprima's ranges include the first '{' and the last '}' characters on\n    // function expressions. So cut them out.\n    return new Function(params, source.slice(body[0]+1, body[1]-1));\n  } catch (err) {\n    return NIL;\n  }\n}\n\n\nfunction representJavascriptFunction(object /*, style*/) {\n  return object.toString();\n}\n\n\nmodule.exports = new Type('tag:yaml.org,2002:js/function', {\n  loader: {\n    kind: 'string',\n    resolver: resolveJavascriptFunction\n  },\n  dumper: {\n    kind: 'function',\n    representer: representJavascriptFunction,\n  }\n});\n"]}