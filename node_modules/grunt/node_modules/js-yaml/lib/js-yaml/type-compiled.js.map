{"version":3,"sources":["type.js"],"names":[],"mappings":"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","file":"type-compiled.js","sourcesContent":["'use strict';\n\n\nvar YAMLException = require('./exception');\n\n\n// TODO: Add tag format check.\nfunction Type(tag, options) {\n  options = options || {};\n\n  this.tag    = tag;\n  this.loader = options['loader'] || null;\n  this.dumper = options['dumper'] || null;\n\n  if (null === this.loader && null === this.dumper) {\n    throw new YAMLException('Incomplete YAML type definition. \"loader\" or \"dumper\" setting must be specified.');\n  }\n\n  if (null !== this.loader) {\n    this.loader = new Type.Loader(this.loader);\n  }\n\n  if (null !== this.dumper) {\n    this.dumper = new Type.Dumper(this.dumper);\n  }\n}\n\n\nType.Loader = function TypeLoader(options) {\n  options = options || {};\n\n  this.kind     = options['kind']     || null;\n  this.resolver = options['resolver'] || null;\n\n  if ('string' !== this.kind &&\n      'array'  !== this.kind &&\n      'object' !== this.kind) {\n    throw new YAMLException('Unacceptable \"kind\" setting of a type loader.');\n  }\n};\n\n\nfunction compileAliases(map) {\n  var result = {};\n\n  if (null !== map) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n\n  return result;\n}\n\n\nType.Dumper = function TypeDumper(options) {\n  options = options || {};\n\n  this.kind         = options['kind']         || null;\n  this.defaultStyle = options['defaultStyle'] || null;\n  this.instanceOf   = options['instanceOf']   || null;\n  this.predicate    = options['predicate']    || null;\n  this.representer  = options['representer']  || null;\n  this.styleAliases = compileAliases(options['styleAliases'] || null);\n\n  if ('undefined' !== this.kind &&\n      'null'      !== this.kind &&\n      'boolean'   !== this.kind &&\n      'integer'   !== this.kind &&\n      'float'     !== this.kind &&\n      'string'    !== this.kind &&\n      'array'     !== this.kind &&\n      'object'    !== this.kind &&\n      'function'  !== this.kind) {\n    throw new YAMLException('Unacceptable \"kind\" setting of a type dumper.');\n  }\n};\n\n\nmodule.exports = Type;\n"]}