{"version":3,"sources":["common.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAGb,IAAI,GAAG,GAAG,EAAE,CAAC;;AAGb,SAAS,SAAS,CAAC,OAAO,EAAE;AAC1B,SAAO,AAAC,SAAS,KAAK,OAAO,IAAM,IAAI,KAAK,OAAO,AAAC,CAAC;CACtD;;AAGD,SAAS,QAAQ,CAAC,OAAO,EAAE;AACzB,SAAO,AAAC,QAAQ,KAAK,OAAO,OAAO,IAAM,IAAI,KAAK,OAAO,AAAC,CAAC;CAC5D;;AAGD,SAAS,OAAO,CAAC,QAAQ,EAAE;AACzB,MAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;AAC3B,WAAO,QAAQ,CAAC;GACjB,MAAM,IAAI,SAAS,CAAC,QAAQ,CAAC,EAAE;AAC9B,WAAO,EAAE,CAAC;GACX,MAAM;AACL,WAAO,CAAE,QAAQ,CAAE,CAAC;GACrB;CACF;;AAGD,SAAS,MAAM,CAAC,MAAM,EAAE,MAAM,EAAE;AAC9B,MAAI,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,UAAU,CAAC;;AAEnC,MAAI,MAAM,EAAE;AACV,cAAU,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;;AAEjC,SAAK,KAAK,GAAG,CAAC,EAAE,MAAM,GAAG,UAAU,CAAC,MAAM,EAAE,KAAK,GAAG,MAAM,EAAE,KAAK,IAAI,CAAC,EAAE;AACtE,SAAG,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;AACxB,YAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;KAC3B;GACF;;AAED,SAAO,MAAM,CAAC;CACf;;AAGD,SAAS,MAAM,CAAC,MAAM,EAAE,KAAK,EAAE;AAC7B,MAAI,MAAM,GAAG,EAAE;MAAE,KAAK,CAAC;;AAEvB,OAAK,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,IAAI,CAAC,EAAE;AACzC,UAAM,IAAI,MAAM,CAAC;GAClB;;AAED,SAAO,MAAM,CAAC;CACf;;AAGD,MAAM,CAAC,OAAO,CAAC,GAAG,GAAU,GAAG,CAAC;AAChC,MAAM,CAAC,OAAO,CAAC,SAAS,GAAI,SAAS,CAAC;AACtC,MAAM,CAAC,OAAO,CAAC,QAAQ,GAAK,QAAQ,CAAC;AACrC,MAAM,CAAC,OAAO,CAAC,OAAO,GAAM,OAAO,CAAC;AACpC,MAAM,CAAC,OAAO,CAAC,MAAM,GAAO,MAAM,CAAC;AACnC,MAAM,CAAC,OAAO,CAAC,MAAM,GAAO,MAAM,CAAC","file":"common-compiled.js","sourcesContent":["'use strict';\n\n\nvar NIL = {};\n\n\nfunction isNothing(subject) {\n  return (undefined === subject) || (null === subject);\n}\n\n\nfunction isObject(subject) {\n  return ('object' === typeof subject) && (null !== subject);\n}\n\n\nfunction toArray(sequence) {\n  if (Array.isArray(sequence)) {\n    return sequence;\n  } else if (isNothing(sequence)) {\n    return [];\n  } else {\n    return [ sequence ];\n  }\n}\n\n\nfunction extend(target, source) {\n  var index, length, key, sourceKeys;\n\n  if (source) {\n    sourceKeys = Object.keys(source);\n\n    for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n      key = sourceKeys[index];\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\n\nfunction repeat(string, count) {\n  var result = '', cycle;\n\n  for (cycle = 0; cycle < count; cycle += 1) {\n    result += string;\n  }\n\n  return result;\n}\n\n\nmodule.exports.NIL        = NIL;\nmodule.exports.isNothing  = isNothing;\nmodule.exports.isObject   = isObject;\nmodule.exports.toArray    = toArray;\nmodule.exports.repeat     = repeat;\nmodule.exports.extend     = extend;\n"]}