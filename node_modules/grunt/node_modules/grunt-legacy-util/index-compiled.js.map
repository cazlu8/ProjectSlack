{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["/*\n * grunt\n * http://gruntjs.com/\n *\n * Copyright (c) 2014 \"Cowboy\" Ben Alman\n * Licensed under the MIT license.\n * https://github.com/gruntjs/grunt/blob/master/LICENSE-MIT\n */\n\n'use strict';\n\n// Nodejs libs.\nvar spawn = require('child_process').spawn;\nvar nodeUtil = require('util');\nvar path = require('path');\n\n// The module to be exported.\nvar util = module.exports = {};\n\nutil.namespace = require('getobject');\n\n// External libs.\nutil.hooker = require('hooker');\nutil.async = require('async');\nvar _ = util._ = require('lodash');\nvar which = require('which').sync;\n// Instead of process.exit. See https://github.com/cowboy/node-exit\nutil.exit = require('exit');\n\n// Mixin Underscore.string methods.\n_.str = require('underscore.string');\n_.mixin(_.str.exports());\n\n// Return a function that normalizes the given function either returning a\n// value or accepting a \"done\" callback that accepts a single value.\nutil.callbackify = function(fn) {\n  return function callbackable() {\n    // Invoke original function, getting its result.\n    var result = fn.apply(this, arguments);\n    // If the same number or less arguments were specified than fn accepts,\n    // assume the \"done\" callback was already handled.\n    var length = arguments.length;\n    if (length === fn.length) { return; }\n    // Otherwise, if the last argument is a function, assume it is a \"done\"\n    // callback and call it.\n    var done = arguments[length - 1];\n    if (typeof done === 'function') { done(result); }\n  };\n};\n\n// Create a new Error object, with an origError property that will be dumped\n// if grunt was run with the --debug=9 option.\nutil.error = function(err, origError) {\n  if (!nodeUtil.isError(err)) { err = new Error(err); }\n  if (origError) { err.origError = origError; }\n  return err;\n};\n\n// The line feed char for the current system.\nutil.linefeed = process.platform === 'win32' ? '\\r\\n' : '\\n';\n\n// Normalize linefeeds in a string.\nutil.normalizelf = function(str) {\n  return str.replace(/\\r\\n|\\n/g, util.linefeed);\n};\n\n// What \"kind\" is a value?\n// I really need to rework https://github.com/cowboy/javascript-getclass\nvar kindsOf = {};\n'Number String Boolean Function RegExp Array Date Error'.split(' ').forEach(function(k) {\n  kindsOf['[object ' + k + ']'] = k.toLowerCase();\n});\nutil.kindOf = function(value) {\n  // Null or undefined.\n  if (value == null) { return String(value); }\n  // Everything else.\n  return kindsOf[kindsOf.toString.call(value)] || 'object';\n};\n\n// Coerce something to an Array.\nutil.toArray = _.toArray;\n\n// Return the string `str` repeated `n` times.\nutil.repeat = function(n, str) {\n  return new Array(n + 1).join(str || ' ');\n};\n\n// Given str of \"a/b\", If n is 1, return \"a\" otherwise \"b\".\nutil.pluralize = function(n, str, separator) {\n  var parts = str.split(separator || '/');\n  return n === 1 ? (parts[0] || '') : (parts[1] || '');\n};\n\n// Recurse through objects and arrays, executing fn for each non-object.\nutil.recurse = function(value, fn, fnContinue) {\n  function recurse(value, fn, fnContinue, state) {\n    var error;\n    if (state.objs.indexOf(value) !== -1) {\n      error = new Error('Circular reference detected (' + state.path + ')');\n      error.path = state.path;\n      throw error;\n    }\n    var obj, key;\n    if (fnContinue && fnContinue(value) === false) {\n      // Skip value if necessary.\n      return value;\n    } else if (util.kindOf(value) === 'array') {\n      // If value is an array, recurse.\n      return value.map(function(item, index) {\n        return recurse(item, fn, fnContinue, {\n          objs: state.objs.concat([value]),\n          path: state.path + '[' + index + ']',\n        });\n      });\n    } else if (util.kindOf(value) === 'object' && !Buffer.isBuffer(value)) {\n      // If value is an object, recurse.\n      obj = {};\n      for (key in value) {\n        obj[key] = recurse(value[key], fn, fnContinue, {\n          objs: state.objs.concat([value]),\n          path: state.path + (/\\W/.test(key) ? '[\"' + key + '\"]' : '.' + key),\n        });\n      }\n      return obj;\n    } else {\n      // Otherwise pass value into fn and return.\n      return fn(value);\n    }\n  }\n  return recurse(value, fn, fnContinue, {objs: [], path: ''});\n};\n\n// Spawn a child process, capturing its stdout and stderr.\nutil.spawn = function(opts, done) {\n  // Build a result object and pass it (among other things) into the\n  // done function.\n  var callDone = function(code, stdout, stderr) {\n    // Remove trailing whitespace (newline)\n    stdout = _.rtrim(stdout);\n    stderr = _.rtrim(stderr);\n    // Create the result object.\n    var result = {\n      stdout: stdout,\n      stderr: stderr,\n      code: code,\n      toString: function() {\n        if (code === 0) {\n          return stdout;\n        } else if ('fallback' in opts) {\n          return opts.fallback;\n        } else if (opts.grunt) {\n          // grunt.log.error uses standard out, to be fixed in 0.5.\n          return stderr || stdout;\n        }\n        return stderr;\n      }\n    };\n    // On error (and no fallback) pass an error object, otherwise pass null.\n    done(code === 0 || 'fallback' in opts ? null : new Error(stderr), result, code);\n  };\n\n  var cmd, args;\n  var pathSeparatorRe = /[\\\\\\/]/g;\n  if (opts.grunt) {\n    cmd = process.execPath;\n    args = process.execArgv.concat(process.argv[1], opts.args);\n  } else {\n    // On Windows, child_process.spawn will only file .exe files in the PATH,\n    // not other executable types (grunt issue #155).\n    try {\n      if (!pathSeparatorRe.test(opts.cmd)) {\n        // Only use which if cmd has no path component.\n        cmd = which(opts.cmd);\n      } else {\n        cmd = opts.cmd.replace(pathSeparatorRe, path.sep);\n      }\n    } catch (err) {\n      callDone(127, '', String(err));\n      return;\n    }\n    args = opts.args || [];\n  }\n\n  var child = spawn(cmd, args, opts.opts);\n  var stdout = new Buffer('');\n  var stderr = new Buffer('');\n  if (child.stdout) {\n    child.stdout.on('data', function(buf) {\n      stdout = Buffer.concat([stdout, new Buffer(buf)]);\n    });\n  }\n  if (child.stderr) {\n    child.stderr.on('data', function(buf) {\n      stderr = Buffer.concat([stderr, new Buffer(buf)]);\n    });\n  }\n  child.on('close', function(code) {\n    callDone(code, stdout.toString(), stderr.toString());\n  });\n  return child;\n};\n\n"]}