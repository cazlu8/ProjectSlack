{"version":3,"sources":["spawn-multibyte.js"],"names":[],"mappings":";;;;;;;;AAMA,IAAI,UAAU,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC;;;AAGrC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;;AAG7C,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;;;AAG1C,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC7C,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC","file":"spawn-multibyte-compiled.js","sourcesContent":["// This is a test fixture for a case where spawn receives incomplete\n// multibyte strings in separate data events.\n\n// A multibyte buffer containing all our output. We will slice it later.\n// In this case we are using a Japanese word for hello / good day, where each\n// character takes three bytes.\nvar fullOutput = new Buffer('こんにちは');\n\n// Output one full character and one third of a character\nprocess.stdout.write(fullOutput.slice(0, 4));\n\n// Output the rest of the string\nprocess.stdout.write(fullOutput.slice(4));\n\n// Do the same for stderr\nprocess.stderr.write(fullOutput.slice(0, 4));\nprocess.stderr.write(fullOutput.slice(4));\n"]}