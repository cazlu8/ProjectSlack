"use strict";

(function (a) {
  "use strict";var b = String.prototype.trim,
      c = String.prototype.trimRight,
      d = String.prototype.trimLeft,
      e = function e(a) {
    return a * 1 || 0;
  },
      f = function f(a, b, c) {
    a += "", b = ~ ~b;for (var d = []; b > 0; d[--b] = a);return d.join(c == null ? "" : c);
  },
      g = function g(a) {
    return Array.prototype.slice.call(a);
  },
      h = function h(a) {
    return a != null ? "[" + m.escapeRegExp("" + a) + "]" : "\\s";
  },
      i = { lt: "<", gt: ">", quot: "\"", apos: "'", amp: "&" },
      j = {};for (var k in i) j[i[k]] = k;var l = (function () {
    function a(a) {
      return Object.prototype.toString.call(a).slice(8, -1).toLowerCase();
    }var b = f,
        c = function c() {
      return (c.cache.hasOwnProperty(arguments[0]) || (c.cache[arguments[0]] = c.parse(arguments[0])), c.format.call(null, c.cache[arguments[0]], arguments));
    };return (c.format = function (c, d) {
      var e = 1,
          f = c.length,
          g = "",
          h,
          i = [],
          j,
          k,
          m,
          n,
          o,
          p;for (j = 0; j < f; j++) {
        g = a(c[j]);if (g === "string") i.push(c[j]);else if (g === "array") {
          m = c[j];if (m[2]) {
            h = d[e];for (k = 0; k < m[2].length; k++) {
              if (!h.hasOwnProperty(m[2][k])) throw new Error(l("[_.sprintf] property \"%s\" does not exist", m[2][k]));h = h[m[2][k]];
            }
          } else m[1] ? h = d[m[1]] : h = d[e++];if (/[^s]/.test(m[8]) && a(h) != "number") throw new Error(l("[_.sprintf] expecting number but found %s", a(h)));switch (m[8]) {case "b":
              h = h.toString(2);break;case "c":
              h = String.fromCharCode(h);break;case "d":
              h = parseInt(h, 10);break;case "e":
              h = m[7] ? h.toExponential(m[7]) : h.toExponential();break;case "f":
              h = m[7] ? parseFloat(h).toFixed(m[7]) : parseFloat(h);break;case "o":
              h = h.toString(8);break;case "s":
              h = (h = String(h)) && m[7] ? h.substring(0, m[7]) : h;break;case "u":
              h = Math.abs(h);break;case "x":
              h = h.toString(16);break;case "X":
              h = h.toString(16).toUpperCase();}h = /[def]/.test(m[8]) && m[3] && h >= 0 ? "+" + h : h, o = m[4] ? m[4] == "0" ? "0" : m[4].charAt(1) : " ", p = m[6] - String(h).length, n = m[6] ? b(o, p) : "", i.push(m[5] ? h + n : n + h);
        }
      }return i.join("");
    }, c.cache = {}, c.parse = function (a) {
      var b = a,
          c = [],
          d = [],
          e = 0;while (b) {
        if ((c = /^[^\x25]+/.exec(b)) !== null) d.push(c[0]);else if ((c = /^\x25{2}/.exec(b)) !== null) d.push("%");else {
          if ((c = /^\x25(?:([1-9]\d*)\$|\(([^\)]+)\))?(\+)?(0|'[^$])?(-)?(\d+)?(?:\.(\d+))?([b-fosuxX])/.exec(b)) === null) throw new Error("[_.sprintf] huh?");if (c[2]) {
            e |= 1;var f = [],
                g = c[2],
                h = [];if ((h = /^([a-z_][a-z_\d]*)/i.exec(g)) === null) throw new Error("[_.sprintf] huh?");f.push(h[1]);while ((g = g.substring(h[0].length)) !== "") if ((h = /^\.([a-z_][a-z_\d]*)/i.exec(g)) !== null) f.push(h[1]);else {
              if ((h = /^\[(\d+)\]/.exec(g)) === null) throw new Error("[_.sprintf] huh?");f.push(h[1]);
            }c[2] = f;
          } else e |= 2;if (e === 3) throw new Error("[_.sprintf] mixing positional and named placeholders is not (yet) supported");d.push(c);
        }b = b.substring(c[0].length);
      }return d;
    }, c);
  })(),
      m = { VERSION: "2.1.1", isBlank: function isBlank(a) {
      return /^\s*$/.test(a);
    }, stripTags: function stripTags(a) {
      return ("" + a).replace(/<\/?[^>]+>/g, "");
    }, capitalize: function capitalize(a) {
      return (a += "", a.charAt(0).toUpperCase() + a.substring(1));
    }, chop: function chop(a, b) {
      a += "", b = ~ ~b || a.length;var c = [];for (var d = 0; d < a.length; d += b) c.push(a.slice(d, d + b));return c;
    }, clean: function clean(a) {
      return m.strip(a).replace(/\s+/g, " ");
    }, count: function count(a, b) {
      return (a += "", b += "", a.split(b).length - 1);
    }, chars: function chars(a) {
      return ("" + a).split("");
    }, escapeHTML: function escapeHTML(a) {
      return ("" + a).replace(/[&<>"']/g, function (a) {
        return "&" + j[a] + ";";
      });
    }, unescapeHTML: function unescapeHTML(a) {
      return ("" + a).replace(/\&([^;]+);/g, function (a, b) {
        var c;return b in i ? i[b] : (c = b.match(/^#x([\da-fA-F]+)$/)) ? String.fromCharCode(parseInt(c[1], 16)) : (c = b.match(/^#(\d+)$/)) ? String.fromCharCode(~ ~c[1]) : a;
      });
    }, escapeRegExp: function escapeRegExp(a) {
      return a.replace(/([-.*+?^${}()|[\]\/\\])/g, "\\$1");
    }, insert: function insert(a, b, c) {
      var d = m.chars(a);return (d.splice(~ ~b, 0, "" + c), d.join(""));
    }, include: function include(a, b) {
      return !! ~("" + a).indexOf(b);
    }, join: function join() {
      var a = g(arguments);return a.join(a.shift());
    }, lines: function lines(a) {
      return ("" + a).split("\n");
    }, reverse: function reverse(a) {
      return m.chars(a).reverse().join("");
    }, splice: function splice(a, b, c, d) {
      var e = m.chars(a);return (e.splice(~ ~b, ~ ~c, d), e.join(""));
    }, startsWith: function startsWith(a, b) {
      return (a += "", b += "", a.length >= b.length && a.substring(0, b.length) === b);
    }, endsWith: function endsWith(a, b) {
      return (a += "", b += "", a.length >= b.length && a.substring(a.length - b.length) === b);
    }, succ: function succ(a) {
      a += "";var b = m.chars(a);return (b.splice(a.length - 1, 1, String.fromCharCode(a.charCodeAt(a.length - 1) + 1)), b.join(""));
    }, titleize: function titleize(a) {
      return ("" + a).replace(/\b./g, function (a) {
        return a.toUpperCase();
      });
    }, camelize: function camelize(a) {
      return m.trim(a).replace(/[-_\s]+(.)?/g, function (a, b) {
        return b && b.toUpperCase();
      });
    }, underscored: function underscored(a) {
      return m.trim(a).replace(/([a-z\d])([A-Z]+)/g, "$1_$2").replace(/[-\s]+/g, "_").toLowerCase();
    }, dasherize: function dasherize(a) {
      return m.trim(a).replace(/[_\s]+/g, "-").replace(/([A-Z])/g, "-$1").replace(/-+/g, "-").toLowerCase();
    }, classify: function classify(a) {
      return (a += "", m.titleize(a.replace(/_/g, " ")).replace(/\s/g, ""));
    }, humanize: function humanize(a) {
      return m.capitalize(this.underscored(a).replace(/_id$/, "").replace(/_/g, " "));
    }, trim: function trim(a, c) {
      return (a += "", !c && b ? b.call(a) : (c = h(c), a.replace(new RegExp("^" + c + "+|" + c + "+$", "g"), "")));
    }, ltrim: function ltrim(a, b) {
      return (a += "", !b && d ? d.call(a) : (b = h(b), a.replace(new RegExp("^" + b + "+"), "")));
    }, rtrim: function rtrim(a, b) {
      return (a += "", !b && c ? c.call(a) : (b = h(b), a.replace(new RegExp(b + "+$"), "")));
    }, truncate: function truncate(a, b, c) {
      return (a += "", c = c || "...", b = ~ ~b, a.length > b ? a.slice(0, b) + c : a);
    }, prune: function prune(a, b, c) {
      a += "", b = ~ ~b, c = c != null ? "" + c : "...";var d,
          e,
          f = a.replace(/\W/g, function (a) {
        return a.toUpperCase() !== a.toLowerCase() ? "A" : " ";
      });return (e = f.charAt(b), d = f.slice(0, b), e && e.match(/\S/) && (d = d.replace(/\s\S+$/, "")), d = m.rtrim(d), (d + c).length > a.length ? a : a.substring(0, d.length) + c);
    }, words: function words(a, b) {
      return m.trim(a, b).split(b || /\s+/);
    }, pad: function pad(a, b, c, d) {
      a += "";var e = 0;b = ~ ~b, c ? c.length > 1 && (c = c.charAt(0)) : c = " ";switch (d) {case "right":
          return (e = b - a.length, a + f(c, e));case "both":
          return (e = b - a.length, f(c, Math.ceil(e / 2)) + a + f(c, Math.floor(e / 2)));default:
          return (e = b - a.length, f(c, e) + a);}
    }, lpad: function lpad(a, b, c) {
      return m.pad(a, b, c);
    }, rpad: function rpad(a, b, c) {
      return m.pad(a, b, c, "right");
    }, lrpad: function lrpad(a, b, c) {
      return m.pad(a, b, c, "both");
    }, sprintf: l, vsprintf: function vsprintf(a, b) {
      return (b.unshift(a), l.apply(null, b));
    }, toNumber: function toNumber(a, b) {
      a += "";var c = e(e(a).toFixed(~ ~b));return c === 0 && !a.match(/^0+$/) ? Number.NaN : c;
    }, strRight: function strRight(a, b) {
      a += "", b = b != null ? "" + b : b;var c = b ? a.indexOf(b) : -1;return ~c ? a.slice(c + b.length, a.length) : a;
    }, strRightBack: function strRightBack(a, b) {
      a += "", b = b != null ? "" + b : b;var c = b ? a.lastIndexOf(b) : -1;return ~c ? a.slice(c + b.length, a.length) : a;
    }, strLeft: function strLeft(a, b) {
      a += "", b = b != null ? "" + b : b;var c = b ? a.indexOf(b) : -1;return ~c ? a.slice(0, c) : a;
    }, strLeftBack: function strLeftBack(a, b) {
      a += "", b = b != null ? "" + b : b;var c = a.lastIndexOf(b);return ~c ? a.slice(0, c) : a;
    }, toSentence: function toSentence(a, b, c) {
      b || (b = ", "), c || (c = " and ");var d = a.length,
          e = "";for (var f = 0; f < d; f++) e += a[f], f === d - 2 ? e += c : f < d - 1 && (e += b);return e;
    }, slugify: function slugify(a) {
      var b = "ąàáäâãćęèéëêìíïîłńòóöôõùúüûñçżź",
          c = "aaaaaaceeeeeiiiilnooooouuuunczz",
          d = new RegExp(h(b), "g");return (a = ("" + a).toLowerCase(), a = a.replace(d, function (a) {
        var d = b.indexOf(a);return c.charAt(d) || "-";
      }), m.trim(a.replace(/[^\w\s-]/g, "").replace(/[-\s]+/g, "-"), "-"));
    }, exports: function exports() {
      var a = {};for (var b in this) {
        if (!this.hasOwnProperty(b) || ~m.words("include contains reverse").indexOf(b)) continue;a[b] = this[b];
      }return a;
    }, repeat: f };m.strip = m.trim, m.lstrip = m.ltrim, m.rstrip = m.rtrim, m.center = m.lrpad, m.rjust = m.lpad, m.ljust = m.rpad, m.contains = m.include, typeof exports != "undefined" ? (typeof module != "undefined" && module.exports && (module.exports = m), exports._s = m) : typeof define == "function" && define.amd ? define("underscore.string", function () {
    return m;
  }) : (a._ = a._ || {}, a._.string = a._.str = m);
})(undefined || window);

//# sourceMappingURL=underscore.string.min-compiled.js.map