{"version":3,"sources":["run-qunit.js"],"names":[],"mappings":";;AAAA,SAAS,OAAO,CAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE;AACxC,MAAI,MAAM;MAAE,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAA;AACxC,aAAW,CAAC,SAAS,QAAQ,GAAG;AAC9B,QAAI,AAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,KAAK,GAAG,OAAO,IAAK,CAAC,MAAM,EAAE;AACvD,YAAM,GAAG,IAAI,EAAE,CAAA;KAChB,MAAM;AACL,UAAI,CAAC,MAAM,EAAE;AACX,eAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;OAChB,MAAM;AACL,gBAAQ,EAAE,CAAA;AACV,qBAAa,CAAC,QAAQ,CAAC,CAAA;OACxB;KACF;GACF,EAAE,GAAG,CAAC,CAAA;CACR;;AAGD,IAAI,IAAI,GAAG,IAAI,OAAO,EAAE,CAAA;;AAExB,IAAI,CAAC,gBAAgB,GAAG,UAAS,GAAG,EAAE;AACpC,SAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;CACjB,CAAA;;AAED,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,UAAS,MAAM,EAAE;AAC1C,SAAO,CAAC,YAAW;AACjB,WAAO,IAAI,CAAC,QAAQ,CAAC,YAAU;AAC7B,UAAI,EAAE,GAAG,QAAQ,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAA;AACpD,aAAO,EAAE,IAAI,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,CAAC,CAAA;KAC7C,CAAC,CAAA;GACH,EAAE,YAAW;AACZ,QAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAW;AACtC,UAAI,EAAE,GAAM,QAAQ,CAAC,cAAc,CAAC,kBAAkB,CAAC;UACnD,KAAK,GAAG,QAAQ,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAA;;AAEnD,WAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EACnC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAA;;AAEjC,aAAO,CAAC,GAAG,CAAC,EAAE,CAAC,SAAS,CAAC,CAAA;;AAEzB,aAAO,QAAQ,CAAC,EAAE,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAA;KAClE,CAAC,CAAA;AACF,WAAO,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAA;GACnC,EAAE,KAAK,CAAC,CAAA;CACV,CAAC,CAAA","file":"run-qunit-compiled.js","sourcesContent":["function waitFor(test, complete, timeout) {\n  var result, start = new Date().getTime()\n  setInterval(function interval() {\n    if ((new Date().getTime() - start < timeout) && !result) {\n      result = test()\n    } else {\n      if (!result) {\n        phantom.exit(1)\n      } else {\n        complete()\n        clearInterval(interval)\n      }\n    }\n  }, 100)\n}\n\n\nvar page = new WebPage()\n\npage.onConsoleMessage = function(msg) {\n  console.log(msg)\n}\n\npage.open(phantom.args[0], function(status) {\n  waitFor(function() {\n    return page.evaluate(function(){\n      var el = document.getElementById('qunit-testresult')\n      return el && el.innerText.match('completed')\n    })\n  }, function() {\n    var failures = page.evaluate(function() {\n      var el    = document.getElementById('qunit-testresult'),\n          fails = document.getElementsByClassName('fail')\n\n      for (var i = 0; i < fails.length; i++)\n        console.log(fails[i].innerText)\n\n      console.log(el.innerText)\n\n      return parseInt(el.getElementsByClassName('failed')[0].innerHTML)\n    })\n    phantom.exit(failures > 0 ? 1 : 0)\n  }, 10000)\n})"]}