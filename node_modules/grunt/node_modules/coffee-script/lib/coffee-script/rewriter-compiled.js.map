{"version":3,"sources":["rewriter.js"],"names":[],"mappings":"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","file":"rewriter-compiled.js","sourcesContent":["// Generated by CoffeeScript 1.3.3\n(function() {\n  var BALANCED_PAIRS, EXPRESSION_CLOSE, EXPRESSION_END, EXPRESSION_START, IMPLICIT_BLOCK, IMPLICIT_CALL, IMPLICIT_END, IMPLICIT_FUNC, IMPLICIT_UNSPACED_CALL, INVERSES, LINEBREAKS, SINGLE_CLOSERS, SINGLE_LINERS, left, rite, _i, _len, _ref,\n    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; },\n    __slice = [].slice;\n\n  exports.Rewriter = (function() {\n\n    function Rewriter() {}\n\n    Rewriter.prototype.rewrite = function(tokens) {\n      this.tokens = tokens;\n      this.removeLeadingNewlines();\n      this.removeMidExpressionNewlines();\n      this.closeOpenCalls();\n      this.closeOpenIndexes();\n      this.addImplicitIndentation();\n      this.tagPostfixConditionals();\n      this.addImplicitBraces();\n      this.addImplicitParentheses();\n      return this.tokens;\n    };\n\n    Rewriter.prototype.scanTokens = function(block) {\n      var i, token, tokens;\n      tokens = this.tokens;\n      i = 0;\n      while (token = tokens[i]) {\n        i += block.call(this, token, i, tokens);\n      }\n      return true;\n    };\n\n    Rewriter.prototype.detectEnd = function(i, condition, action) {\n      var levels, token, tokens, _ref, _ref1;\n      tokens = this.tokens;\n      levels = 0;\n      while (token = tokens[i]) {\n        if (levels === 0 && condition.call(this, token, i)) {\n          return action.call(this, token, i);\n        }\n        if (!token || levels < 0) {\n          return action.call(this, token, i - 1);\n        }\n        if (_ref = token[0], __indexOf.call(EXPRESSION_START, _ref) >= 0) {\n          levels += 1;\n        } else if (_ref1 = token[0], __indexOf.call(EXPRESSION_END, _ref1) >= 0) {\n          levels -= 1;\n        }\n        i += 1;\n      }\n      return i - 1;\n    };\n\n    Rewriter.prototype.removeLeadingNewlines = function() {\n      var i, tag, _i, _len, _ref;\n      _ref = this.tokens;\n      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {\n        tag = _ref[i][0];\n        if (tag !== 'TERMINATOR') {\n          break;\n        }\n      }\n      if (i) {\n        return this.tokens.splice(0, i);\n      }\n    };\n\n    Rewriter.prototype.removeMidExpressionNewlines = function() {\n      return this.scanTokens(function(token, i, tokens) {\n        var _ref;\n        if (!(token[0] === 'TERMINATOR' && (_ref = this.tag(i + 1), __indexOf.call(EXPRESSION_CLOSE, _ref) >= 0))) {\n          return 1;\n        }\n        tokens.splice(i, 1);\n        return 0;\n      });\n    };\n\n    Rewriter.prototype.closeOpenCalls = function() {\n      var action, condition;\n      condition = function(token, i) {\n        var _ref;\n        return ((_ref = token[0]) === ')' || _ref === 'CALL_END') || token[0] === 'OUTDENT' && this.tag(i - 1) === ')';\n      };\n      action = function(token, i) {\n        return this.tokens[token[0] === 'OUTDENT' ? i - 1 : i][0] = 'CALL_END';\n      };\n      return this.scanTokens(function(token, i) {\n        if (token[0] === 'CALL_START') {\n          this.detectEnd(i + 1, condition, action);\n        }\n        return 1;\n      });\n    };\n\n    Rewriter.prototype.closeOpenIndexes = function() {\n      var action, condition;\n      condition = function(token, i) {\n        var _ref;\n        return (_ref = token[0]) === ']' || _ref === 'INDEX_END';\n      };\n      action = function(token, i) {\n        return token[0] = 'INDEX_END';\n      };\n      return this.scanTokens(function(token, i) {\n        if (token[0] === 'INDEX_START') {\n          this.detectEnd(i + 1, condition, action);\n        }\n        return 1;\n      });\n    };\n\n    Rewriter.prototype.addImplicitBraces = function() {\n      var action, condition, sameLine, stack, start, startIndent, startIndex, startsLine;\n      stack = [];\n      start = null;\n      startsLine = null;\n      sameLine = true;\n      startIndent = 0;\n      startIndex = 0;\n      condition = function(token, i) {\n        var one, tag, three, two, _ref, _ref1;\n        _ref = this.tokens.slice(i + 1, (i + 3) + 1 || 9e9), one = _ref[0], two = _ref[1], three = _ref[2];\n        if ('HERECOMMENT' === (one != null ? one[0] : void 0)) {\n          return false;\n        }\n        tag = token[0];\n        if (__indexOf.call(LINEBREAKS, tag) >= 0) {\n          sameLine = false;\n        }\n        return (((tag === 'TERMINATOR' || tag === 'OUTDENT') || (__indexOf.call(IMPLICIT_END, tag) >= 0 && sameLine && !(i - startIndex === 1))) && ((!startsLine && this.tag(i - 1) !== ',') || !((two != null ? two[0] : void 0) === ':' || (one != null ? one[0] : void 0) === '@' && (three != null ? three[0] : void 0) === ':'))) || (tag === ',' && one && ((_ref1 = one[0]) !== 'IDENTIFIER' && _ref1 !== 'NUMBER' && _ref1 !== 'STRING' && _ref1 !== '@' && _ref1 !== 'TERMINATOR' && _ref1 !== 'OUTDENT'));\n      };\n      action = function(token, i) {\n        var tok;\n        tok = this.generate('}', '}', token[2]);\n        return this.tokens.splice(i, 0, tok);\n      };\n      return this.scanTokens(function(token, i, tokens) {\n        var ago, idx, prevTag, tag, tok, value, _ref, _ref1;\n        if (_ref = (tag = token[0]), __indexOf.call(EXPRESSION_START, _ref) >= 0) {\n          stack.push([(tag === 'INDENT' && this.tag(i - 1) === '{' ? '{' : tag), i]);\n          return 1;\n        }\n        if (__indexOf.call(EXPRESSION_END, tag) >= 0) {\n          start = stack.pop();\n          return 1;\n        }\n        if (!(tag === ':' && ((ago = this.tag(i - 2)) === ':' || ((_ref1 = stack[stack.length - 1]) != null ? _ref1[0] : void 0) !== '{'))) {\n          return 1;\n        }\n        sameLine = true;\n        startIndex = i + 1;\n        stack.push(['{']);\n        idx = ago === '@' ? i - 2 : i - 1;\n        while (this.tag(idx - 2) === 'HERECOMMENT') {\n          idx -= 2;\n        }\n        prevTag = this.tag(idx - 1);\n        startsLine = !prevTag || (__indexOf.call(LINEBREAKS, prevTag) >= 0);\n        value = new String('{');\n        value.generated = true;\n        tok = this.generate('{', value, token[2]);\n        tokens.splice(idx, 0, tok);\n        this.detectEnd(i + 2, condition, action);\n        return 2;\n      });\n    };\n\n    Rewriter.prototype.addImplicitParentheses = function() {\n      var action, condition, noCall, seenControl, seenSingle;\n      noCall = seenSingle = seenControl = false;\n      condition = function(token, i) {\n        var post, tag, _ref, _ref1;\n        tag = token[0];\n        if (!seenSingle && token.fromThen) {\n          return true;\n        }\n        if (tag === 'IF' || tag === 'ELSE' || tag === 'CATCH' || tag === '->' || tag === '=>' || tag === 'CLASS') {\n          seenSingle = true;\n        }\n        if (tag === 'IF' || tag === 'ELSE' || tag === 'SWITCH' || tag === 'TRY' || tag === '=') {\n          seenControl = true;\n        }\n        if ((tag === '.' || tag === '?.' || tag === '::') && this.tag(i - 1) === 'OUTDENT') {\n          return true;\n        }\n        return !token.generated && this.tag(i - 1) !== ',' && (__indexOf.call(IMPLICIT_END, tag) >= 0 || (tag === 'INDENT' && !seenControl)) && (tag !== 'INDENT' || (((_ref = this.tag(i - 2)) !== 'CLASS' && _ref !== 'EXTENDS') && (_ref1 = this.tag(i - 1), __indexOf.call(IMPLICIT_BLOCK, _ref1) < 0) && !((post = this.tokens[i + 1]) && post.generated && post[0] === '{')));\n      };\n      action = function(token, i) {\n        return this.tokens.splice(i, 0, this.generate('CALL_END', ')', token[2]));\n      };\n      return this.scanTokens(function(token, i, tokens) {\n        var callObject, current, next, prev, tag, _ref, _ref1, _ref2;\n        tag = token[0];\n        if (tag === 'CLASS' || tag === 'IF' || tag === 'FOR' || tag === 'WHILE') {\n          noCall = true;\n        }\n        _ref = tokens.slice(i - 1, (i + 1) + 1 || 9e9), prev = _ref[0], current = _ref[1], next = _ref[2];\n        callObject = !noCall && tag === 'INDENT' && next && next.generated && next[0] === '{' && prev && (_ref1 = prev[0], __indexOf.call(IMPLICIT_FUNC, _ref1) >= 0);\n        seenSingle = false;\n        seenControl = false;\n        if (__indexOf.call(LINEBREAKS, tag) >= 0) {\n          noCall = false;\n        }\n        if (prev && !prev.spaced && tag === '?') {\n          token.call = true;\n        }\n        if (token.fromThen) {\n          return 1;\n        }\n        if (!(callObject || (prev != null ? prev.spaced : void 0) && (prev.call || (_ref2 = prev[0], __indexOf.call(IMPLICIT_FUNC, _ref2) >= 0)) && (__indexOf.call(IMPLICIT_CALL, tag) >= 0 || !(token.spaced || token.newLine) && __indexOf.call(IMPLICIT_UNSPACED_CALL, tag) >= 0))) {\n          return 1;\n        }\n        tokens.splice(i, 0, this.generate('CALL_START', '(', token[2]));\n        this.detectEnd(i + 1, condition, action);\n        if (prev[0] === '?') {\n          prev[0] = 'FUNC_EXIST';\n        }\n        return 2;\n      });\n    };\n\n    Rewriter.prototype.addImplicitIndentation = function() {\n      var action, condition, indent, outdent, starter;\n      starter = indent = outdent = null;\n      condition = function(token, i) {\n        var _ref;\n        return token[1] !== ';' && (_ref = token[0], __indexOf.call(SINGLE_CLOSERS, _ref) >= 0) && !(token[0] === 'ELSE' && (starter !== 'IF' && starter !== 'THEN'));\n      };\n      action = function(token, i) {\n        return this.tokens.splice((this.tag(i - 1) === ',' ? i - 1 : i), 0, outdent);\n      };\n      return this.scanTokens(function(token, i, tokens) {\n        var tag, _ref, _ref1;\n        tag = token[0];\n        if (tag === 'TERMINATOR' && this.tag(i + 1) === 'THEN') {\n          tokens.splice(i, 1);\n          return 0;\n        }\n        if (tag === 'ELSE' && this.tag(i - 1) !== 'OUTDENT') {\n          tokens.splice.apply(tokens, [i, 0].concat(__slice.call(this.indentation(token))));\n          return 2;\n        }\n        if (tag === 'CATCH' && ((_ref = this.tag(i + 2)) === 'OUTDENT' || _ref === 'TERMINATOR' || _ref === 'FINALLY')) {\n          tokens.splice.apply(tokens, [i + 2, 0].concat(__slice.call(this.indentation(token))));\n          return 4;\n        }\n        if (__indexOf.call(SINGLE_LINERS, tag) >= 0 && this.tag(i + 1) !== 'INDENT' && !(tag === 'ELSE' && this.tag(i + 1) === 'IF')) {\n          starter = tag;\n          _ref1 = this.indentation(token, true), indent = _ref1[0], outdent = _ref1[1];\n          if (starter === 'THEN') {\n            indent.fromThen = true;\n          }\n          tokens.splice(i + 1, 0, indent);\n          this.detectEnd(i + 2, condition, action);\n          if (tag === 'THEN') {\n            tokens.splice(i, 1);\n          }\n          return 1;\n        }\n        return 1;\n      });\n    };\n\n    Rewriter.prototype.tagPostfixConditionals = function() {\n      var action, condition, original;\n      original = null;\n      condition = function(token, i) {\n        var _ref;\n        return (_ref = token[0]) === 'TERMINATOR' || _ref === 'INDENT';\n      };\n      action = function(token, i) {\n        if (token[0] !== 'INDENT' || (token.generated && !token.fromThen)) {\n          return original[0] = 'POST_' + original[0];\n        }\n      };\n      return this.scanTokens(function(token, i) {\n        if (token[0] !== 'IF') {\n          return 1;\n        }\n        original = token;\n        this.detectEnd(i + 1, condition, action);\n        return 1;\n      });\n    };\n\n    Rewriter.prototype.indentation = function(token, implicit) {\n      var indent, outdent;\n      if (implicit == null) {\n        implicit = false;\n      }\n      indent = ['INDENT', 2, token[2]];\n      outdent = ['OUTDENT', 2, token[2]];\n      if (implicit) {\n        indent.generated = outdent.generated = true;\n      }\n      return [indent, outdent];\n    };\n\n    Rewriter.prototype.generate = function(tag, value, line) {\n      var tok;\n      tok = [tag, value, line];\n      tok.generated = true;\n      return tok;\n    };\n\n    Rewriter.prototype.tag = function(i) {\n      var _ref;\n      return (_ref = this.tokens[i]) != null ? _ref[0] : void 0;\n    };\n\n    return Rewriter;\n\n  })();\n\n  BALANCED_PAIRS = [['(', ')'], ['[', ']'], ['{', '}'], ['INDENT', 'OUTDENT'], ['CALL_START', 'CALL_END'], ['PARAM_START', 'PARAM_END'], ['INDEX_START', 'INDEX_END']];\n\n  exports.INVERSES = INVERSES = {};\n\n  EXPRESSION_START = [];\n\n  EXPRESSION_END = [];\n\n  for (_i = 0, _len = BALANCED_PAIRS.length; _i < _len; _i++) {\n    _ref = BALANCED_PAIRS[_i], left = _ref[0], rite = _ref[1];\n    EXPRESSION_START.push(INVERSES[rite] = left);\n    EXPRESSION_END.push(INVERSES[left] = rite);\n  }\n\n  EXPRESSION_CLOSE = ['CATCH', 'WHEN', 'ELSE', 'FINALLY'].concat(EXPRESSION_END);\n\n  IMPLICIT_FUNC = ['IDENTIFIER', 'SUPER', ')', 'CALL_END', ']', 'INDEX_END', '@', 'THIS'];\n\n  IMPLICIT_CALL = ['IDENTIFIER', 'NUMBER', 'STRING', 'JS', 'REGEX', 'NEW', 'PARAM_START', 'CLASS', 'IF', 'TRY', 'SWITCH', 'THIS', 'BOOL', 'NULL', 'UNDEFINED', 'UNARY', 'SUPER', '@', '->', '=>', '[', '(', '{', '--', '++'];\n\n  IMPLICIT_UNSPACED_CALL = ['+', '-'];\n\n  IMPLICIT_BLOCK = ['->', '=>', '{', '[', ','];\n\n  IMPLICIT_END = ['POST_IF', 'FOR', 'WHILE', 'UNTIL', 'WHEN', 'BY', 'LOOP', 'TERMINATOR'];\n\n  SINGLE_LINERS = ['ELSE', '->', '=>', 'TRY', 'FINALLY', 'THEN'];\n\n  SINGLE_CLOSERS = ['TERMINATOR', 'CATCH', 'FINALLY', 'ELSE', 'OUTDENT', 'LEADING_WHEN'];\n\n  LINEBREAKS = ['TERMINATOR', 'INDENT', 'OUTDENT'];\n\n}).call(this);\n"]}