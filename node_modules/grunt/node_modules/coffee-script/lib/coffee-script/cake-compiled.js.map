{"version":3,"sources":["cake.js"],"names":[],"mappings":"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","file":"cake-compiled.js","sourcesContent":["// Generated by CoffeeScript 1.3.3\n(function() {\n  var CoffeeScript, cakefileDirectory, fatalError, fs, helpers, missingTask, oparse, options, optparse, path, printTasks, switches, tasks;\n\n  fs = require('fs');\n\n  path = require('path');\n\n  helpers = require('./helpers');\n\n  optparse = require('./optparse');\n\n  CoffeeScript = require('./coffee-script');\n\n  tasks = {};\n\n  options = {};\n\n  switches = [];\n\n  oparse = null;\n\n  helpers.extend(global, {\n    task: function(name, description, action) {\n      var _ref;\n      if (!action) {\n        _ref = [description, action], action = _ref[0], description = _ref[1];\n      }\n      return tasks[name] = {\n        name: name,\n        description: description,\n        action: action\n      };\n    },\n    option: function(letter, flag, description) {\n      return switches.push([letter, flag, description]);\n    },\n    invoke: function(name) {\n      if (!tasks[name]) {\n        missingTask(name);\n      }\n      return tasks[name].action(options);\n    }\n  });\n\n  exports.run = function() {\n    var arg, args, _i, _len, _ref, _results;\n    global.__originalDirname = fs.realpathSync('.');\n    process.chdir(cakefileDirectory(__originalDirname));\n    args = process.argv.slice(2);\n    CoffeeScript.run(fs.readFileSync('Cakefile').toString(), {\n      filename: 'Cakefile'\n    });\n    oparse = new optparse.OptionParser(switches);\n    if (!args.length) {\n      return printTasks();\n    }\n    try {\n      options = oparse.parse(args);\n    } catch (e) {\n      return fatalError(\"\" + e);\n    }\n    _ref = options[\"arguments\"];\n    _results = [];\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      arg = _ref[_i];\n      _results.push(invoke(arg));\n    }\n    return _results;\n  };\n\n  printTasks = function() {\n    var cakefilePath, desc, name, relative, spaces, task;\n    relative = path.relative || path.resolve;\n    cakefilePath = path.join(relative(__originalDirname, process.cwd()), 'Cakefile');\n    console.log(\"\" + cakefilePath + \" defines the following tasks:\\n\");\n    for (name in tasks) {\n      task = tasks[name];\n      spaces = 20 - name.length;\n      spaces = spaces > 0 ? Array(spaces + 1).join(' ') : '';\n      desc = task.description ? \"# \" + task.description : '';\n      console.log(\"cake \" + name + spaces + \" \" + desc);\n    }\n    if (switches.length) {\n      return console.log(oparse.help());\n    }\n  };\n\n  fatalError = function(message) {\n    console.error(message + '\\n');\n    console.log('To see a list of all tasks/options, run \"cake\"');\n    return process.exit(1);\n  };\n\n  missingTask = function(task) {\n    return fatalError(\"No such task: \" + task);\n  };\n\n  cakefileDirectory = function(dir) {\n    var parent;\n    if (path.existsSync(path.join(dir, 'Cakefile'))) {\n      return dir;\n    }\n    parent = path.normalize(path.join(dir, '..'));\n    if (parent !== dir) {\n      return cakefileDirectory(parent);\n    }\n    throw new Error(\"Cakefile not found in \" + (process.cwd()));\n  };\n\n}).call(this);\n"]}