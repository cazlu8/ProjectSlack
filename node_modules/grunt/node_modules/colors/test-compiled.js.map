{"version":3,"sources":["test.js"],"names":[],"mappings":"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","file":"test-compiled.js","sourcesContent":["var assert = require('assert'),\n    colors = require('./colors');\n\nvar s = 'string';\n\nfunction a(s, code) {\n  return '\\x1B[' + code.toString() + 'm' + s + '\\x1B[39m';\n}\n\nfunction aE(s, color, code) {\n  assert.equal(s[color], a(s, code));\n  assert.equal(colors[color](s), a(s, code));\n  assert.equal(s[color], colors[color](s));\n  assert.equal(s[color].stripColors, s);\n  assert.equal(s[color].stripColors, colors.stripColors(s));\n}\n\nfunction h(s, color) {\n  return '<span style=\"color:' + color + ';\">' + s + '</span>';\n}\n\nvar stylesColors = ['white', 'black', 'blue', 'cyan', 'green', 'magenta', 'red', 'yellow'];\nvar stylesAll = stylesColors.concat(['bold', 'italic', 'underline', 'inverse', 'rainbow']);\n\ncolors.mode = 'console';\nassert.equal(s.bold, '\\x1B[1m' + s + '\\x1B[22m');\nassert.equal(s.italic, '\\x1B[3m' + s + '\\x1B[23m');\nassert.equal(s.underline, '\\x1B[4m' + s + '\\x1B[24m');\nassert.equal(s.strikethrough, '\\x1B[9m' + s + '\\x1B[29m');\nassert.equal(s.inverse, '\\x1B[7m' + s + '\\x1B[27m');\nassert.ok(s.rainbow);\naE(s, 'white', 37);\naE(s, 'grey', 90);\naE(s, 'black', 30);\naE(s, 'blue', 34);\naE(s, 'cyan', 36);\naE(s, 'green', 32);\naE(s, 'magenta', 35);\naE(s, 'red', 31);\naE(s, 'yellow', 33);\nassert.equal(s, 'string');\n\ncolors.setTheme({error:'red'});\n\nassert.equal(typeof(\"astring\".red),'string');\nassert.equal(typeof(\"astring\".error),'string');\n\ncolors.mode = 'browser';\nassert.equal(s.bold, '<b>' + s + '</b>');\nassert.equal(s.italic, '<i>' + s + '</i>');\nassert.equal(s.underline, '<u>' + s + '</u>');\nassert.equal(s.strikethrough, '<del>' + s + '</del>');\nassert.equal(s.inverse, '<span style=\"background-color:black;color:white;\">' + s + '</span>');\nassert.ok(s.rainbow);\nstylesColors.forEach(function (color) {\n  assert.equal(s[color], h(s, color));\n  assert.equal(colors[color](s), h(s, color));\n});\n\nassert.equal(typeof(\"astring\".red),'string');\nassert.equal(typeof(\"astring\".error),'string');\n\ncolors.mode = 'none';\nstylesAll.forEach(function (style) {\n  assert.equal(s[style], s);\n  assert.equal(colors[style](s), s);\n});\n\nassert.equal(typeof(\"astring\".red),'string');\nassert.equal(typeof(\"astring\".error),'string');\n"]}