{"version":3,"sources":["glob.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA,MAAM,CAAC,OAAO,GAAG,IAAI,CAAA;;AAErB,IAAI,EAAE,GAAG,OAAO,CAAC,aAAa,CAAC;IAC7B,SAAS,GAAG,OAAO,CAAC,WAAW,CAAC;IAChC,SAAS,GAAG,SAAS,CAAC,SAAS;IAC/B,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC;IAC9B,EAAE,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,YAAY;IACnC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC;IACtB,KAAK,GAAG,EAAE;IACV,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAA;;AAE/B,SAAS,IAAI,CAAE,OAAO,EAAE,OAAO,EAAE,EAAE,EAAE;AACnC,MAAI,OAAO,OAAO,KAAK,UAAU,EAAE,EAAE,GAAG,OAAO,EAAE,OAAO,GAAG,EAAE,CAAA;AAC7D,MAAI,CAAC,OAAO,EAAE,OAAO,GAAG,EAAE,CAAA;;AAE1B,MAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;AAC/B,cAAU,EAAE,CAAA;AACZ,WAAM;GACP;;AAED,MAAI,CAAC,GAAG,IAAI,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,EAAE,CAAC,CAAA;AACtC,SAAO,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC,CAAA;CAC5B;;AAED,IAAI,CAAC,OAAO,GAAG,UAAU,CAAA;;AAEzB,SAAS,UAAU,GAAI;AACrB,QAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC,CAAA;CACtE;;AAED,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAA;AACpB,SAAS,QAAQ,CAAE,OAAO,EAAE,OAAO,EAAE;AACnC,MAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;AAC/B,cAAU,EAAE,CAAA;AACZ,WAAM;GACP;;AAED,SAAO,GAAG,OAAO,IAAI,EAAE,CAAA;AACvB,SAAO,CAAC,IAAI,GAAG,IAAI,CAAA;AACnB,SAAO,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAA;CAC9B;;AAGD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;AAChB,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAAA;AAClB,SAAS,IAAI,CAAE,OAAO,EAAE,OAAO,EAAE,EAAE,EAAE;AACnC,MAAI,EAAE,IAAI,YAAY,IAAI,CAAA,AAAC,EAAE;AAC3B,WAAO,IAAI,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,EAAE,CAAC,CAAA;GACtC;;AAED,MAAI,OAAO,EAAE,KAAK,UAAU,EAAE;AAC5B,QAAI,CAAC,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC,CAAA;AACpB,QAAI,CAAC,EAAE,CAAC,KAAK,EAAE,UAAU,OAAO,EAAE;AAChC,QAAE,CAAC,IAAI,EAAE,OAAO,CAAC,CAAA;KAClB,CAAC,CAAA;GACH;;AAED,SAAO,GAAG,OAAO,IAAI,EAAE,CAAA;;AAEvB,MAAI,CAAC,GAAG,GAAG,EAAE,CAAA;AACb,MAAI,CAAC,UAAU,GAAG,EAAE,CAAA;;AAEpB,MAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,IAAI,IAAI,CAAA;AACxC,MAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,IAAI,QAAQ,CAAA;AAC9C,MAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,IAAI,EAAE,CAAA;;AAExC,MAAI,CAAC,UAAU,GAAG,KAAK,CAAA;AACvB,MAAI,GAAG,GAAG,OAAO,CAAC,GAAG,EAAE,CAAA;AACvB,MAAI,CAAC,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,GAAG,GAAG,GAAG,CAAA,KAC7C;AACH,QAAI,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAA;AACtB,QAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,CAAA;GACpD;;AAED,MAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;AACvD,MAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;AACnC,MAAI,OAAO,CAAC,QAAQ,KAAK,OAAO,EAC9B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAA;;AAE3C,MAAI,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC,OAAO,CAAA;;AAEhC,MAAI,CAAC,OAAO,EAAE;AACZ,UAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAA;GACxC;;;AAGD,MAAI,OAAO,CAAC,SAAS,IAAI,CAAC,CAAC,KAAK,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;AACpD,QAAI,OAAO,CAAC,UAAU,EAAE;AACtB,YAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAA;KACnD;AACD,WAAO,GAAG,KAAK,GAAG,OAAO,CAAA;GAC1B;;AAED,MAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,KAAK,KAAK,CAAA;AACtC,MAAI,CAAC,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAA;AACxB,MAAI,CAAC,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,CAAA;AAC1B,MAAI,CAAC,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,CAAA;AAC1B,MAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAA;AAClC,MAAI,CAAC,MAAM,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM,CAAA;AAC9B,MAAI,CAAC,MAAM,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM,CAAA;AAC9B,MAAI,CAAC,MAAM,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM,CAAA;AAC9B,MAAI,CAAC,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,CAAA;;AAE1B,MAAI,CAAC,KAAK,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,CAAC,OAAO,CAAC,SAAS,CAAA;AACnD,MAAI,IAAI,CAAC,KAAK,EACZ,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,KAAK,CAAA;;AAE1B,MAAI,CAAC,MAAM,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM,CAAA;;AAE9B,MAAI,EAAE,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,CAAA;AACzD,MAAI,CAAC,OAAO,GAAG,EAAE,CAAC,OAAO,CAAA;AACzB,SAAO,GAAG,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,OAAO,CAAA;;AAEnC,MAAI,CAAC,KAAK,GAAG,IAAI,CAAA;AACjB,MAAI,CAAC,OAAO,GAAG,KAAK,CAAA;;AAEpB,IAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;;;AAGb,MAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAA;;;;;;AAMjC,MAAI,CAAC,OAAO,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAA;;AAE3B,MAAI,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;AAC/C,WAAS,QAAQ,CAAE,OAAO,EAAE,CAAC,EAAE,GAAG,EAAE;AAClC,QAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAE,EAAE;AACzC,UAAI,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC,CAAA;AAC9B,UAAI,EAAG,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,OAAO,EAAE,CAAA;KAC9B,CAAC,CAAA;GACH;CACF;;AAED,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,YAAY,EAAE,CAAA;;AAEnC,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,YAAY;AACnC,QAAM,CAAC,IAAI,YAAY,IAAI,CAAC,CAAA;;AAE5B,MAAI,GAAG,GAAG,IAAI,CAAC,QAAQ;MACrB,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,CAAA;;AAErB,OAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;AACpD,QAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;AAC7B,QAAI,CAAC,GAAG,CAAC,eAAe,EAAE,CAAC,EAAE,OAAO,CAAC,CAAA;;AAErC,QAAI,CAAC,OAAO,EAAE;AACZ,UAAI,IAAI,CAAC,MAAM,EAAE;AACf,YAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;AACvC,YAAI,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA,KACrB,GAAG,CAAC,OAAO,CAAC,GAAG,IAAI,CAAA;OACzB;KACF,MAAM;;AAEL,UAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;AAC5B,UAAI,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAA,KAC1B,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;AAC1B,WAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAA;OACd,CAAC,CAAA;KACH;GACF;;AAED,MAAI,CAAC,GAAG,EAAE,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;;AAEhC,MAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AAChB,OAAG,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,UAAU,GAAG,SAAS,CAAC,CAAA;GACrD;;AAED,MAAI,IAAI,CAAC,IAAI,EAAE;;AAEb,OAAG,GAAG,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;AACzB,UAAI,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;AAC1B,UAAI,CAAC,EAAE,EACL,OAAO,CAAC,CAAA;AACV,UAAI,KAAK,GAAI,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,AAAC,CAAA;AAC3C,UAAI,KAAK,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AAChC,eAAO,CAAC,GAAG,GAAG,CAAA;OACf;AACD,UAAI,CAAC,KAAK,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AACjC,eAAO,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAA;OAC7B;AACD,aAAO,CAAC,CAAA;KACT,EAAE,IAAI,CAAC,CAAA;GACT;;AAED,MAAI,CAAC,GAAG,CAAC,cAAc,EAAE,GAAG,CAAC,CAAA;;AAE7B,MAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,CAAA;AAC3B,MAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;CACzB,CAAA;;AAED,SAAS,UAAU,CAAE,CAAC,EAAE,CAAC,EAAE;AACzB,GAAC,GAAG,CAAC,CAAC,WAAW,EAAE,CAAA;AACnB,GAAC,GAAG,CAAC,CAAC,WAAW,EAAE,CAAA;AACnB,SAAO,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;CACvB;;AAED,SAAS,SAAS,CAAE,CAAC,EAAE,CAAC,EAAE;AACxB,SAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAA;CAClC;;AAED,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,YAAY;AACjC,MAAI,CAAC,OAAO,GAAG,IAAI,CAAA;AACnB,MAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;CACnB,CAAA;;AAED,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,YAAY;AACjC,MAAI,IAAI,CAAC,MAAM,EAAE,OAAM;AACvB,MAAI,IAAI,CAAC,IAAI,EACX,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC,CAAA;AAC/D,MAAI,CAAC,MAAM,GAAG,IAAI,CAAA;AAClB,MAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;CACnB,CAAA;;AAED,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,YAAY;AAClC,MAAI,CAAC,IAAI,CAAC,MAAM,EAAE,OAAM;AACxB,MAAI,IAAI,CAAC,IAAI,EACX,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC,CAAA;AAC/D,MAAI,CAAC,MAAM,GAAG,KAAK,CAAA;AACnB,MAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;AACnB,MAAI,CAAC,iBAAiB,EAAE,CAAA;CAEzB,CAAA;;AAED,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,CAAC,EAAE;AACtC,MAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;AACvB,MAAI,CAAC,iBAAiB,EAAE,CAAA;CACzB,CAAA;;AAED,IAAI,CAAC,SAAS,CAAC,iBAAiB,GAAG,UAAU,CAAC,EAAE;AAC9C,SAAO,CAAC,IAAI,CAAC,oBAAoB,IAC1B,CAAC,IAAI,CAAC,MAAM,EAAE;AACnB,QAAI,CAAC,oBAAoB,GAAG,IAAI,CAAA;AAChC,QAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAA;AAC/B,QAAI,CAAC,CAAC,EAAE;AACN,UAAI,CAAC,oBAAoB,GAAG,KAAK,CAAA;AACjC,YAAK;KACN;;AAED,QAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,KAAK,IAAI,CAAC,GAAG,GAAG,KAAK,GAAG,OAAO,CAAC,CAAA;;AAEnD,QAAI,CAAC,IAAI,CAAC,CAAC,KAAK,IAAI,CAAC,GAAG,GAAG,KAAK,GAAG,OAAO,EAAE,CAAC,CAAC,CAAA;AAC9C,QAAI,CAAC,oBAAoB,GAAG,KAAK,CAAA;GAClC;CACF,CAAA;;AAED,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE;AAC9D,QAAM,CAAC,IAAI,YAAY,IAAI,CAAC,CAAA;;AAE5B,MAAI,EAAE,GAAG,CAAA,SAAS,EAAE,CAAE,EAAE,EAAE,GAAG,EAAE;AAC7B,UAAM,CAAC,IAAI,YAAY,IAAI,CAAC,CAAA;AAC5B,QAAI,IAAI,CAAC,MAAM,EAAE;AACf,UAAI,CAAC,IAAI,CAAC,aAAa,EAAE;AACvB,YAAI,CAAC,aAAa,GAAG,EAAE,CAAA;AACvB,YAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,YAAY;AAC9B,cAAI,CAAC,GAAG,IAAI,CAAC,aAAa,CAAA;AAC1B,cAAI,CAAC,aAAa,GAAG,IAAI,CAAA;AACzB,WAAC,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE;AAAE,cAAE,EAAE,CAAA;WAAE,CAAC,CAAA;SAClC,CAAC,CAAA;OACH;AACD,UAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,CAAA;KACjD,MAAM;AACL,SAAG,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,GAAG,CAAC,CAAA;KACxB;GACF,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;;AAEZ,MAAI,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,EAAE,CAAA;;AAE7B,MAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,EAAE,CAAA;;;AAGtC,MAAI,CAAC,GAAG,CAAC,CAAA;AACT,SAAO,OAAO,OAAO,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;AACrC,KAAC,EAAG,CAAA;GACL;;;;AAID,MAAI,MAAM,CAAA;AACV,UAAQ,CAAC;;AAEP,SAAK,OAAO,CAAC,MAAM;AACjB,YAAM,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;AAC1B,UAAI,CAAC,KAAK,CAAC,MAAM,EAAE,UAAU,MAAM,EAAE,KAAK,EAAE;;;AAG1C,YAAI,MAAM,EAAE;AACV,cAAI,MAAM,IAAI,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;AACxD,gBAAI,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AACrB,oBAAM,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAA;aAC7C,MAAM;AACL,oBAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAA;aACzC;WACK;;AAED,cAAI,OAAO,CAAC,QAAQ,KAAK,OAAO,EAC9B,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAA;;AAErC,cAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,CAAA;AAC/C,cAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,GAAG,IAAI,CAAA;AAClC,cAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA;SACvB;AACD,eAAO,EAAE,EAAE,CAAA;OACZ,CAAC,CAAA;AACF,aAAM;;AAAA,AAER,SAAK,CAAC;;;AAGJ,YAAM,GAAG,IAAI,CAAA;AACb,YAAK;;AAAA,AAEP;;;;AAIE,YAAM,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;AAC5B,YAAM,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;AACzB,YAAK;AAAA,GACR;;;AAGD,MAAI,IAAI,CAAA;AACR,MAAI,MAAM,KAAK,IAAI,EAAE,IAAI,GAAG,GAAG,CAAA,KAC1B,IAAI,UAAU,CAAC,MAAM,CAAC,IAAI,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;AAC5D,QAAI,CAAC,MAAM,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;AAClC,YAAM,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,CAAA;KAChC;AACD,QAAI,GAAG,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;;;;;AAKpC,QAAI,CAAC,GAAG,CAAC,YAAY,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,CAAA;GACzD,MAAM;AACL,QAAI,GAAG,MAAM,CAAA;GACd;;AAED,MAAI,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,CAAA;;AAElD,SAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,UAAU,EAAE,EAAE,OAAO,EAAE;AAChD,QAAI,EAAE,EAAE;;;AAGN,aAAO,EAAE,EAAE,CAAA;KACZ;;;AAGD,QAAI,OAAO,CAAC,CAAC,CAAC,KAAK,SAAS,CAAC,QAAQ,EAAE;;;AAGrC,UAAI,CAAC,GAAG,CAAE,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAE,CAAA;AAC5D,aAAO,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;AAC3B,YAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,OAAM;;AAE5C,SAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;;AAElE,SAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;OAC/D,EAAE,IAAI,CAAC,CAAA;;;AAGR,UAAI,CAAC,GAAG,CAAC,CAAC,MAAM;UACd,QAAQ,GAAG,IAAI,CAAA;AACjB,OAAC,CAAC,OAAO,CAAC,UAAU,SAAS,EAAE;AAC7B,YAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK,EAAE,UAAU,EAAE,EAAE;AACvD,cAAI,QAAQ,EAAE,OAAM;AACpB,cAAI,EAAE,EAAE,OAAO,EAAE,CAAC,QAAQ,GAAG,EAAE,CAAC,CAAA;AAChC,cAAI,EAAE,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,EAAE,CAAA;SAC1B,CAAC,CAAA;OACH,EAAE,IAAI,CAAC,CAAA;;AAER,aAAM;KACP;;;;;AAKD,QAAI,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,CAAA;AACnB,QAAI,OAAO,EAAE,KAAK,QAAQ,EAAE;AAC1B,UAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAA;AACtC,aAAO,GAAG,KAAK,GAAG,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAA;KACnC,MAAM;AACL,UAAI,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK;UAC5B,KAAK,GAAG,IAAI,CAAC,GAAG,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,CAAA;;AAE/C,aAAO,GAAG,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE;AACpC,eAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,KAAK,CAAA,KAC5B,OAAO,OAAO,CAAC,CAAC,CAAC,KAAK,QAAQ,IAAI,CAAC,KAAK,OAAO,CAAC,CAAC,CAAC,IAClD,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA,AAAC,CAAA;OAC7B,CAAC,CAAA;KACH;;;;;AAKD,QAAI,CAAC,KAAK,OAAO,CAAC,MAAM,GAAG,CAAC,IACxB,CAAC,IAAI,CAAC,IAAI,IACV,CAAC,IAAI,CAAC,IAAI,EAAE;AACd,aAAO,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;AAC3B,YAAI,MAAM,EAAE;AACV,cAAI,MAAM,KAAK,GAAG,EAAE,CAAC,GAAG,MAAM,GAAG,GAAG,GAAG,CAAC,CAAA,KACnC,CAAC,GAAG,MAAM,GAAG,CAAC,CAAA;SACpB;AACD,YAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;AACxC,WAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;SAC5B;;AAED,YAAI,OAAO,CAAC,QAAQ,KAAK,OAAO,EAC9B,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAA;;AAE3B,YAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,CAAA;AAC/C,YAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAA;AAC7B,YAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;OAClB,EAAE,IAAI,CAAC,CAAA;AACR,aAAO,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;KACrB;;;;AAKD,QAAI,CAAC,GAAG,OAAO,CAAC,MAAM;QACpB,QAAQ,GAAG,IAAI,CAAA;AACjB,QAAI,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,EAAE,CAAA;AACxB,WAAO,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;AAC3B,UAAI,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;AAClE,UAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK,EAAE,UAAU,EAAE,EAAE;AAC/C,YAAI,QAAQ,EAAE,OAAM;AACpB,YAAI,EAAE,EAAE,OAAO,EAAE,CAAC,QAAQ,GAAG,EAAE,CAAC,CAAA;AAChC,YAAI,EAAE,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;OACpC,CAAC,CAAA;KACH,EAAE,IAAI,CAAC,CAAA;GACT,CAAC,CAAA;CAEH,CAAA;;AAED,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,CAAC,EAAE,EAAE,EAAE;AACtC,QAAM,CAAC,IAAI,YAAY,IAAI,CAAC,CAAA;AAC5B,MAAI,GAAG,GAAG,CAAC,CAAA;AACX,MAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AACvB,OAAG,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;GAC9B,MAAM,IAAI,IAAI,CAAC,UAAU,EAAE;AAC1B,OAAG,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAA;GAChC;AACD,MAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAA;AACzC,MAAI,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE;AAC7B,QAAI,EAAE,GAAG,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAA;AACxC,MAAE,CAAC,IAAI,GAAG,cAAc,CAAA;AACxB,MAAE,CAAC,IAAI,GAAG,CAAC,CAAA;AACX,WAAO,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,CAAA;GACvC;;AAED,MAAI,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE;AACpC,QAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QAC5B,KAAK,GAAG,MAAM,KAAK,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,MAAM,KAAK,CAAC,CAAA,AAAC,CAAA;AAC3D,QAAI,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;AACpD,WAAO,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAA;GACxD;;AAED,MAAI,IAAI,CAAC,IAAI,EAAE;AACb,QAAI,EAAE,EAAE,IAAI,CAAA;AACZ,QAAI;AACF,UAAI,GAAG,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAA;KACxB,CAAC,OAAO,CAAC,EAAE;AACV,QAAE,GAAG,CAAC,CAAA;KACP;AACD,QAAI,CAAC,UAAU,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAA;GACtC,MAAM;AACL,MAAE,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,CAAA;GACrD;CACF,CAAA;;AAED,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE;AAC1D,MAAI,MAAM,CAAA;AACV,QAAM,CAAC,IAAI,YAAY,IAAI,CAAC,CAAA;;AAE5B,MAAI,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;AACxD,QAAI,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAA;;AAEtC,MAAE,GAAG,IAAI,KAAK,CAAC,4BAA4B,GAAG,GAAG,GAAG,GAAG,CAAC,CAAA;AACxD,MAAE,CAAC,IAAI,GAAG,GAAG,CAAA;AACb,MAAE,CAAC,IAAI,GAAG,SAAS,CAAA;AACnB,QAAI,GAAG,IAAI,CAAA;GACZ;;AAED,MAAI,EAAE,IAAI,CAAC,IAAI,EAAE;AACf,UAAM,GAAG,KAAK,CAAA;GACf,MAAM;AACL,UAAM,GAAG,IAAI,CAAC,WAAW,EAAE,GAAG,CAAC,GAAG,CAAC,CAAA;GACpC;AACD,MAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,MAAM,CAAA;AAC/C,IAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,MAAM,KAAK,CAAC,CAAC,CAAA;CACtC,CAAA;;AAED,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,CAAC,EAAE,EAAE,EAAE;AACzC,QAAM,CAAC,IAAI,YAAY,IAAI,CAAC,CAAA;AAC5B,MAAI,GAAG,GAAG,CAAC,CAAA;AACX,MAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AACvB,OAAG,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;GAC9B,MAAM,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE;AACxB,OAAG,GAAG,CAAC,CAAA;GACR,MAAM,IAAI,IAAI,CAAC,UAAU,EAAE;AAC1B,OAAG,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAA;GAChC;;AAED,MAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAA;AACvC,MAAI,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE;AAC7B,QAAI,EAAE,GAAG,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAA;AACxC,MAAE,CAAC,IAAI,GAAG,cAAc,CAAA;AACxB,MAAE,CAAC,IAAI,GAAG,CAAC,CAAA;AACX,WAAO,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,CAAA;GAC1C;;AAED,MAAI,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE;AACpC,QAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;AACzB,QAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;AACpB,UAAI,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAA;AAC5C,aAAO,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAA;KAChD;;AAED,QAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;;AAEjB,UAAI,IAAI,GAAG,CAAC,GAAG,SAAS,GAAG,QAAQ;UACjC,EAAE,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,GAAG,iBAAiB,GAAG,WAAW,CAAA,GAAI,IAAI,GAAG,CAAC,CAAC,CAAA;AAClE,QAAE,CAAC,IAAI,GAAG,CAAC,CAAA;AACX,QAAE,CAAC,IAAI,GAAG,IAAI,CAAA;AACd,UAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAA;AACf,UAAI,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,CAAA;AACvC,aAAO,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAA;KAC3C;;;;;AAAA,GAKF;;AAED,MAAI,IAAI,CAAC,IAAI,EAAE;AACb,QAAI,EAAE,EAAE,OAAO,CAAA;AACf,QAAI;AACF,aAAO,GAAG,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC,CAAA;KAC9B,CAAC,OAAO,CAAC,EAAE;AACV,QAAE,GAAG,CAAC,CAAA;KACP;AACD,WAAO,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,OAAO,CAAC,CAAA;GACnD;;AAED,IAAE,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,CAAA;CAC3D,CAAA;;AAED,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG,UAAU,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE;AAChE,QAAM,CAAC,IAAI,YAAY,IAAI,CAAC,CAAA;AAC5B,MAAI,OAAO,IAAI,CAAC,EAAE,EAAE;AAClB,QAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,OAAO,CAAA;;;;;AAK3B,QAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;AAC5B,aAAO,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;AAC3B,YAAI,CAAC,KAAK,GAAG,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA,KACnB,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAA;AACpB,YAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAAA;OACzB,EAAE,IAAI,CAAC,CAAA;KACT;;AAED,WAAO,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,OAAO,CAAC,CAAA;GAClC;;;AAGD,MAAI,EAAE,EAAE,QAAQ,EAAE,CAAC,IAAI;AACrB,SAAK,SAAS;;AACZ,UAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;AACrB,aAAO,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,CAAA;AAAA,AAC1B,SAAK,QAAQ,CAAC;AACd,SAAK,OAAO,CAAC;AACb,SAAK,cAAc,CAAC;AACpB,SAAK,SAAS;AACZ,UAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,KAAK,CAAA;AACzB,aAAO,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,CAAA;AAAA,AAC1B;;AACE,UAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,KAAK,CAAA;AACzB,UAAI,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC,CAAA;AACvC,UAAI,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,KAAK,CAAC,YAAY,EAAE,EAAE,CAAC,CAAA;AACjD,aAAO,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,CAAA;AAAA,GAC3B;CACF,CAAA;;AAED,IAAI,UAAU,GAAG,OAAO,CAAC,QAAQ,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CAAA;;AAEhE,SAAS,MAAM,CAAE,CAAC,EAAE;AAClB,MAAI,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,IAAI,CAAA;;;AAG3B,MAAI,aAAa,GACb,oEAAoE;MACpE,MAAM,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;MAC9B,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE;MACxB,KAAK,GAAG,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG;MAC1C,UAAU,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,KAAK,CAAA;;AAErC,SAAO,UAAU,CAAA;CAClB;;AAED,SAAS,OAAO,CAAE,CAAC,EAAE;AACnB,SAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAA;CACvC","file":"glob-compiled.js","sourcesContent":["// Approach:\n//\n// 1. Get the minimatch set\n// 2. For each pattern in the set, PROCESS(pattern)\n// 3. Store matches per-set, then uniq them\n//\n// PROCESS(pattern)\n// Get the first [n] items from pattern that are all strings\n// Join these together.  This is PREFIX.\n//   If there is no more remaining, then stat(PREFIX) and\n//   add to matches if it succeeds.  END.\n// readdir(PREFIX) as ENTRIES\n//   If fails, END\n//   If pattern[n] is GLOBSTAR\n//     // handle the case where the globstar match is empty\n//     // by pruning it out, and testing the resulting pattern\n//     PROCESS(pattern[0..n] + pattern[n+1 .. $])\n//     // handle other cases.\n//     for ENTRY in ENTRIES (not dotfiles)\n//       // attach globstar + tail onto the entry\n//       PROCESS(pattern[0..n] + ENTRY + pattern[n .. $])\n//\n//   else // not globstar\n//     for ENTRY in ENTRIES (not dotfiles, unless pattern[n] is dot)\n//       Test ENTRY against pattern[n]\n//       If fails, continue\n//       If passes, PROCESS(pattern[0..n] + item + pattern[n+1 .. $])\n//\n// Caveat:\n//   Cache all stats and readdirs results to minimize syscall.  Since all\n//   we ever care about is existence and directory-ness, we can just keep\n//   `true` for files, and [children,...] for directories, or `false` for\n//   things that don't exist.\n\n\n\nmodule.exports = glob\n\nvar fs = require(\"graceful-fs\")\n, minimatch = require(\"minimatch\")\n, Minimatch = minimatch.Minimatch\n, inherits = require(\"inherits\")\n, EE = require(\"events\").EventEmitter\n, path = require(\"path\")\n, isDir = {}\n, assert = require(\"assert\").ok\n\nfunction glob (pattern, options, cb) {\n  if (typeof options === \"function\") cb = options, options = {}\n  if (!options) options = {}\n\n  if (typeof options === \"number\") {\n    deprecated()\n    return\n  }\n\n  var g = new Glob(pattern, options, cb)\n  return g.sync ? g.found : g\n}\n\nglob.fnmatch = deprecated\n\nfunction deprecated () {\n  throw new Error(\"glob's interface has changed. Please see the docs.\")\n}\n\nglob.sync = globSync\nfunction globSync (pattern, options) {\n  if (typeof options === \"number\") {\n    deprecated()\n    return\n  }\n\n  options = options || {}\n  options.sync = true\n  return glob(pattern, options)\n}\n\n\nglob.Glob = Glob\ninherits(Glob, EE)\nfunction Glob (pattern, options, cb) {\n  if (!(this instanceof Glob)) {\n    return new Glob(pattern, options, cb)\n  }\n\n  if (typeof cb === \"function\") {\n    this.on(\"error\", cb)\n    this.on(\"end\", function (matches) {\n      cb(null, matches)\n    })\n  }\n\n  options = options || {}\n\n  this.EOF = {}\n  this._emitQueue = []\n\n  this.maxDepth = options.maxDepth || 1000\n  this.maxLength = options.maxLength || Infinity\n  this.statCache = options.statCache || {}\n\n  this.changedCwd = false\n  var cwd = process.cwd()\n  if (!options.hasOwnProperty(\"cwd\")) this.cwd = cwd\n  else {\n    this.cwd = options.cwd\n    this.changedCwd = path.resolve(options.cwd) !== cwd\n  }\n\n  this.root = options.root || path.resolve(this.cwd, \"/\")\n  this.root = path.resolve(this.root)\n  if (process.platform === \"win32\")\n    this.root = this.root.replace(/\\\\/g, \"/\")\n\n  this.nomount = !!options.nomount\n\n  if (!pattern) {\n    throw new Error(\"must provide pattern\")\n  }\n\n  // base-matching: just use globstar for that.\n  if (options.matchBase && -1 === pattern.indexOf(\"/\")) {\n    if (options.noglobstar) {\n      throw new Error(\"base matching requires globstar\")\n    }\n    pattern = \"**/\" + pattern\n  }\n\n  this.strict = options.strict !== false\n  this.dot = !!options.dot\n  this.mark = !!options.mark\n  this.sync = !!options.sync\n  this.nounique = !!options.nounique\n  this.nonull = !!options.nonull\n  this.nosort = !!options.nosort\n  this.nocase = !!options.nocase\n  this.stat = !!options.stat\n\n  this.debug = !!options.debug || !!options.globDebug\n  if (this.debug)\n    this.log = console.error\n\n  this.silent = !!options.silent\n\n  var mm = this.minimatch = new Minimatch(pattern, options)\n  this.options = mm.options\n  pattern = this.pattern = mm.pattern\n\n  this.error = null\n  this.aborted = false\n\n  EE.call(this)\n\n  // process each pattern in the minimatch set\n  var n = this.minimatch.set.length\n\n  // The matches are stored as {<filename>: true,...} so that\n  // duplicates are automagically pruned.\n  // Later, we do an Object.keys() on these.\n  // Keep them as a list so we can fill in when nonull is set.\n  this.matches = new Array(n)\n\n  this.minimatch.set.forEach(iterator.bind(this))\n  function iterator (pattern, i, set) {\n    this._process(pattern, 0, i, function (er) {\n      if (er) this.emit(\"error\", er)\n      if (-- n <= 0) this._finish()\n    })\n  }\n}\n\nGlob.prototype.log = function () {}\n\nGlob.prototype._finish = function () {\n  assert(this instanceof Glob)\n\n  var nou = this.nounique\n  , all = nou ? [] : {}\n\n  for (var i = 0, l = this.matches.length; i < l; i ++) {\n    var matches = this.matches[i]\n    this.log(\"matches[%d] =\", i, matches)\n    // do like the shell, and spit out the literal glob\n    if (!matches) {\n      if (this.nonull) {\n        var literal = this.minimatch.globSet[i]\n        if (nou) all.push(literal)\n        else all[literal] = true\n      }\n    } else {\n      // had matches\n      var m = Object.keys(matches)\n      if (nou) all.push.apply(all, m)\n      else m.forEach(function (m) {\n        all[m] = true\n      })\n    }\n  }\n\n  if (!nou) all = Object.keys(all)\n\n  if (!this.nosort) {\n    all = all.sort(this.nocase ? alphasorti : alphasort)\n  }\n\n  if (this.mark) {\n    // at *some* point we statted all of these\n    all = all.map(function (m) {\n      var sc = this.statCache[m]\n      if (!sc)\n        return m\n      var isDir = (Array.isArray(sc) || sc === 2)\n      if (isDir && m.slice(-1) !== \"/\") {\n        return m + \"/\"\n      }\n      if (!isDir && m.slice(-1) === \"/\") {\n        return m.replace(/\\/+$/, \"\")\n      }\n      return m\n    }, this)\n  }\n\n  this.log(\"emitting end\", all)\n\n  this.EOF = this.found = all\n  this.emitMatch(this.EOF)\n}\n\nfunction alphasorti (a, b) {\n  a = a.toLowerCase()\n  b = b.toLowerCase()\n  return alphasort(a, b)\n}\n\nfunction alphasort (a, b) {\n  return a > b ? 1 : a < b ? -1 : 0\n}\n\nGlob.prototype.abort = function () {\n  this.aborted = true\n  this.emit(\"abort\")\n}\n\nGlob.prototype.pause = function () {\n  if (this.paused) return\n  if (this.sync)\n    this.emit(\"error\", new Error(\"Can't pause/resume sync glob\"))\n  this.paused = true\n  this.emit(\"pause\")\n}\n\nGlob.prototype.resume = function () {\n  if (!this.paused) return\n  if (this.sync)\n    this.emit(\"error\", new Error(\"Can't pause/resume sync glob\"))\n  this.paused = false\n  this.emit(\"resume\")\n  this._processEmitQueue()\n  //process.nextTick(this.emit.bind(this, \"resume\"))\n}\n\nGlob.prototype.emitMatch = function (m) {\n  this._emitQueue.push(m)\n  this._processEmitQueue()\n}\n\nGlob.prototype._processEmitQueue = function (m) {\n  while (!this._processingEmitQueue &&\n         !this.paused) {\n    this._processingEmitQueue = true\n    var m = this._emitQueue.shift()\n    if (!m) {\n      this._processingEmitQueue = false\n      break\n    }\n\n    this.log('emit!', m === this.EOF ? \"end\" : \"match\")\n\n    this.emit(m === this.EOF ? \"end\" : \"match\", m)\n    this._processingEmitQueue = false\n  }\n}\n\nGlob.prototype._process = function (pattern, depth, index, cb_) {\n  assert(this instanceof Glob)\n\n  var cb = function cb (er, res) {\n    assert(this instanceof Glob)\n    if (this.paused) {\n      if (!this._processQueue) {\n        this._processQueue = []\n        this.once(\"resume\", function () {\n          var q = this._processQueue\n          this._processQueue = null\n          q.forEach(function (cb) { cb() })\n        })\n      }\n      this._processQueue.push(cb_.bind(this, er, res))\n    } else {\n      cb_.call(this, er, res)\n    }\n  }.bind(this)\n\n  if (this.aborted) return cb()\n\n  if (depth > this.maxDepth) return cb()\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === \"string\") {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // see if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      prefix = pattern.join(\"/\")\n      this._stat(prefix, function (exists, isDir) {\n        // either it's there, or it isn't.\n        // nothing more to do, either way.\n        if (exists) {\n          if (prefix && isAbsolute(prefix) && !this.nomount) {\n\t    if (prefix.charAt(0) === \"/\") {\n              prefix = path.join(this.root, prefix)\n\t    } else {\n\t      prefix = path.resolve(this.root, prefix)\n\t    }\n          }\n\n          if (process.platform === \"win32\")\n            prefix = prefix.replace(/\\\\/g, \"/\")\n\n          this.matches[index] = this.matches[index] || {}\n          this.matches[index][prefix] = true\n          this.emitMatch(prefix)\n        }\n        return cb()\n      })\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's \"absolute\" like /foo/bar,\n      // or \"relative\" like \"../baz\"\n      prefix = pattern.slice(0, n)\n      prefix = prefix.join(\"/\")\n      break\n  }\n\n  // get the list of entries.\n  var read\n  if (prefix === null) read = \".\"\n  else if (isAbsolute(prefix) || isAbsolute(pattern.join(\"/\"))) {\n    if (!prefix || !isAbsolute(prefix)) {\n      prefix = path.join(\"/\", prefix)\n    }\n    read = prefix = path.resolve(prefix)\n\n    // if (process.platform === \"win32\")\n    //   read = prefix = prefix.replace(/^[a-zA-Z]:|\\\\/g, \"/\")\n\n    this.log('absolute: ', prefix, this.root, pattern, read)\n  } else {\n    read = prefix\n  }\n\n  this.log('readdir(%j)', read, this.cwd, this.root)\n\n  return this._readdir(read, function (er, entries) {\n    if (er) {\n      // not a directory!\n      // this means that, whatever else comes after this, it can never match\n      return cb()\n    }\n\n    // globstar is special\n    if (pattern[n] === minimatch.GLOBSTAR) {\n      // test without the globstar, and with every child both below\n      // and replacing the globstar.\n      var s = [ pattern.slice(0, n).concat(pattern.slice(n + 1)) ]\n      entries.forEach(function (e) {\n        if (e.charAt(0) === \".\" && !this.dot) return\n        // instead of the globstar\n        s.push(pattern.slice(0, n).concat(e).concat(pattern.slice(n + 1)))\n        // below the globstar\n        s.push(pattern.slice(0, n).concat(e).concat(pattern.slice(n)))\n      }, this)\n\n      // now asyncForEach over this\n      var l = s.length\n      , errState = null\n      s.forEach(function (gsPattern) {\n        this._process(gsPattern, depth + 1, index, function (er) {\n          if (errState) return\n          if (er) return cb(errState = er)\n          if (--l <= 0) return cb()\n        })\n      }, this)\n\n      return\n    }\n\n    // not a globstar\n    // It will only match dot entries if it starts with a dot, or if\n    // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n    var pn = pattern[n]\n    if (typeof pn === \"string\") {\n      var found = entries.indexOf(pn) !== -1\n      entries = found ? entries[pn] : []\n    } else {\n      var rawGlob = pattern[n]._glob\n      , dotOk = this.dot || rawGlob.charAt(0) === \".\"\n\n      entries = entries.filter(function (e) {\n        return (e.charAt(0) !== \".\" || dotOk) &&\n               (typeof pattern[n] === \"string\" && e === pattern[n] ||\n                e.match(pattern[n]))\n      })\n    }\n\n    // If n === pattern.length - 1, then there's no need for the extra stat\n    // *unless* the user has specified \"mark\" or \"stat\" explicitly.\n    // We know that they exist, since the readdir returned them.\n    if (n === pattern.length - 1 &&\n        !this.mark &&\n        !this.stat) {\n      entries.forEach(function (e) {\n        if (prefix) {\n          if (prefix !== \"/\") e = prefix + \"/\" + e\n          else e = prefix + e\n        }\n        if (e.charAt(0) === \"/\" && !this.nomount) {\n          e = path.join(this.root, e)\n        }\n\n        if (process.platform === \"win32\")\n          e = e.replace(/\\\\/g, \"/\")\n\n        this.matches[index] = this.matches[index] || {}\n        this.matches[index][e] = true\n        this.emitMatch(e)\n      }, this)\n      return cb.call(this)\n    }\n\n\n    // now test all the remaining entries as stand-ins for that part\n    // of the pattern.\n    var l = entries.length\n    , errState = null\n    if (l === 0) return cb() // no matches possible\n    entries.forEach(function (e) {\n      var p = pattern.slice(0, n).concat(e).concat(pattern.slice(n + 1))\n      this._process(p, depth + 1, index, function (er) {\n        if (errState) return\n        if (er) return cb(errState = er)\n        if (--l === 0) return cb.call(this)\n      })\n    }, this)\n  })\n\n}\n\nGlob.prototype._stat = function (f, cb) {\n  assert(this instanceof Glob)\n  var abs = f\n  if (f.charAt(0) === \"/\") {\n    abs = path.join(this.root, f)\n  } else if (this.changedCwd) {\n    abs = path.resolve(this.cwd, f)\n  }\n  this.log('stat', [this.cwd, f, '=', abs])\n  if (f.length > this.maxLength) {\n    var er = new Error(\"Path name too long\")\n    er.code = \"ENAMETOOLONG\"\n    er.path = f\n    return this._afterStat(f, abs, cb, er)\n  }\n\n  if (this.statCache.hasOwnProperty(f)) {\n    var exists = this.statCache[f]\n    , isDir = exists && (Array.isArray(exists) || exists === 2)\n    if (this.sync) return cb.call(this, !!exists, isDir)\n    return process.nextTick(cb.bind(this, !!exists, isDir))\n  }\n\n  if (this.sync) {\n    var er, stat\n    try {\n      stat = fs.statSync(abs)\n    } catch (e) {\n      er = e\n    }\n    this._afterStat(f, abs, cb, er, stat)\n  } else {\n    fs.stat(abs, this._afterStat.bind(this, f, abs, cb))\n  }\n}\n\nGlob.prototype._afterStat = function (f, abs, cb, er, stat) {\n  var exists\n  assert(this instanceof Glob)\n\n  if (abs.slice(-1) === \"/\" && stat && !stat.isDirectory()) {\n    this.log(\"should be ENOTDIR, fake it\")\n\n    er = new Error(\"ENOTDIR, not a directory '\" + abs + \"'\")\n    er.path = abs\n    er.code = \"ENOTDIR\"\n    stat = null\n  }\n\n  if (er || !stat) {\n    exists = false\n  } else {\n    exists = stat.isDirectory() ? 2 : 1\n  }\n  this.statCache[f] = this.statCache[f] || exists\n  cb.call(this, !!exists, exists === 2)\n}\n\nGlob.prototype._readdir = function (f, cb) {\n  assert(this instanceof Glob)\n  var abs = f\n  if (f.charAt(0) === \"/\") {\n    abs = path.join(this.root, f)\n  } else if (isAbsolute(f)) {\n    abs = f\n  } else if (this.changedCwd) {\n    abs = path.resolve(this.cwd, f)\n  }\n\n  this.log('readdir', [this.cwd, f, abs])\n  if (f.length > this.maxLength) {\n    var er = new Error(\"Path name too long\")\n    er.code = \"ENAMETOOLONG\"\n    er.path = f\n    return this._afterReaddir(f, abs, cb, er)\n  }\n\n  if (this.statCache.hasOwnProperty(f)) {\n    var c = this.statCache[f]\n    if (Array.isArray(c)) {\n      if (this.sync) return cb.call(this, null, c)\n      return process.nextTick(cb.bind(this, null, c))\n    }\n\n    if (!c || c === 1) {\n      // either ENOENT or ENOTDIR\n      var code = c ? \"ENOTDIR\" : \"ENOENT\"\n      , er = new Error((c ? \"Not a directory\" : \"Not found\") + \": \" + f)\n      er.path = f\n      er.code = code\n      this.log(f, er)\n      if (this.sync) return cb.call(this, er)\n      return process.nextTick(cb.bind(this, er))\n    }\n\n    // at this point, c === 2, meaning it's a dir, but we haven't\n    // had to read it yet, or c === true, meaning it's *something*\n    // but we don't have any idea what.  Need to read it, either way.\n  }\n\n  if (this.sync) {\n    var er, entries\n    try {\n      entries = fs.readdirSync(abs)\n    } catch (e) {\n      er = e\n    }\n    return this._afterReaddir(f, abs, cb, er, entries)\n  }\n\n  fs.readdir(abs, this._afterReaddir.bind(this, f, abs, cb))\n}\n\nGlob.prototype._afterReaddir = function (f, abs, cb, er, entries) {\n  assert(this instanceof Glob)\n  if (entries && !er) {\n    this.statCache[f] = entries\n    // if we haven't asked to stat everything for suresies, then just\n    // assume that everything in there exists, so we can avoid\n    // having to stat it a second time.  This also gets us one step\n    // further into ELOOP territory.\n    if (!this.mark && !this.stat) {\n      entries.forEach(function (e) {\n        if (f === \"/\") e = f + e\n        else e = f + \"/\" + e\n        this.statCache[e] = true\n      }, this)\n    }\n\n    return cb.call(this, er, entries)\n  }\n\n  // now handle errors, and cache the information\n  if (er) switch (er.code) {\n    case \"ENOTDIR\": // totally normal. means it *does* exist.\n      this.statCache[f] = 1\n      return cb.call(this, er)\n    case \"ENOENT\": // not terribly unusual\n    case \"ELOOP\":\n    case \"ENAMETOOLONG\":\n    case \"UNKNOWN\":\n      this.statCache[f] = false\n      return cb.call(this, er)\n    default: // some unusual error.  Treat as failure.\n      this.statCache[f] = false\n      if (this.strict) this.emit(\"error\", er)\n      if (!this.silent) console.error(\"glob error\", er)\n      return cb.call(this, er)\n  }\n}\n\nvar isAbsolute = process.platform === \"win32\" ? absWin : absUnix\n\nfunction absWin (p) {\n  if (absUnix(p)) return true\n  // pull off the device/UNC bit from a windows path.\n  // from node's lib/path.js\n  var splitDeviceRe =\n      /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/\n    , result = splitDeviceRe.exec(p)\n    , device = result[1] || ''\n    , isUnc = device && device.charAt(1) !== ':'\n    , isAbsolute = !!result[2] || isUnc // UNC paths are always absolute\n\n  return isAbsolute\n}\n\nfunction absUnix (p) {\n  return p.charAt(0) === \"/\" || p === \"\"\n}\n"]}