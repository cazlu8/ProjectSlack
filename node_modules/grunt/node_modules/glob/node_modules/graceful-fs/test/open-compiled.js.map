{"version":3,"sources":["open.js"],"names":[],"mappings":";;AAAA,IAAI,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAA;AAC9B,IAAI,EAAE,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAA;;AAErC,IAAI,CAAC,uBAAuB,EAAE,UAAU,CAAC,EAAE;AACzC,GAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAA;AAC7B,GAAC,CAAC,GAAG,EAAE,CAAA;CACR,CAAC,CAAA;;AAEF,IAAI,CAAC,6BAA6B,EAAE,UAAU,CAAC,EAAE;AAC/C,MAAI,KAAK,GAAG,EAAE,CAAC,QAAQ,CAAA;AACvB,MAAI,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,UAAU,EAAE,GAAG,CAAC,CAAA;AACrC,GAAC,CAAC,KAAK,CAAC,EAAE,CAAC,QAAQ,EAAE,KAAK,GAAG,CAAC,CAAC,CAAA;AAC/B,IAAE,CAAC,SAAS,CAAC,EAAE,CAAC,CAAA;AAChB,GAAC,CAAC,KAAK,CAAC,EAAE,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAA;AAC3B,IAAE,CAAC,IAAI,CAAC,UAAU,EAAE,GAAG,EAAE,UAAU,EAAE,EAAE,EAAE,EAAE;AACzC,QAAI,EAAE,EAAE,MAAM,EAAE,CAAA;AAChB,KAAC,CAAC,KAAK,CAAC,EAAE,CAAC,QAAQ,EAAE,KAAK,GAAG,CAAC,CAAC,CAAA;AAC/B,MAAE,CAAC,KAAK,CAAC,EAAE,EAAE,UAAU,EAAE,EAAE;AACzB,UAAI,EAAE,EAAE,MAAM,EAAE,CAAA;AAChB,OAAC,CAAC,KAAK,CAAC,EAAE,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAA;AAC3B,OAAC,CAAC,GAAG,EAAE,CAAA;KACR,CAAC,CAAA;GACH,CAAC,CAAA;CACH,CAAC,CAAA;;AAEF,IAAI,CAAC,iCAAiC,EAAE,UAAU,CAAC,EAAE;AACnD,MAAI,KAAK,GAAG,EAAE,CAAC,QAAQ,CAAA;AACvB,MAAI,EAAE,CAAA;AACN,MAAI;AACF,QAAI,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,0BAA0B,EAAE,GAAG,CAAC,CAAA;GACtD,CAAC,OAAO,CAAC,EAAE;AACV,MAAE,GAAG,CAAC,CAAA;GACP;AACD,GAAC,CAAC,EAAE,CAAC,EAAE,EAAE,cAAc,CAAC,CAAA;AACxB,GAAC,CAAC,KAAK,CAAC,EAAE,EAAE,sBAAsB,CAAC,CAAA;AACnC,GAAC,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAA;AAC1B,GAAC,CAAC,KAAK,CAAC,EAAE,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAA;;AAE3B,IAAE,CAAC,IAAI,CAAC,wBAAwB,EAAE,GAAG,EAAE,UAAU,EAAE,EAAE,EAAE,EAAE;AACvD,KAAC,CAAC,EAAE,CAAC,EAAE,EAAE,cAAc,CAAC,CAAA;AACxB,KAAC,CAAC,KAAK,CAAC,EAAE,EAAE,sBAAsB,CAAC,CAAA;AACnC,KAAC,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAA;AAC1B,KAAC,CAAC,KAAK,CAAC,EAAE,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAA;AAC3B,KAAC,CAAC,GAAG,EAAE,CAAA;GACR,CAAC,CAAA;CACH,CAAC,CAAA","file":"open-compiled.js","sourcesContent":["var test = require('tap').test\nvar fs = require('../graceful-fs.js')\n\ntest('graceful fs is not fs', function (t) {\n  t.notEqual(fs, require('fs'))\n  t.end()\n})\n\ntest('open an existing file works', function (t) {\n  var start = fs._curOpen\n  var fd = fs.openSync(__filename, 'r')\n  t.equal(fs._curOpen, start + 1)\n  fs.closeSync(fd)\n  t.equal(fs._curOpen, start)\n  fs.open(__filename, 'r', function (er, fd) {\n    if (er) throw er\n    t.equal(fs._curOpen, start + 1)\n    fs.close(fd, function (er) {\n      if (er) throw er\n      t.equal(fs._curOpen, start)\n      t.end()\n    })\n  })\n})\n\ntest('open a non-existing file throws', function (t) {\n  var start = fs._curOpen\n  var er\n  try {\n    var fd = fs.openSync('this file does not exist', 'r')\n  } catch (x) {\n    er = x\n  }\n  t.ok(er, 'should throw')\n  t.notOk(fd, 'should not get an fd')\n  t.equal(er.code, 'ENOENT')\n  t.equal(fs._curOpen, start)\n\n  fs.open('neither does this file', 'r', function (er, fd) {\n    t.ok(er, 'should throw')\n    t.notOk(fd, 'should not get an fd')\n    t.equal(er.code, 'ENOENT')\n    t.equal(fs._curOpen, start)\n    t.end()\n  })\n})\n"]}