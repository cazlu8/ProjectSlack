{"version":3,"sources":["fail.js"],"names":[],"mappings":"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","file":"fail-compiled.js","sourcesContent":["/*\n * grunt\n * http://gruntjs.com/\n *\n * Copyright (c) 2014 \"Cowboy\" Ben Alman\n * Licensed under the MIT license.\n * https://github.com/gruntjs/grunt/blob/master/LICENSE-MIT\n */\n\n'use strict';\n\nvar grunt = require('../grunt');\n\n// The module to be exported.\nvar fail = module.exports = {};\n\n// Error codes.\nfail.code = {\n  FATAL_ERROR: 1,\n  MISSING_GRUNTFILE: 2,\n  TASK_FAILURE: 3,\n  TEMPLATE_ERROR: 4,\n  INVALID_AUTOCOMPLETE: 5,\n  WARNING: 6,\n};\n\n// DRY it up!\nfunction writeln(e, mode) {\n  grunt.log.muted = false;\n  var msg = String(e.message || e);\n  if (!grunt.option('no-color')) { msg += '\\x07'; } // Beep!\n  if (mode === 'warn') {\n    msg = 'Warning: ' + msg + ' ';\n    msg += (grunt.option('force') ? 'Used --force, continuing.'.underline : 'Use --force to continue.');\n    msg = msg.yellow;\n  } else {\n    msg = ('Fatal error: ' + msg).red;\n  }\n  grunt.log.writeln(msg);\n}\n\n// If --stack is enabled, log the appropriate error stack (if it exists).\nfunction dumpStack(e) {\n  if (grunt.option('stack')) {\n    if (e.origError && e.origError.stack) {\n      console.log(e.origError.stack);\n    } else if (e.stack) {\n      console.log(e.stack);\n    }\n  }\n}\n\n// A fatal error occurred. Abort immediately.\nfail.fatal = function(e, errcode) {\n  writeln(e, 'fatal');\n  dumpStack(e);\n  grunt.util.exit(typeof errcode === 'number' ? errcode : fail.code.FATAL_ERROR);\n};\n\n// Keep track of error and warning counts.\nfail.errorcount = 0;\nfail.warncount = 0;\n\n// A warning occurred. Abort immediately unless -f or --force was used.\nfail.warn = function(e, errcode) {\n  var message = typeof e === 'string' ? e : e.message;\n  fail.warncount++;\n  writeln(message, 'warn');\n  // If -f or --force aren't used, stop script processing.\n  if (!grunt.option('force')) {\n    dumpStack(e);\n    grunt.log.writeln().fail('Aborted due to warnings.');\n    grunt.util.exit(typeof errcode === 'number' ? errcode : fail.code.WARNING);\n  }\n};\n\n// This gets called at the very end.\nfail.report = function() {\n  if (fail.warncount > 0) {\n    grunt.log.writeln().fail('Done, but with warnings.');\n  } else {\n    grunt.log.writeln().success('Done, without errors.');\n  }\n};\n"]}