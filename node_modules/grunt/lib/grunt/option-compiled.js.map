{"version":3,"sources":["option.js"],"names":[],"mappings":";;;;;;;;;AASA,YAAY,CAAC;;;AAGb,IAAI,IAAI,GAAG,EAAE,CAAC;;;AAGd,IAAI,MAAM,GAAG,MAAM,CAAC,OAAO,GAAG,UAAS,GAAG,EAAE,KAAK,EAAE;AACjD,MAAI,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;AAChC,MAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;AAC1B,WAAQ,IAAI,CAAC,GAAG,CAAC,GAAG,KAAK,CAAE;GAC5B,MAAM,IAAI,EAAE,EAAE;AACb,WAAO,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC;GAC9B,MAAM;AACL,WAAO,IAAI,CAAC,GAAG,CAAC,CAAC;GAClB;CACF,CAAC;;;AAGF,MAAM,CAAC,IAAI,GAAG,UAAS,GAAG,EAAE;AAC1B,SAAQ,IAAI,GAAG,GAAG,IAAI,EAAE,CAAE;CAC3B,CAAC;;;AAGF,MAAM,CAAC,KAAK,GAAG,YAAW;AACxB,SAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,UAAS,GAAG,EAAE;;AAE5C,WAAO,EAAE,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,CAAC,CAAA,AAAC,CAAC;GAC9D,CAAC,CAAC,GAAG,CAAC,UAAS,GAAG,EAAE;AACnB,QAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;AACpB,WAAO,IAAI,IAAI,GAAG,KAAK,KAAK,GAAG,KAAK,GAAG,EAAE,CAAA,AAAC,GAAG,GAAG,IAC7C,OAAO,GAAG,KAAK,SAAS,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,CAAA,AAAC,CAAC;GAC/C,CAAC,CAAC;CACJ,CAAC","file":"option-compiled.js","sourcesContent":["/*\n * grunt\n * http://gruntjs.com/\n *\n * Copyright (c) 2014 \"Cowboy\" Ben Alman\n * Licensed under the MIT license.\n * https://github.com/gruntjs/grunt/blob/master/LICENSE-MIT\n */\n\n'use strict';\n\n// The actual option data.\nvar data = {};\n\n// Get or set an option value.\nvar option = module.exports = function(key, value) {\n  var no = key.match(/^no-(.+)$/);\n  if (arguments.length === 2) {\n    return (data[key] = value);\n  } else if (no) {\n    return data[no[1]] === false;\n  } else {\n    return data[key];\n  }\n};\n\n// Initialize option data.\noption.init = function(obj) {\n  return (data = obj || {});\n};\n\n// List of options as flags.\noption.flags = function() {\n  return Object.keys(data).filter(function(key) {\n    // Don't display empty arrays.\n    return !(Array.isArray(data[key]) && data[key].length === 0);\n  }).map(function(key) {\n    var val = data[key];\n    return '--' + (val === false ? 'no-' : '') + key +\n      (typeof val === 'boolean' ? '' : '=' + val);\n  });\n};\n"]}