{"version":3,"sources":["task.js"],"names":[],"mappings":"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","file":"task-compiled.js","sourcesContent":["/*\n * grunt\n * http://gruntjs.com/\n *\n * Copyright (c) 2014 \"Cowboy\" Ben Alman\n * Licensed under the MIT license.\n * https://github.com/gruntjs/grunt/blob/master/LICENSE-MIT\n */\n\n'use strict';\n\nvar grunt = require('../grunt');\n\n// Nodejs libs.\nvar path = require('path');\n\n// Extend generic \"task\" util lib.\nvar parent = grunt.util.task.create();\n\n// The module to be exported.\nvar task = module.exports = Object.create(parent);\n\n// A temporary registry of tasks and metadata.\nvar registry = {tasks: [], untasks: [], meta: {}};\n\n// The last specified tasks message.\nvar lastInfo;\n\n// Number of levels of recursion when loading tasks in collections.\nvar loadTaskDepth = 0;\n\n// Keep track of the number of log.error() calls.\nvar errorcount;\n\n// Override built-in registerTask.\ntask.registerTask = function(name) {\n  // Add task to registry.\n  registry.tasks.push(name);\n  // Register task.\n  parent.registerTask.apply(task, arguments);\n  // This task, now that it's been registered.\n  var thisTask = task._tasks[name];\n  // Metadata about the current task.\n  thisTask.meta = grunt.util._.clone(registry.meta);\n  // Override task function.\n  var _fn = thisTask.fn;\n  thisTask.fn = function(arg) {\n    // Guaranteed to always be the actual task name.\n    var name = thisTask.name;\n    // Initialize the errorcount for this task.\n    errorcount = grunt.fail.errorcount;\n    // Return the number of errors logged during this task.\n    Object.defineProperty(this, 'errorCount', {\n      enumerable: true,\n      get: function() {\n        return grunt.fail.errorcount - errorcount;\n      }\n    });\n    // Expose task.requires on `this`.\n    this.requires = task.requires.bind(task);\n    // Expose config.requires on `this`.\n    this.requiresConfig = grunt.config.requires;\n    // Return an options object with the specified defaults overwritten by task-\n    // specific overrides, via the \"options\" property.\n    this.options = function() {\n      var args = [{}].concat(grunt.util.toArray(arguments)).concat([\n        grunt.config([name, 'options'])\n      ]);\n      var options = grunt.util._.extend.apply(null, args);\n      grunt.verbose.writeflags(options, 'Options');\n      return options;\n    };\n    // If this task was an alias or a multi task called without a target,\n    // only log if in verbose mode.\n    var logger = _fn.alias || (thisTask.multi && (!arg || arg === '*')) ? 'verbose' : 'log';\n    // Actually log.\n    grunt[logger].header('Running \"' + this.nameArgs + '\"' +\n      (this.name !== this.nameArgs ? ' (' + this.name + ')' : '') + ' task');\n    // If --debug was specified, log the path to this task's source file.\n    grunt[logger].debug('Task source: ' + thisTask.meta.filepath);\n    // Actually run the task.\n    return _fn.apply(this, arguments);\n  };\n  return task;\n};\n\n// Multi task targets can't start with _ or be a reserved property (options).\nfunction isValidMultiTaskTarget(target) {\n  return !/^_|^options$/.test(target);\n}\n\n// Normalize multi task files.\ntask.normalizeMultiTaskFiles = function(data, target) {\n  var prop, obj;\n  var files = [];\n  if (grunt.util.kindOf(data) === 'object') {\n    if ('src' in data || 'dest' in data) {\n      obj = {};\n      for (prop in data) {\n        if (prop !== 'options') {\n          obj[prop] = data[prop];\n        }\n      }\n      files.push(obj);\n    } else if (grunt.util.kindOf(data.files) === 'object') {\n      for (prop in data.files) {\n        files.push({src: data.files[prop], dest: grunt.config.process(prop)});\n      }\n    } else if (Array.isArray(data.files)) {\n      grunt.util._.flatten(data.files).forEach(function(obj) {\n        var prop;\n        if ('src' in obj || 'dest' in obj) {\n          files.push(obj);\n        } else {\n          for (prop in obj) {\n            files.push({src: obj[prop], dest: grunt.config.process(prop)});\n          }\n        }\n      });\n    }\n  } else {\n    files.push({src: data, dest: grunt.config.process(target)});\n  }\n\n  // If no src/dest or files were specified, return an empty files array.\n  if (files.length === 0) {\n    grunt.verbose.writeln('File: ' + '[no files]'.yellow);\n    return [];\n  }\n\n  // Process all normalized file objects.\n  files = grunt.util._(files).chain().forEach(function(obj) {\n    if (!('src' in obj) || !obj.src) { return; }\n    // Normalize .src properties to flattened array.\n    if (Array.isArray(obj.src)) {\n      obj.src = grunt.util._.flatten(obj.src);\n    } else {\n      obj.src = [obj.src];\n    }\n  }).map(function(obj) {\n    // Build options object, removing unwanted properties.\n    var expandOptions = grunt.util._.extend({}, obj);\n    delete expandOptions.src;\n    delete expandOptions.dest;\n\n    // Expand file mappings.\n    if (obj.expand) {\n      return grunt.file.expandMapping(obj.src, obj.dest, expandOptions).map(function(mapObj) {\n        // Copy obj properties to result.\n        var result = grunt.util._.extend({}, obj);\n        // Make a clone of the orig obj available.\n        result.orig = grunt.util._.extend({}, obj);\n        // Set .src and .dest, processing both as templates.\n        result.src = grunt.config.process(mapObj.src);\n        result.dest = grunt.config.process(mapObj.dest);\n        // Remove unwanted properties.\n        ['expand', 'cwd', 'flatten', 'rename', 'ext'].forEach(function(prop) {\n          delete result[prop];\n        });\n        return result;\n      });\n    }\n\n    // Copy obj properties to result, adding an .orig property.\n    var result = grunt.util._.extend({}, obj);\n    // Make a clone of the orig obj available.\n    result.orig = grunt.util._.extend({}, obj);\n\n    if ('src' in result) {\n      // Expose an expand-on-demand getter method as .src.\n      Object.defineProperty(result, 'src', {\n        enumerable: true,\n        get: function fn() {\n          var src;\n          if (!('result' in fn)) {\n            src = obj.src;\n            // If src is an array, flatten it. Otherwise, make it into an array.\n            src = Array.isArray(src) ? grunt.util._.flatten(src) : [src];\n            // Expand src files, memoizing result.\n            fn.result = grunt.file.expand(expandOptions, src);\n          }\n          return fn.result;\n        }\n      });\n    }\n\n    if ('dest' in result) {\n      result.dest = obj.dest;\n    }\n\n    return result;\n  }).flatten().value();\n\n  // Log this.file src and dest properties when --verbose is specified.\n  if (grunt.option('verbose')) {\n    files.forEach(function(obj) {\n      var output = [];\n      if ('src' in obj) {\n        output.push(obj.src.length > 0 ? grunt.log.wordlist(obj.src) : '[no src]'.yellow);\n      }\n      if ('dest' in obj) {\n        output.push('-> ' + (obj.dest ? String(obj.dest).cyan : '[no dest]'.yellow));\n      }\n      if (output.length > 0) {\n        grunt.verbose.writeln('Files: ' + output.join(' '));\n      }\n    });\n  }\n\n  return files;\n};\n\n// This is the most common \"multi task\" pattern.\ntask.registerMultiTask = function(name, info, fn) {\n  // If optional \"info\" string is omitted, shuffle arguments a bit.\n  if (fn == null) {\n    fn = info;\n    info = 'Custom multi task.';\n  }\n  // Store a reference to the task object, in case the task gets renamed.\n  var thisTask;\n  task.registerTask(name, info, function(target) {\n    // Guaranteed to always be the actual task name.\n    var name = thisTask.name;\n    // Arguments (sans target) as an array.\n    this.args = grunt.util.toArray(arguments).slice(1);\n    // If a target wasn't specified, run this task once for each target.\n    if (!target || target === '*') {\n      return task.runAllTargets(name, this.args);\n    } else if (!isValidMultiTaskTarget(target)) {\n      throw new Error('Invalid target \"' + target + '\" specified.');\n    }\n    // Fail if any required config properties have been omitted.\n    this.requiresConfig([name, target]);\n    // Return an options object with the specified defaults overwritten by task-\n    // and/or target-specific overrides, via the \"options\" property.\n    this.options = function() {\n      var targetObj = grunt.config([name, target]);\n      var args = [{}].concat(grunt.util.toArray(arguments)).concat([\n        grunt.config([name, 'options']),\n        grunt.util.kindOf(targetObj) === 'object' ? targetObj.options : {}\n      ]);\n      var options = grunt.util._.extend.apply(null, args);\n      grunt.verbose.writeflags(options, 'Options');\n      return options;\n    };\n    // Expose the current target.\n    this.target = target;\n    // Recreate flags object so that the target isn't set as a flag.\n    this.flags = {};\n    this.args.forEach(function(arg) { this.flags[arg] = true; }, this);\n    // Expose data on `this` (as well as task.current).\n    this.data = grunt.config([name, target]);\n    // Expose normalized files object.\n    this.files = task.normalizeMultiTaskFiles(this.data, target);\n    // Expose normalized, flattened, uniqued array of src files.\n    Object.defineProperty(this, 'filesSrc', {\n      enumerable: true,\n      get: function() {\n        return grunt.util._(this.files).chain().pluck('src').flatten().uniq().value();\n      }.bind(this)\n    });\n    // Call original task function, passing in the target and any other args.\n    return fn.apply(this, this.args);\n  });\n\n  thisTask = task._tasks[name];\n  thisTask.multi = true;\n};\n\n// Init tasks don't require properties in config, and as such will preempt\n// config loading errors.\ntask.registerInitTask = function(name, info, fn) {\n  task.registerTask(name, info, fn);\n  task._tasks[name].init = true;\n};\n\n// Override built-in renameTask to use the registry.\ntask.renameTask = function(oldname, newname) {\n  var result;\n  try {\n    // Actually rename task.\n    result = parent.renameTask.apply(task, arguments);\n    // Add and remove task.\n    registry.untasks.push(oldname);\n    registry.tasks.push(newname);\n    // Return result.\n    return result;\n  } catch(e) {\n    grunt.log.error(e.message);\n  }\n};\n\n// If a property wasn't passed, run all task targets in turn.\ntask.runAllTargets = function(taskname, args) {\n  // Get an array of sub-property keys under the given config object.\n  var targets = Object.keys(grunt.config.getRaw(taskname) || {});\n  // Fail if there are no actual properties to iterate over.\n  if (targets.length === 0) {\n    grunt.log.error('No \"' + taskname + '\" targets found.');\n    return false;\n  }\n  // Iterate over all valid target properties, running a task for each.\n  targets.filter(isValidMultiTaskTarget).forEach(function(target) {\n    // Be sure to pass in any additionally specified args.\n    task.run([taskname, target].concat(args || []).join(':'));\n  });\n};\n\n// Load tasks and handlers from a given tasks file.\nvar loadTaskStack = [];\nfunction loadTask(filepath) {\n  // In case this was called recursively, save registry for later.\n  loadTaskStack.push(registry);\n  // Reset registry.\n  registry = {tasks: [], untasks: [], meta: {info: lastInfo, filepath: filepath}};\n  var filename = path.basename(filepath);\n  var msg = 'Loading \"' + filename + '\" tasks...';\n  var regCount = 0;\n  var fn;\n  try {\n    // Load taskfile.\n    fn = require(path.resolve(filepath));\n    if (typeof fn === 'function') {\n      fn.call(grunt, grunt);\n    }\n    grunt.verbose.write(msg).ok();\n    // Log registered/renamed/unregistered tasks.\n    ['un', ''].forEach(function(prefix) {\n      var list = grunt.util._.chain(registry[prefix + 'tasks']).uniq().sort().value();\n      if (list.length > 0) {\n        regCount++;\n        grunt.verbose.writeln((prefix ? '- ' : '+ ') + grunt.log.wordlist(list));\n      }\n    });\n    if (regCount === 0) {\n      grunt.verbose.warn('No tasks were registered or unregistered.');\n    }\n  } catch(e) {\n    // Something went wrong.\n    grunt.log.write(msg).error().verbose.error(e.stack).or.error(e);\n  }\n  // Restore registry.\n  registry = loadTaskStack.pop() || {};\n}\n\n// Log a message when loading tasks.\nfunction loadTasksMessage(info) {\n  // Only keep track of names of top-level loaded tasks and collections,\n  // not sub-tasks.\n  if (loadTaskDepth === 0) { lastInfo = info; }\n  grunt.verbose.subhead('Registering ' + info + ' tasks.');\n}\n\n// Load tasks and handlers from a given directory.\nfunction loadTasks(tasksdir) {\n  try {\n    var files = grunt.file.glob.sync('*.{js,coffee}', {cwd: tasksdir, maxDepth: 1});\n    // Load tasks from files.\n    files.forEach(function(filename) {\n      loadTask(path.join(tasksdir, filename));\n    });\n  } catch(e) {\n    grunt.log.verbose.error(e.stack).or.error(e);\n  }\n}\n\n// Load tasks and handlers from a given directory.\ntask.loadTasks = function(tasksdir) {\n  loadTasksMessage('\"' + tasksdir + '\"');\n  if (grunt.file.exists(tasksdir)) {\n    loadTasks(tasksdir);\n  } else {\n    grunt.log.error('Tasks directory \"' + tasksdir + '\" not found.');\n  }\n};\n\n// Load tasks and handlers from a given locally-installed Npm module (installed\n// relative to the base dir).\ntask.loadNpmTasks = function(name) {\n  loadTasksMessage('\"' + name + '\" local Npm module');\n  var root = path.resolve('node_modules');\n  var pkgfile = path.join(root, name, 'package.json');\n  var pkg = grunt.file.exists(pkgfile) ? grunt.file.readJSON(pkgfile) : {keywords: []};\n\n  // Process collection plugins.\n  if (pkg.keywords && pkg.keywords.indexOf('gruntcollection') !== -1) {\n    loadTaskDepth++;\n    Object.keys(pkg.dependencies).forEach(function(depName) {\n      // Npm sometimes pulls dependencies out if they're shared, so find\n      // upwards if not found locally.\n      var filepath = grunt.file.findup('node_modules/' + depName, {\n        cwd: path.resolve('node_modules', name),\n        nocase: true\n      });\n      if (filepath) {\n        // Load this task plugin recursively.\n        task.loadNpmTasks(path.relative(root, filepath));\n      }\n    });\n    loadTaskDepth--;\n    return;\n  }\n\n  // Process task plugins.\n  var tasksdir = path.join(root, name, 'tasks');\n  if (grunt.file.exists(tasksdir)) {\n    loadTasks(tasksdir);\n  } else {\n    grunt.log.error('Local Npm module \"' + name + '\" not found. Is it installed?');\n  }\n};\n\n// Initialize tasks.\ntask.init = function(tasks, options) {\n  if (!options) { options = {}; }\n\n  // Were only init tasks specified?\n  var allInit = tasks.length > 0 && tasks.every(function(name) {\n    var obj = task._taskPlusArgs(name).task;\n    return obj && obj.init;\n  });\n\n  // Get any local Gruntfile or tasks that might exist. Use --gruntfile override\n  // if specified, otherwise search the current directory or any parent.\n  var gruntfile = allInit ? null : grunt.option('gruntfile') ||\n    grunt.file.findup('Gruntfile.{js,coffee}', {nocase: true});\n\n  var msg = 'Reading \"' + (gruntfile ? path.basename(gruntfile) : '???') + '\" Gruntfile...';\n  if (gruntfile && grunt.file.exists(gruntfile)) {\n    grunt.verbose.writeln().write(msg).ok();\n    // Change working directory so that all paths are relative to the\n    // Gruntfile's location (or the --base option, if specified).\n    process.chdir(grunt.option('base') || path.dirname(gruntfile));\n    // Load local tasks, if the file exists.\n    loadTasksMessage('Gruntfile');\n    loadTask(gruntfile);\n  } else if (options.help || allInit) {\n    // Don't complain about missing Gruntfile.\n  } else if (grunt.option('gruntfile')) {\n    // If --config override was specified and it doesn't exist, complain.\n    grunt.log.writeln().write(msg).error();\n    grunt.fatal('Unable to find \"' + gruntfile + '\" Gruntfile.', grunt.fail.code.MISSING_GRUNTFILE);\n  } else if (!grunt.option('help')) {\n    grunt.verbose.writeln().write(msg).error();\n    grunt.log.writelns(\n      'A valid Gruntfile could not be found. Please see the getting ' +\n      'started guide for more information on how to configure grunt: ' +\n      'http://gruntjs.com/getting-started'\n    );\n    grunt.fatal('Unable to find Gruntfile.', grunt.fail.code.MISSING_GRUNTFILE);\n  }\n\n  // Load all user-specified --npm tasks.\n  (grunt.option('npm') || []).forEach(task.loadNpmTasks);\n  // Load all user-specified --tasks.\n  (grunt.option('tasks') || []).forEach(task.loadTasks);\n};\n"]}