{"version":3,"sources":["bump.js"],"names":[],"mappings":"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","file":"bump-compiled.js","sourcesContent":["/*\n * grunt-contrib-bump\n * http://gruntjs.com/\n *\n * Copyright (c) 2014 \"Cowboy\" Ben Alman, contributors\n * Licensed under the MIT license.\n */\n\n'use strict';\n\nvar semver = require('semver');\nvar shell = require('shelljs');\n\nmodule.exports = function(grunt) {\n\n  grunt.registerTask('bump', 'Bump the version property of a JSON file.', function() {\n    // Validate specified semver increment modes.\n    var valids = ['major', 'minor', 'patch', 'prerelease'];\n    var modes = [];\n    this.args.forEach(function(mode) {\n      var matches = [];\n      valids.forEach(function(valid) {\n        if (valid.indexOf(mode) === 0) { matches.push(valid); }\n      });\n      if (matches.length === 0) {\n        grunt.log.error('Error: mode \"' + mode + '\" does not match any known modes.');\n      } else if (matches.length > 1) {\n        grunt.log.error('Error: mode \"' + mode + '\" is ambiguous (possibly: ' + matches.join(', ') + ').');\n      } else {\n        modes.push(matches[0]);\n      }\n    });\n    if (this.errorCount === 0 && modes.length === 0) {\n      grunt.log.error('Error: no modes specified.');\n    }\n    if (this.errorCount > 0) {\n      grunt.log.error('Valid modes are: ' + valids.join(', ') + '.');\n      throw new Error('Use valid modes (or unambiguous mode abbreviations).');\n    }\n    // Options.\n    var options = this.options({\n      filepaths: ['package.json'],\n      syncVersions: false,\n      commit: true,\n      commitMessage: 'Bumping version to {%= version %}.',\n      tag: true,\n      tagName: 'v{%= version %}',\n      tagMessage: 'Version {%= version %}',\n      tagPrerelease: false,\n    });\n    // Normalize filepaths to array.\n    var filepaths = Array.isArray(options.filepaths) ? options.filepaths : [options.filepaths];\n    // Process JSON files, in-order.\n    var versions = {};\n    filepaths.forEach(function(filepath) {\n      var o = grunt.file.readJSON(filepath);\n      var origVersion = o.version;\n      // If syncVersions is enabled, only grab version from the first file,\n      // guaranteeing new versions will always be in sync.\n      var firstVersion = Object.keys(versions)[0];\n      if (options.syncVersions && firstVersion) {\n        o.version = firstVersion;\n      }\n      modes.forEach(function(mode) {\n        var orig = o.version;\n        var s = semver.parse(o.version);\n        s.inc(mode);\n        o.version = String(s);\n        // Workaround for https://github.com/isaacs/node-semver/issues/50\n        if (/-/.test(orig) && mode === 'patch') {\n          o.version = o.version.replace(/\\d+$/, function(n) { return n - 1; });\n        }\n        // If prerelease on an un-prerelease version, bump patch version first\n        if (!/-/.test(orig) && mode === 'prerelease') {\n          s.inc('patch');\n          s.inc('prerelease');\n          o.version = String(s);\n        }\n      });\n      if (versions[origVersion]) {\n        versions[origVersion].filepaths.push(filepath);\n      } else {\n        versions[origVersion] = {version: o.version, filepaths: [filepath]};\n      }\n      // Actually *do* something.\n      grunt.log.write('Bumping version in ' + filepath + ' from ' + origVersion + ' to ' + o.version + '...');\n      grunt.file.write(filepath, JSON.stringify(o, null, 2));\n      grunt.log.ok();\n    });\n    // Commit changed files?\n    if (options.commit) {\n      Object.keys(versions).forEach(function(origVersion) {\n        var o = versions[origVersion];\n        commit(o.filepaths, processTemplate(options.commitMessage, {\n          version: o.version,\n          origVersion: origVersion\n        }));\n      });\n    }\n    // We're only going to create one tag. And it's going to be the new\n    // version of the first bumped file. Because, sanity.\n    var newVersion = versions[Object.keys(versions)[0]].version;\n    if (options.tag) {\n      if (options.tagPrerelease || modes.indexOf('prerelease') === -1) {\n        tag(\n          processTemplate(options.tagName, {version: newVersion}),\n          processTemplate(options.tagMessage, {version: newVersion})\n        );\n      } else {\n        grunt.log.writeln('Not tagging (prerelease version).');\n      }\n    }\n    if (this.errorCount > 0) {\n      grunt.warn('There were errors.');\n    }\n  });\n\n  // Using custom delimiters keeps templates from being auto-processed.\n  grunt.template.addDelimiters('bump', '{%', '%}');\n\n  function processTemplate(message, data) {\n    return grunt.template.process(message, {\n      delimiters: 'bump',\n      data: data,\n    });\n  }\n\n  // Kinda borrowed from https://github.com/geddski/grunt-release\n  function commit(filepaths, message) {\n    grunt.log.writeln('Committing ' + filepaths.join(', ') + ' with message: ' + message);\n    run(\"git commit -m '\" + message + \"' '\" + filepaths.join(\"' '\") + \"'\");\n  }\n\n  function tag(name, message) {\n    grunt.log.writeln('Tagging ' + name + ' with message: ' + message);\n    run(\"git tag '\" + name + \"' -m '\" + message + \"'\");\n  }\n\n  function run(cmd) {\n    if (grunt.option('no-write')) {\n      grunt.verbose.writeln('Not actually running: ' + cmd);\n    } else {\n      grunt.verbose.writeln('Running: ' + cmd);\n      var result = shell.exec(cmd, {silent:true});\n      if (result.code !== 0) {\n        grunt.log.error('Error (' + result.code + ') ' + result.output);\n      }\n    }\n  }\n\n};"]}